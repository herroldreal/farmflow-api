var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Account.html",[0,1.843,1,2.237]],["body/interfaces/Account.html",[0,2.936,1,3.563,2,3.172,3,0.192,4,0.153,5,0.172,6,4.405,7,0.232,8,1.238,9,3.232,10,2.945,11,1.032,12,5.757,13,3.232,14,2.435,15,2.249,16,0.354,17,0.014,18,1.443,19,0.242,20,2.554,21,3.971,22,2.554,23,0.011,24,0.011]],["title/interfaces/Account-1.html",[0,1.538,1,1.867,25,2.623]],["body/interfaces/Account-1.html",[0,2.373,1,3.606,2,3.233,3,0.195,4,0.156,5,0.176,7,0.236,8,1.253,10,2.876,11,1.008,13,3.254,14,2.378,16,0.355,17,0.014,18,1.442,19,0.195,23,0.011,24,0.011,26,4.489,27,0.751,28,2.467,29,5.323]],["title/modules/AccountModule.html",[30,1.56,31,2.682]],["body/modules/AccountModule.html",[3,0.194,4,0.155,5,0.174,17,0.014,19,0.194,23,0.011,24,0.011,30,2.734,31,5.406,32,2.581,33,3.02,34,3.424,35,3.424,36,3.02,37,3.921,38,3.921,39,4.453,40,4.453,41,4.453,42,5.117,43,5.117,44,4.3,45,3.424,46,3.424,47,5.119,48,0.322,49,1.108,50,5.119,51,4.453,52,0.251]],["title/injectables/AccountService.html",[42,2.511,53,0.899]],["body/injectables/AccountService.html",[1,3.906,3,0.151,4,0.12,5,0.135,7,0.182,9,1.752,10,2.12,11,0.847,12,3.121,14,1.753,16,0.249,17,0.014,19,0.151,20,2.007,21,3.121,23,0.009,24,0.009,27,0.514,42,3.413,43,4.635,48,0.32,49,0.861,51,3.462,52,0.195,53,1.223,54,1.612,55,3.462,56,1.463,57,0.711,58,2.237,59,4.74,60,1.888,61,2.348,62,3.214,63,0.436,64,3.98,65,1.362,66,2.506,67,4.74,68,3.98,69,1.031,70,1.961,71,3.98,72,2.493,73,1.915,74,2.493,75,2.007,76,1.612,77,1.68,78,3.98,79,2.207,80,2.3,81,3.98,82,2.663,83,2.072,84,3.462,85,3.081,86,3.98,87,3.98,88,3.98,89,3.121,90,3.98,91,3.98,92,3.98,93,3.98,94,3.121,95,4.74,96,3.462,97,3.98,98,3.98,99,3.98,100,3.98,101,3.98,102,3.98,103,2.621,104,6.213,105,3.98,106,3.462,107,3.462,108,3.98,109,3.98,110,3.98,111,3.98,112,3.98,113,3.98,114,1.314,115,3.98,116,3.98,117,5.449,118,3.98,119,2.493,120,2.866,121,3.98,122,3.98]],["title/classes/ApiResponseBuilder.html",[52,0.197,123,2.511]],["body/classes/ApiResponseBuilder.html",[3,0.146,4,0.116,5,0.131,7,0.176,11,0.726,15,1.713,16,0.28,17,0.014,18,1.295,19,0.146,22,3.873,23,0.009,24,0.009,27,0.502,48,0.244,52,0.189,56,1.43,63,0.489,65,1.526,69,1.581,114,1.472,123,3.337,124,0.747,125,5.731,126,3.35,127,5.464,128,6.589,129,5.861,130,5.327,131,3.851,132,5.588,133,3.341,134,5.281,135,2.796,136,3.851,137,4.408,138,3.155,139,3.851,140,1.498,141,1.335,142,2.473,143,5.327,144,3.851,145,5.327,146,2.576,147,2.576,148,3.851,149,3.851,150,3.851,151,2.449,152,3.143,153,3.143,154,3.143,155,3.143,156,3.563,157,3.563,158,1.625,159,2.576]],["title/modules/AppModule.html",[30,1.56,160,2.886]],["body/modules/AppModule.html",[3,0.142,4,0.113,5,0.127,17,0.014,19,0.142,23,0.009,24,0.009,30,2.341,32,1.888,33,2.209,34,2.505,35,2.505,36,2.209,37,2.915,38,2.09,44,3.495,45,2.505,46,2.505,48,0.359,49,0.81,52,0.184,58,1.348,72,2.346,76,2.116,77,1.58,124,1.013,158,2.747,160,5.688,161,3.257,162,3.257,163,4.744,164,4.744,165,4.744,166,4.289,167,4.744,168,3.744,169,4.078,170,1.298,171,3.744,172,4.544,173,5.233,174,4.184,175,2.209,176,5.224,177,5.224,178,2.346,179,3.257,180,2.696,181,2.696,182,3.744,183,2.209,184,3.744,185,3.744,186,3.762,187,3.257,188,3.762,189,2.936,190,2.209,191,3.744,192,3.744,193,3.257,194,3.257,195,3.257,196,3.744,197,4.096,198,3.744,199,3.257,200,3.744,201,3.744,202,3.082,203,3.744,204,3.744,205,3.744,206,3.744,207,3.257,208,3.257,209,3.744,210,3.257,211,3.744,212,3.744,213,3.744,214,3.762,215,3.744,216,3.744,217,1.457,218,2.936,219,3.744]],["title/controllers/AuthController.html",[220,2.123,221,2.886]],["body/controllers/AuthController.html",[1,4.397,3,0.185,4,0.148,5,0.166,7,0.223,11,0.666,16,0.223,17,0.014,19,0.185,20,2.462,23,0.01,24,0.01,27,0.46,48,0.315,49,1.056,52,0.24,56,1.674,57,0.787,58,2.474,60,1.692,62,3.001,63,0.391,65,1.22,66,2.245,69,1.264,70,2.245,72,4.306,75,2.462,76,1.977,77,2.06,79,2.526,80,2.06,83,1.514,85,2.149,94,3.828,114,1.177,142,2.526,220,2.586,221,4.492,222,2.88,223,4.246,224,3.828,225,6.237,226,4.882,227,1.22,228,6.237,229,4.882,230,3.828,231,3.515,232,3.481,233,4.882,234,4.882,235,4.882,236,4.246,237,4.882,238,4.246,239,4.246,240,2.245,241,2.586]],["title/modules/AuthModule.html",[30,1.56,163,2.682]],["body/modules/AuthModule.html",[3,0.169,4,0.135,5,0.152,17,0.014,19,0.169,23,0.01,24,0.01,30,2.56,31,4.997,32,2.248,33,2.63,34,2.982,35,2.982,36,2.63,37,3.672,38,3.672,44,3.933,45,2.982,46,2.982,48,0.358,49,0.965,52,0.219,73,2.144,158,1.881,163,5.323,169,3.683,173,3.877,175,2.63,179,5.115,180,3.21,181,3.21,188,4.234,193,3.877,194,3.877,195,3.877,232,4.47,242,3.877,243,3.877,244,4.457,245,3.877,246,4.997,247,4.457,248,4.457,249,3.877,250,4.234,251,4.457,252,4.457,253,4.457,254,4.234,255,3.877,256,4.457,257,2.792,258,2.792,259,4.457,260,3.877,261,3.877,262,3.877,263,3.877]],["title/injectables/AuthSerializer.html",[53,0.899,246,2.682]],["body/injectables/AuthSerializer.html",[3,0.166,4,0.133,5,0.15,7,0.201,11,0.794,16,0.299,17,0.014,19,0.166,20,4.003,23,0.01,24,0.01,27,0.549,48,0.299,49,0.951,52,0.216,53,1.307,54,1.78,56,1.564,57,0.851,63,0.467,65,1.456,69,1.509,82,2.94,83,1.363,85,1.935,103,3.347,119,2.753,133,2.877,240,2.679,246,3.897,264,3.823,265,2.267,266,6.534,267,5.825,268,5.825,269,5.825,270,6.471,271,5.617,272,4.395,273,5.549,274,4.395,275,3.897,276,5.825,277,4.395,278,4.395,279,3.823,280,3.823,281,5.825,282,4.395,283,3.165,284,4.395]],["title/injectables/AuthService.html",[53,0.899,232,2.237]],["body/injectables/AuthService.html",[1,4.077,3,0.171,4,0.137,5,0.154,7,0.207,10,1.759,11,0.959,14,1.454,16,0.322,17,0.014,18,1.148,19,0.171,20,2.28,23,0.01,24,0.01,27,0.624,42,4.407,48,0.322,49,0.978,52,0.222,53,1.332,54,1.831,56,1.593,57,0.858,58,2.699,59,5.163,60,1.567,63,0.531,65,1.656,67,5.163,69,1.537,70,2.532,72,2.832,73,2.175,74,2.832,83,1.402,85,1.99,103,2.855,114,1.431,158,1.908,232,3.312,255,3.933,280,3.933,285,3.933,286,5.935,287,4.521,288,4.521,289,4.521,290,5.935,291,4.521,292,3.545,293,3.545,294,4.521,295,5.935,296,4.521,297,4.521,298,4.521,299,4.521]],["title/guards/AuthenticatedGuard.html",[300,3.143,301,3.143]],["body/guards/AuthenticatedGuard.html",[3,0.169,4,0.135,5,0.152,7,0.205,11,0.898,15,1.894,16,0.321,17,0.014,19,0.169,23,0.01,24,0.01,27,0.621,48,0.321,49,0.967,52,0.219,53,1.321,56,1.581,57,0.855,60,1.548,63,0.528,65,1.646,69,1.525,83,2.043,114,1.688,158,1.886,178,2.799,293,3.503,301,4.618,302,3.503,303,3.886,304,6.091,305,5.122,306,3.886,307,6.501,308,4.468,309,5.122,310,4.773,311,4.468,312,4.241,313,5.122,314,4.468,315,4.062,316,3.886,317,3.503,318,2.367,319,2.636,320,2.989,321,5.889,322,4.468,323,3.886,324,4.468,325,4.468,326,3.886,327,3.217,328,2.799,329,3.886,330,3.886,331,3.886]],["title/classes/BankInfo.html",[52,0.197,332,2.021]],["body/classes/BankInfo.html",[3,0.123,4,0.098,5,0.11,7,0.148,8,0.914,9,1.426,10,1.26,11,0.442,13,1.426,14,1.042,15,2.381,16,0.297,17,0.014,18,1.355,19,0.264,23,0.008,24,0.008,27,0.698,28,1.081,48,0.216,52,0.332,57,0.95,63,0.519,124,0.628,135,2.423,140,1.26,141,1.123,151,2.803,170,1.123,227,1.619,265,1.26,332,3.408,333,1.808,334,3.276,335,3.276,336,3.276,337,3.402,338,3.276,339,2.978,340,3.239,341,3.239,342,3.239,343,3.239,344,3.239,345,2.267,346,1.911,347,1.911,348,3.099,349,1.911,350,2.78,351,1.911,352,1.911,353,1.911,354,1.911,355,1.911,356,1.911,357,1.911,358,1.911,359,1.911,360,1.911,361,1.911,362,3.099,363,1.911,364,3.099,365,2.629,366,1.911,367,3.099,368,1.911,369,1.911,370,3.099,371,1.911,372,1.911,373,1.911,374,1.911,375,1.911,376,1.911,377,1.426,378,1.911,379,1.426,380,1.911,381,1.911,382,1.633]],["title/classes/BankInfoDto.html",[52,0.197,383,2.886]],["body/classes/BankInfoDto.html",[3,0.174,4,0.139,5,0.156,7,0.21,8,1.164,15,2.423,16,0.336,17,0.014,18,1.227,19,0.174,23,0.01,24,0.01,27,0.748,48,0.21,52,0.226,57,0.934,63,0.588,124,0.892,140,1.789,141,1.593,151,2.759,170,1.593,227,1.835,334,3.941,335,3.941,336,3.941,337,3.728,338,3.941,339,2.879,383,4.321,384,6.553,385,3.999,386,4.598,387,4.598,388,4.598,389,4.598,390,4.598]],["title/classes/BaseModel.html",[52,0.197,345,1.928]],["body/classes/BaseModel.html",[3,0.198,4,0.158,5,0.178,7,0.24,8,1.264,16,0.298,17,0.014,18,1.287,19,0.198,23,0.011,24,0.011,27,0.614,48,0.298,52,0.32,57,0.892,63,0.522,124,1.015,140,2.036,141,1.813,170,1.813,217,2.535,227,1.628,339,2.555,345,3.135,391,4.551,392,4.446,393,5.565,394,4.082,395,4.102,396,5.232,397,3.768,398,5.232,399,4.359,400,4.748,401,2.638]],["title/modules/BaseModule.html",[30,1.56,164,2.682]],["body/modules/BaseModule.html",[3,0.214,4,0.171,5,0.192,17,0.014,19,0.214,23,0.011,24,0.011,30,2.659,32,2.851,48,0.349,49,1.223,52,0.277,164,4.571,169,3.541,221,5.288,222,4.333,402,5.653,403,5.288,404,5.944,405,4.433,406,5.944,407,4.071,408,5.653]],["title/modules/CommonModule.html",[30,1.56,165,2.682]],["body/modules/CommonModule.html",[3,0.202,4,0.161,5,0.181,11,0.725,16,0.244,17,0.014,19,0.202,23,0.011,24,0.011,27,0.501,30,2.562,32,2.683,37,3.99,38,2.969,48,0.327,49,1.151,52,0.261,56,1.428,57,0.753,63,0.426,65,1.329,69,1.378,83,1.65,165,4.405,254,4.741,273,4.741,320,3.559,409,4.172,410,5.32,411,6.584,412,7.471,413,5.32,414,5.32,415,6.584,416,3.831,417,3.831,418,5.607,419,4.628,420,5.32]],["title/injectables/ConfigService.html",[53,0.899,174,2.365]],["body/injectables/ConfigService.html",[3,0.191,4,0.153,5,0.172,7,0.231,11,0.689,16,0.32,17,0.014,19,0.191,22,2.547,23,0.011,24,0.011,27,0.476,48,0.32,49,1.093,52,0.248,53,1.43,54,2.046,56,1.711,57,0.799,63,0.404,65,1.593,69,1.308,83,1.566,114,1.218,141,2.42,158,2.132,174,4.12,175,2.98,190,3.76,217,1.965,265,2.48,421,4.393,422,6.983,423,5.051,424,7.334,425,5.051,426,6.983,427,6.983,428,3.164,429,5.051,430,5.051,431,5.051,432,3.164,433,5.051]],["title/classes/CreateOwnerDto.html",[52,0.197,434,2.682]],["body/classes/CreateOwnerDto.html",[3,0.141,4,0.113,5,0.127,7,0.171,8,1.01,9,2.643,10,2.336,11,0.819,13,2.643,14,1.931,15,1.676,16,0.349,17,0.014,18,1.394,19,0.141,23,0.009,24,0.009,27,0.719,28,2.004,29,4.323,48,0.171,52,0.256,57,0.947,63,0.611,124,0.723,158,2.199,227,1.907,379,2.643,399,4.863,400,5.246,401,1.881,434,3.485,435,6.709,436,2.686,437,3.761,438,4.323,439,3.244,440,3.73,441,6.003,442,3.73,443,3.73,444,3.73,445,3.73,446,3.73,447,2.925,448,3.73,449,3.73,450,3.73,451,3.73,452,3.244,453,3.73,454,4.085,455,4.532,456,5.209,457,2.925]],["title/injectables/EmailService.html",[43,2.511,53,0.899]],["body/injectables/EmailService.html",[3,0.149,4,0.119,5,0.133,7,0.18,10,2.8,11,0.736,16,0.247,17,0.014,18,1.068,19,0.149,23,0.009,24,0.009,27,0.508,43,4.16,48,0.319,49,0.849,52,0.192,53,1.21,54,1.589,56,1.448,58,2.22,60,1.87,62,3.195,63,0.432,65,1.348,66,2.835,69,1.016,70,1.942,75,2.72,76,1.589,77,1.655,79,2.498,80,2.602,82,2.624,83,1.673,85,1.727,106,3.412,119,2.457,120,2.825,133,2.375,140,1.526,141,1.359,142,1.589,151,1.804,158,2.938,174,4.348,175,2.314,180,2.825,181,2.825,202,2.314,240,2.835,241,3.267,458,3.412,459,5.395,460,3.923,461,6.641,462,3.923,463,5.395,464,5.777,465,4.835,466,6.641,467,3.923,468,3.923,469,3.412,470,3.923,471,3.923,472,5.395,473,3.923,474,3.923,475,3.923,476,3.923,477,3.923,478,3.923,479,3.923,480,3.923,481,3.923,482,5.395,483,3.923,484,3.923,485,3.923,486,2.624,487,3.923,488,3.923,489,3.923,490,3.923,491,3.923,492,3.923,493,3.923]],["title/classes/ExceptionsFilter.html",[52,0.197,186,2.886]],["body/classes/ExceptionsFilter.html",[3,0.143,4,0.114,5,0.129,7,0.173,8,1.02,11,0.717,16,0.277,17,0.014,19,0.143,23,0.009,24,0.009,27,0.496,48,0.299,49,0.818,52,0.186,56,1.412,57,0.692,63,0.484,65,1.314,66,3.422,69,1.362,79,2.881,80,2.552,83,2.027,114,0.912,119,4.096,124,0.733,134,3.788,140,1.472,141,1.311,152,2.231,153,2.231,154,2.231,155,2.231,178,2.369,186,3.788,217,2.047,231,2.723,265,1.472,271,3.788,273,3.788,283,4.355,315,2.111,316,3.29,318,2.003,319,2.231,320,3.519,327,2.723,428,2.369,494,3.29,495,6.048,496,5.26,497,3.782,498,5.26,499,5.687,500,6.538,501,3.782,502,7.114,503,5.26,504,3.782,505,6.048,506,5.26,507,5.26,508,3.782,509,5.127,510,3.782,511,3.782,512,3.782,513,3.519,514,2.369,515,2.53,516,2.965,517,3.782,518,5.26,519,2.965,520,3.782,521,3.782,522,3.782,523,3.782,524,3.782,525,3.782,526,3.782,527,3.782,528,5.26,529,5.26,530,3.782,531,3.782,532,3.782,533,3.782,534,3.782]],["title/classes/Farm.html",[52,0.197,535,1.765]],["body/classes/Farm.html",[3,0.111,4,0.088,5,0.099,7,0.134,8,0.847,11,0.713,16,0.358,17,0.014,18,1.399,19,0.111,23,0.007,24,0.007,27,0.747,28,1.746,48,0.2,52,0.144,57,0.954,63,0.627,89,4.102,124,0.567,135,2.597,140,1.138,141,1.014,170,1.014,217,1.138,227,1.957,265,1.7,339,2.94,345,2.988,392,2.737,393,3.426,394,1.832,395,2.293,397,2.106,437,3.277,438,3.767,535,1.924,536,2.544,537,4.55,538,3.767,539,4.55,540,4.55,541,3.767,542,4.55,543,4.55,544,4.55,545,4.102,546,4.55,547,4.55,548,3.277,549,2.925,550,2.925,551,2.925,552,2.925,553,2.925,554,2.925,555,2.925,556,2.925,557,2.925,558,2.925,559,2.925,560,2.925,561,2.925,562,2.925,563,2.925,564,2.925,565,1.725,566,2.925,567,3.426,568,2.544,569,2.544,570,2.925,571,1.632]],["title/controllers/FarmController.html",[220,2.123,572,2.886]],["body/controllers/FarmController.html",[3,0.097,4,0.077,5,0.087,7,0.117,11,0.908,14,0.824,16,0.305,17,0.014,19,0.097,23,0.007,24,0.007,27,0.628,48,0.347,49,0.554,52,0.126,56,1.06,57,0.67,58,2.829,60,0.888,62,1.901,63,0.533,65,1.664,66,1.178,69,1.725,70,2.707,73,1.232,75,1.292,76,1.037,77,1.081,79,1.6,80,1.081,114,1.606,133,3.073,138,2.288,142,1.037,220,1.357,222,1.511,224,2.008,227,1.664,230,3.098,231,1.844,257,1.604,258,1.604,535,3.073,572,2.845,573,2.228,574,3.098,575,4.195,576,3.437,577,4.195,578,3.437,579,3.098,580,3.098,581,3.098,582,2.008,583,3.198,584,2.561,585,2.561,586,2.561,587,3.454,588,3.253,589,3.896,590,3.52,591,2.561,592,2.561,593,3.904,594,2.228,595,3.951,596,2.561,597,2.228,598,3.951,599,2.561,600,2.228,601,3.396,602,2.561,603,5.421,604,2.561,605,2.008,606,3.396,607,2.561,608,2.561,609,2.008,610,3.396,611,2.561,612,2.561,613,2.008,614,3.396,615,2.561,616,2.561,617,2.008,618,1.844,619,2.008,620,1.713,621,2.228,622,1.713,623,1.604,624,1.604,625,1.713,626,1.604,627,1.844,628,3.098,629,2.643,630,3.098,631,2.008,632,2.008,633,1.844,634,2.561,635,2.228,636,3.021,637,2.228,638,2.008,639,2.228,640,2.561,641,2.228,642,2.561,643,2.228,644,5.095,645,2.228,646,2.228,647,2.561,648,2.561,649,2.561,650,2.561,651,2.561,652,2.561,653,2.561,654,2.561,655,2.561,656,2.561,657,2.561,658,5.421,659,5.421,660,2.561,661,4.823,662,2.692,663,2.228,664,4.195,665,2.561,666,2.561,667,2.561,668,2.561,669,2.561,670,2.561,671,3.437,672,2.561,673,2.561,674,2.561,675,2.561]],["title/classes/FarmDto.html",[52,0.197,583,2.365]],["body/classes/FarmDto.html",[3,0.096,4,0.077,5,0.086,7,0.116,8,0.76,11,0.653,16,0.344,17,0.014,18,1.3,19,0.096,23,0.007,24,0.007,27,0.718,28,1.599,48,0.304,52,0.235,57,0.941,63,0.601,89,3.756,124,0.491,132,4.78,135,2.483,141,1.868,151,3.052,156,1.695,170,0.878,218,4.57,227,1.876,339,2.742,397,4.197,399,4.558,400,4.441,401,1.278,437,3.001,438,3.45,537,4.167,538,4.438,539,4.167,540,4.167,541,4.438,542,5.589,543,5.589,544,4.167,546,4.167,547,4.167,571,1.414,583,2.312,676,2.204,677,4.167,678,2.534,679,2.534,680,5.39,681,3.918,682,2.534,683,3.918,684,5.39,685,5.39,686,4.227,687,2.534,688,2.534,689,2.534,690,2.534,691,3.918,692,2.534,693,2.534,694,3.918,695,2.534,696,5.39,697,2.534,698,2.534,699,5.39,700,2.534,701,3.756,702,3.918,703,2.534,704,2.534,705,2.534,706,2.534,707,2.534,708,2.534,709,2.534,710,3.756,711,3.918,712,2.534,713,1.987,714,2.534,715,2.534,716,4.79,717,2.534,718,2.534,719,2.534,720,2.534,721,2.204,722,2.534,723,2.621,724,5.828,725,4.79,726,3.918,727,5.39,728,2.534,729,2.534]],["title/classes/FarmMapperProfile.html",[52,0.197,730,2.886]],["body/classes/FarmMapperProfile.html",[3,0.187,4,0.149,5,0.168,7,0.226,11,0.674,16,0.226,17,0.014,19,0.187,23,0.011,24,0.011,27,0.466,48,0.333,52,0.243,60,1.714,63,0.504,65,1.236,76,2.003,114,1.192,124,0.959,183,2.918,265,2.447,428,3.098,535,3.204,583,4.08,627,3.561,730,4.529,731,6.016,732,3.878,733,6.016,734,5.471,735,5.423,736,4.302,737,5.335,738,4.302,739,4.302,740,4.302,741,5.471,742,4.302,743,4.932,744,3.098,745,4.302,746,3.308,747,4.302,748,4.302,749,4.302,750,4.302,751,4.302]],["title/injectables/FarmRepository.html",[53,0.899,752,2.365]],["body/injectables/FarmRepository.html",[3,0.062,4,0.049,5,0.055,7,0.074,11,0.796,16,0.267,17,0.014,19,0.062,22,0.82,23,0.005,24,0.005,27,0.55,28,0.543,48,0.331,49,0.352,52,0.08,53,0.614,54,0.659,56,0.735,58,2.635,60,0.948,61,0.959,62,1.999,63,0.468,65,1.459,66,1.258,69,1.453,70,2.449,73,0.782,75,0.82,76,1.108,77,0.686,79,1.878,80,1.155,82,2.78,83,2.36,85,3.202,103,1.705,107,1.414,114,1.713,119,2.604,120,2.993,123,1.019,133,2.353,138,2.121,142,0.659,146,1.088,147,1.088,152,1.615,153,1.615,154,1.615,155,1.615,156,1.088,157,1.088,158,1.754,159,3.362,183,0.959,202,0.959,217,1.065,240,2.132,241,2.457,377,2.212,379,1.205,392,1.019,394,1.019,514,1.019,515,1.088,516,1.275,535,3.067,548,1.714,574,2.146,579,2.146,580,2.146,581,2.146,582,2.146,583,2.736,587,2.588,588,2.695,589,3.132,590,3.043,601,2.604,605,2.146,606,2.604,609,2.146,610,2.604,613,2.146,614,2.604,623,1.019,624,1.019,626,1.019,627,1.171,628,2.146,629,1.831,630,2.146,631,1.275,632,1.275,662,1.978,663,3.615,664,3.615,671,3.615,677,3.082,737,3.575,744,1.019,745,1.414,746,1.831,752,1.615,753,1.414,754,2.38,755,2.737,756,2.737,757,2.737,758,3.082,759,4.732,760,3.082,761,3.543,762,1.626,763,1.626,764,2.38,765,1.626,766,2.38,767,2.737,768,1.626,769,2.737,770,1.626,771,2.737,772,1.626,773,1.626,774,1.626,775,1.626,776,1.275,777,1.414,778,3.082,779,2.552,780,1.527,781,0.907,782,2.38,783,1.414,784,1.414,785,1.171,786,1.626,787,1.626,788,1.019,789,1.414,790,1.275,791,1.626,792,1.414,793,1.626,794,1.626,795,2.146,796,2.779,797,3.082,798,1.626,799,1.414,800,2.38,801,1.414,802,2.38,803,1.971,804,1.626,805,1.626,806,1.626,807,1.414,808,1.971,809,1.626,810,1.626,811,1.626,812,3.082,813,1.971,814,1.626,815,1.626,816,1.414,817,2.38,818,1.414,819,4.649,820,4.156,821,4.4,822,2.38,823,2.38,824,1.626,825,1.626,826,1.626,827,1.414,828,2.38,829,1.626,830,1.626,831,1.626,832,1.414,833,1.414,834,1.626,835,1.626,836,1.275,837,1.626,838,1.626,839,1.626,840,4.637,841,1.626,842,1.626,843,1.626,844,1.626,845,1.626,846,1.626,847,1.626,848,1.275,849,1.626,850,1.626,851,2.737,852,1.626,853,1.626,854,2.736,855,2.737,856,4.156,857,2.737,858,2.737,859,4.156,860,4.156,861,2.737,862,2.737,863,4.156,864,1.626,865,2.737,866,2.737,867,4.156,868,2.737,869,4.156,870,4.156,871,2.737,872,4.156,873,1.626,874,4.156,875,3.615,876,2.737,877,1.626,878,1.626,879,1.626,880,1.626,881,2.146,882,2.737,883,2.737,884,1.626,885,2.737,886,2.737,887,2.737,888,2.737,889,2.737,890,1.626,891,2.737,892,2.737,893,1.626,894,1.626,895,1.626]],["title/injectables/FarmService.html",[53,0.899,636,2.511]],["body/injectables/FarmService.html",[3,0.103,4,0.082,5,0.092,7,0.124,11,0.948,16,0.318,17,0.014,19,0.103,23,0.007,24,0.007,27,0.655,28,0.908,48,0.339,49,0.588,52,0.133,53,0.928,54,1.101,56,1.11,57,0.906,58,2.85,60,1.433,61,1.604,62,2.691,63,0.557,65,1.738,66,1.902,69,1.758,70,2.736,75,2.086,76,1.101,77,1.148,79,1.675,80,1.745,83,1.552,114,1.637,133,2.649,138,2.539,142,1.101,147,1.819,159,4.24,240,2.302,241,2.652,486,4.24,535,2.649,574,3.243,576,3.598,577,3.598,578,3.598,579,3.243,580,3.243,581,3.243,582,3.243,583,3.3,587,3.358,588,3.322,589,3.881,590,3.576,594,3.598,597,3.598,600,3.598,601,3.504,605,3.243,606,3.504,609,3.243,610,3.504,613,3.243,614,3.504,623,1.703,624,1.703,626,1.703,627,1.958,628,3.243,629,2.767,630,3.243,631,2.132,632,2.132,633,1.958,636,2.591,662,1.518,752,3.3,754,3.598,764,3.598,803,1.958,827,2.365,828,4.354,896,2.365,897,3.604,898,2.719,899,2.719,900,2.719,901,2.719,902,2.719,903,2.719,904,2.719,905,2.719,906,2.719,907,2.365,908,2.719,909,2.365,910,2.719,911,2.719,912,2.719,913,2.719,914,2.719,915,2.719,916,2.719,917,2.719]],["title/interfaces/Filtering.html",[0,1.843,590,2.021]],["body/interfaces/Filtering.html",[0,1.764,2,2.403,3,0.145,4,0.116,5,0.13,7,0.176,8,1.03,16,0.279,17,0.014,18,1.269,19,0.231,23,0.009,24,0.009,48,0.279,49,0.83,83,2.316,114,1.281,141,2.539,157,2.566,217,2.559,240,1.764,310,3.327,315,2.964,319,2.263,328,2.403,347,2.263,432,4.12,513,2.566,571,3.671,589,4.088,590,3.483,622,2.566,918,2.762,919,5.855,920,6.595,921,5.722,922,6.577,923,3.336,924,3.007,925,3.336,926,3.336,927,4.62,928,3.835,929,3.336,930,3.336,931,3.336,932,3.336,933,4.778,934,3.336,935,3.336,936,3.336,937,3.007,938,3.336,939,3.007,940,3.336,941,3.336,942,3.336,943,3.007,944,3.007,945,3.336,946,3.336,947,3.336,948,3.336,949,3.336,950,4.62,951,4.778,952,4.778,953,3.336,954,3.336,955,3.336,956,3.336,957,3.336,958,3.336,959,3.336,960,3.336,961,3.336,962,3.336,963,3.336,964,3.336,965,3.336,966,3.336,967,4.165,968,3.336]],["title/classes/FirebaseAuthStrategy.html",[52,0.197,250,2.886]],["body/classes/FirebaseAuthStrategy.html",[3,0.197,4,0.157,5,0.177,7,0.238,11,0.709,16,0.238,17,0.014,19,0.197,20,2.624,23,0.011,24,0.011,27,0.49,48,0.297,52,0.255,56,1.743,58,2.548,60,2.453,63,0.52,65,1.3,69,1.347,70,2.337,73,2.503,114,1.254,124,1.009,250,4.676,257,3.259,258,3.259,260,4.526,261,4.526,262,4.526,263,4.526,265,2.527,428,3.259,944,5.092,969,6.158,970,4.526,971,7.079,972,5.203,973,6.494,974,7.413,975,5.203,976,6.494,977,5.203,978,5.203]],["title/modules/FirestoreModule.html",[30,1.56,166,2.511]],["body/modules/FirestoreModule.html",[0,2.079,3,0.171,4,0.137,5,0.154,11,0.616,16,0.207,17,0.014,19,0.171,23,0.01,24,0.01,27,0.426,30,2.578,32,2.28,37,2.523,38,2.523,48,0.322,49,0.978,52,0.222,56,1.213,63,0.362,65,1.13,69,1.171,83,2.055,114,1.09,127,4.274,158,1.908,166,4.151,169,3.718,174,3.501,175,2.667,190,2.667,197,5.516,202,4.15,214,4.771,217,1.759,254,3.256,509,3.545,780,2.523,781,2.523,979,3.545,980,4.521,981,5.163,982,5.066,983,4.521,984,3.933,985,5.763,986,4.771,987,4.771,988,3.256,989,3.933,990,4.274,991,4.654,992,5.163,993,3.933,994,3.933,995,5.763,996,3.933,997,5.763,998,3.933,999,3.933,1000,3.545,1001,3.933,1002,3.933]],["title/interfaces/FirestoreModuleOptions.html",[0,1.843,982,2.886]],["body/interfaces/FirestoreModuleOptions.html",[0,2.064,2,2.812,3,0.17,4,0.136,5,0.153,7,0.205,8,1.146,16,0.302,17,0.014,19,0.17,23,0.01,24,0.01,30,2.569,37,2.505,38,2.505,48,0.321,49,0.971,52,0.22,83,2.047,114,1.082,127,3.233,158,1.894,166,3.7,169,4.566,174,3.485,175,2.648,190,2.648,197,5.982,202,4.501,214,4.755,217,1.747,254,3.233,275,3.952,509,3.52,780,2.505,781,2.505,979,3.52,981,3.905,982,4.755,985,5.138,986,4.755,987,4.755,988,3.233,989,3.905,990,4.254,991,4.632,992,5.138,993,3.905,994,3.905,995,5.743,996,3.905,997,5.743,998,3.905,999,3.905,1000,3.52,1001,3.905,1002,3.905]],["title/injectables/GqlAuthGuard.html",[53,0.899,1003,3.143]],["body/injectables/GqlAuthGuard.html",[3,0.192,4,0.153,5,0.172,7,0.232,11,0.691,16,0.232,17,0.014,19,0.192,23,0.011,24,0.011,27,0.477,48,0.32,49,1.096,52,0.249,53,1.433,54,2.051,56,1.714,63,0.406,65,1.265,69,1.311,73,2.436,83,1.57,114,1.539,152,3.767,153,3.767,154,3.767,155,3.767,257,3.172,258,3.172,265,2.484,305,5.554,310,4.599,312,3.647,313,5.554,317,3.971,318,2.683,328,3.172,428,3.172,514,3.999,515,3.388,516,3.971,638,5.483,1003,5.006,1004,5.554,1005,4.405,1006,5.064,1007,5.064,1008,4.405,1009,5.064,1010,4.405,1011,4.405]],["title/controllers/HealthController.html",[220,2.123,403,2.886]],["body/controllers/HealthController.html",[3,0.192,4,0.153,5,0.173,7,0.232,17,0.014,19,0.192,23,0.011,24,0.011,48,0.32,49,1.099,52,0.249,56,1.717,57,0.867,58,2.645,60,1.76,63,0.407,69,1.315,70,2.52,79,2.59,114,1.224,187,4.417,220,3.388,222,2.996,227,1.269,403,4.605,407,3.657,939,5.762,1012,4.417,1013,3.982,1014,6.395,1015,5.078,1016,5.078,1017,6.395,1018,5.078,1019,6.395,1020,5.078,1021,6.395,1022,5.078,1023,4.417,1024,5.078,1025,5.078,1026,5.078,1027,5.078]],["title/classes/LinkFarmOwnerDto.html",[52,0.197,601,2.511]],["body/classes/LinkFarmOwnerDto.html",[3,0.204,4,0.163,5,0.183,7,0.246,8,1.286,16,0.304,17,0.014,18,1.3,19,0.204,23,0.011,24,0.011,48,0.246,52,0.325,57,0.898,63,0.531,124,1.043,227,1.657,379,3.164,401,2.713,436,3.874,447,4.219,535,3.164,545,5.635,601,4.153,723,4.808,1028,5.635,1029,4.774,1030,4.68,1031,4.808]],["title/classes/LinkFarmWorkerDto.html",[52,0.197,606,2.511]],["body/classes/LinkFarmWorkerDto.html",[3,0.204,4,0.163,5,0.183,7,0.246,8,1.286,16,0.304,17,0.014,18,1.3,19,0.204,23,0.011,24,0.011,48,0.246,52,0.325,57,0.898,63,0.531,124,1.043,227,1.657,379,3.164,401,2.713,535,3.164,606,4.153,723,4.808,1028,5.635,1029,4.774,1031,4.808,1032,4.219,1033,5.635,1034,4.68,1035,4.68]],["title/injectables/LoggerContextMiddleware.html",[53,0.899,416,2.886]],["body/injectables/LoggerContextMiddleware.html",[3,0.151,4,0.12,5,0.135,7,0.182,11,0.743,16,0.284,17,0.014,18,0.69,19,0.151,21,4.273,22,2.007,23,0.009,24,0.009,25,3.121,27,0.514,48,0.32,49,0.861,52,0.195,53,1.223,54,1.612,56,1.463,57,0.711,58,2.237,60,1.888,61,2.348,62,3.214,63,0.436,65,1.362,66,2.857,69,1.031,70,1.961,72,4.527,73,1.915,74,2.493,76,1.612,77,1.68,79,2.207,80,1.68,83,1.927,85,1.752,103,3.367,142,2.706,152,2.348,153,2.348,154,4.129,155,2.348,232,3.729,271,2.866,273,3.924,275,2.663,292,3.121,312,2.866,315,3.729,319,2.348,320,2.663,416,3.924,513,2.663,514,2.493,515,2.663,1008,3.462,1036,5.405,1037,3.462,1038,5.449,1039,3.98,1040,5.449,1041,6.213,1042,3.98,1043,5.449,1044,3.462,1045,3.98,1046,3.98,1047,3.98,1048,3.98,1049,3.98,1050,3.98,1051,3.98,1052,3.98,1053,3.98,1054,3.98,1055,3.98,1056,3.98,1057,3.98,1058,3.462,1059,3.98,1060,3.98,1061,3.98]],["title/classes/Owner.html",[52,0.197,662,2.237]],["body/classes/Owner.html",[3,0.159,4,0.127,5,0.143,7,0.192,8,1.096,9,2.488,10,2.199,11,0.771,13,2.488,14,1.818,15,1.351,16,0.354,17,0.014,18,1.322,19,0.159,23,0.01,24,0.01,27,0.719,28,1.887,29,4.07,48,0.192,52,0.206,57,0.933,63,0.619,103,3.818,124,0.815,140,1.634,141,1.456,227,1.931,265,2.199,339,2.746,437,3.541,565,2.478,567,6.061,662,3.154,784,3.654,854,3.335,1062,3.654,1063,4.201,1064,4.201,1065,4.201,1066,4.201,1067,4.201,1068,4.201,1069,4.201,1070,4.201,1071,4.201]],["title/injectables/OwnerRepository.html",[53,0.899,1072,2.886]],["body/injectables/OwnerRepository.html",[3,0.175,4,0.096,5,0.108,7,0.145,11,0.747,16,0.294,17,0.014,18,0.949,19,0.12,20,2.335,23,0.008,24,0.008,27,0.516,28,1.828,48,0.337,49,0.685,52,0.155,53,1.039,54,1.281,56,1.243,58,2.607,60,1.605,61,1.866,62,2.9,63,0.537,65,1.369,66,2.129,69,1.662,70,2.413,72,1.982,73,1.522,74,1.982,75,1.595,76,1.876,77,1.335,79,2.442,80,2.312,83,2.202,84,2.752,85,2.825,96,4.028,103,2.635,114,1.616,133,2.039,152,1.866,153,1.866,154,1.866,155,1.866,156,2.116,157,2.116,178,1.982,183,1.866,202,1.866,217,1.802,236,2.752,238,2.752,240,2.519,241,1.676,315,3.365,392,1.982,394,1.982,432,1.982,434,4.292,548,2.901,629,2.116,633,2.278,662,3.865,737,4.632,744,1.982,746,3.098,759,4.727,760,4.765,780,1.766,781,1.766,808,2.278,833,2.752,836,2.481,1072,3.335,1073,2.752,1074,4.631,1075,6.029,1076,4.631,1077,6.029,1078,6.029,1079,4.631,1080,3.164,1081,4.631,1082,3.164,1083,3.164,1084,4.631,1085,3.164,1086,3.164,1087,3.164,1088,2.752,1089,3.164,1090,3.164,1091,3.164,1092,3.164,1093,3.164,1094,3.164,1095,3.164,1096,3.164,1097,3.164,1098,3.164,1099,3.164,1100,3.164,1101,2.752,1102,3.164,1103,3.164,1104,2.752,1105,3.164,1106,3.164,1107,3.164,1108,3.164,1109,3.164,1110,3.164,1111,3.164,1112,3.164,1113,3.164,1114,3.164]],["title/classes/PaginatedResponseData.html",[52,0.197,1115,2.886]],["body/classes/PaginatedResponseData.html",[3,0.206,4,0.164,5,0.185,7,0.249,8,1.295,15,1.751,16,0.306,17,0.014,18,0.943,19,0.206,23,0.011,24,0.011,27,0.71,48,0.249,52,0.328,57,0.862,63,0.535,124,1.055,129,4.267,132,3.919,133,2.396,134,3.919,135,2.036,137,4.467,138,3.32,142,2.204,146,3.641,159,4.832,1115,5.201,1116,4.267,1117,5.442,1118,5.442]],["title/classes/Pagination.html",[52,0.197,138,1.692]],["body/classes/Pagination.html",[3,0.158,4,0.126,5,0.142,7,0.191,8,1.09,11,0.969,15,1.807,16,0.325,17,0.014,18,1.102,19,0.213,22,2.833,23,0.009,24,0.009,27,0.529,48,0.257,52,0.276,57,0.926,63,0.569,114,1.004,124,0.807,135,2.801,138,2.684,227,1.776,318,2.206,779,4.046,780,2.324,781,2.324,788,2.608,813,4.046,881,5.743,1119,3.265,1120,6.371,1121,6.371,1122,6.05,1123,6.371,1124,6.371,1125,7.109,1126,4.164,1127,4.164,1128,4.164,1129,4.164,1130,4.164,1131,4.046,1132,3.622,1133,4.887,1134,3.622]],["title/classes/PaginationBuilder.html",[52,0.197,788,2.511]],["body/classes/PaginationBuilder.html",[3,0.17,4,0.136,5,0.153,7,0.206,11,1.021,15,1.447,16,0.206,17,0.014,18,1.217,19,0.224,22,3.678,23,0.01,24,0.01,27,0.424,48,0.271,52,0.29,56,1.588,57,0.886,63,0.36,65,1.124,69,1.165,114,1.085,124,0.873,135,2.802,138,2.79,140,1.751,141,1.559,318,2.384,779,5.057,780,2.511,781,2.511,788,3.706,808,3.24,813,5.057,881,5.872,1119,3.528,1120,5.75,1121,5.75,1122,6.074,1123,5.75,1124,5.75,1131,4.26,1132,5.146,1133,5.146,1134,3.914,1135,5.916,1136,4.5]],["title/classes/Payload.html",[20,2.021,52,0.197]],["body/classes/Payload.html",[3,0.195,4,0.156,5,0.176,7,0.236,8,1.253,14,2.269,16,0.338,17,0.014,18,1.38,19,0.195,20,3.258,23,0.011,24,0.011,27,0.609,48,0.236,52,0.253,57,0.936,63,0.592,95,6.135,124,1.001,140,2.008,141,1.788,318,2.734,379,3.105,1131,4.652,1137,4.489,1138,6.135,1139,5.161,1140,5.161,1141,5.161,1142,5.161]],["title/classes/Response.html",[52,0.197,142,1.624]],["body/classes/Response.html",[3,0.195,4,0.156,5,0.175,7,0.236,8,1.251,15,2.075,16,0.338,17,0.014,18,1.117,19,0.195,23,0.011,24,0.011,27,0.608,48,0.236,52,0.317,57,0.935,63,0.591,124,0.998,129,5.523,132,5.072,133,3.101,134,5.072,135,2.413,137,3.443,138,2.973,142,2.612,146,3.443,159,3.443,1115,5.072,1116,4.036,1143,5.147,1144,5.147,1145,5.147,1146,5.147]],["title/modules/RestModule.html",[30,1.56,167,2.682]],["body/modules/RestModule.html",[3,0.165,4,0.132,5,0.148,17,0.014,19,0.165,23,0.01,24,0.01,30,2.531,32,2.196,33,2.569,34,2.913,35,2.913,36,2.569,37,3.63,38,3.63,44,3.873,45,2.913,46,2.913,48,0.36,49,0.942,52,0.214,167,5.398,169,2.728,222,3.837,404,5.036,405,3.415,406,5.036,407,3.136,572,4.684,636,5,637,3.788,730,4.169,735,4.54,752,4.378,907,3.788,1147,3.788,1148,3.788,1149,3.788,1150,5,1151,4.648,1152,4.355,1153,4.684,1154,4.355,1155,4.169,1156,4.355,1157,3.788,1158,3.788]],["title/guards/RolesGuard.html",[300,3.143,620,2.682]],["body/guards/RolesGuard.html",[3,0.162,4,0.13,5,0.146,7,0.196,11,0.781,14,1.379,16,0.262,17,0.014,19,0.162,23,0.01,24,0.01,27,0.54,48,0.338,49,0.928,52,0.21,53,1.285,56,1.538,57,0.738,58,2.323,60,1.985,63,0.459,65,1.431,69,1.11,70,2.062,79,2.32,80,1.809,83,2.29,85,1.887,114,1.033,178,2.685,214,3.086,217,1.668,232,4.209,249,3.728,292,3.361,302,3.361,304,5.992,306,3.728,307,6.425,309,4.983,310,4.315,312,3.086,315,2.392,317,3.361,318,2.271,320,2.867,323,3.728,328,2.685,432,2.685,617,3.361,619,3.361,620,3.832,1010,3.728,1011,3.728,1044,4.983,1159,3.728,1160,4.286,1161,4.286,1162,3.361,1163,4.286,1164,4.286,1165,4.286,1166,4.286,1167,4.286,1168,4.286,1169,4.286,1170,4.286,1171,4.286,1172,3.728,1173,4.286,1174,4.286,1175,4.286,1176,4.286]],["title/classes/SalaryHistory.html",[52,0.197,364,2.237]],["body/classes/SalaryHistory.html",[3,0.133,4,0.106,5,0.12,7,0.161,8,0.969,9,1.548,10,1.368,11,0.479,13,1.548,14,1.131,15,2.299,16,0.229,17,0.014,18,1.364,19,0.271,23,0.008,24,0.008,27,0.597,28,1.173,48,0.229,52,0.341,57,0.95,63,0.4,124,0.682,135,2.6,151,2.673,170,1.218,227,1.249,265,1.368,332,3.372,333,1.962,334,2.074,335,2.074,336,2.074,337,2.789,338,2.074,339,2.984,345,2.404,346,2.074,347,2.074,348,3.244,349,2.074,350,2.948,351,2.074,352,2.074,353,2.074,354,2.074,355,2.074,356,2.074,357,2.074,358,2.074,359,2.074,360,2.074,361,2.074,362,3.244,363,2.074,364,3.533,365,3.533,366,3.43,367,3.244,368,2.074,369,2.074,370,3.244,371,2.074,372,2.074,373,2.074,374,2.074,375,2.074,376,2.074,377,1.548,378,2.074,379,1.548,380,2.074,381,2.074,382,1.773,1177,3.515,1178,3.515]],["title/classes/SalaryHistoryDto.html",[52,0.197,1179,2.886]],["body/classes/SalaryHistoryDto.html",[3,0.206,4,0.164,5,0.185,7,0.248,8,1.292,16,0.305,17,0.014,18,1.155,19,0.206,23,0.011,24,0.011,27,0.709,48,0.248,52,0.266,57,0.9,63,0.534,124,1.052,135,2.493,170,1.881,227,1.665,339,2.78,365,4.026,366,4.256,1179,4.799,1180,6.275,1181,4.72,1182,5.426,1183,5.426]],["title/interfaces/Sorting.html",[0,1.843,588,2.021]],["body/interfaces/Sorting.html",[0,2.064,2,2.812,3,0.17,4,0.136,5,0.153,7,0.205,8,1.146,16,0.27,17,0.014,18,1.144,19,0.224,22,3.329,23,0.01,24,0.01,48,0.302,49,0.971,83,2.366,114,1.424,217,2.569,240,2.716,310,3.7,315,3.297,319,2.648,328,2.812,432,4.136,513,3.003,587,4.068,588,3.329,625,3.003,919,6.071,921,6.102,923,3.905,924,3.52,925,3.905,926,3.905,937,3.52,943,4.632,951,3.52,952,3.52,967,3.52,1184,3.52,1185,6.51,1186,6.34,1187,3.905,1188,3.905,1189,3.905,1190,5.138,1191,3.905,1192,3.905,1193,3.905,1194,3.905,1195,3.905,1196,3.905,1197,3.905,1198,3.905]],["title/classes/UnlinkFarmOwnerDto.html",[52,0.197,610,2.511]],["body/classes/UnlinkFarmOwnerDto.html",[3,0.204,4,0.163,5,0.183,7,0.246,8,1.286,16,0.304,17,0.014,18,1.3,19,0.204,23,0.011,24,0.011,48,0.246,52,0.325,57,0.898,63,0.531,124,1.043,227,1.657,379,3.164,401,2.713,436,3.874,447,4.219,535,3.164,545,5.635,610,4.153,723,4.808,1029,4.774,1030,4.68,1031,4.808,1199,6.251]],["title/classes/UnlinkFarmWorkerDto.html",[52,0.197,614,2.511]],["body/classes/UnlinkFarmWorkerDto.html",[3,0.204,4,0.163,5,0.183,7,0.246,8,1.286,16,0.304,17,0.014,18,1.3,19,0.204,23,0.011,24,0.011,48,0.246,52,0.325,57,0.898,63,0.531,124,1.043,227,1.657,379,3.164,401,2.713,535,3.164,614,4.153,723,4.808,1029,4.774,1031,4.808,1032,4.219,1033,5.635,1034,4.68,1035,4.68,1200,6.251]],["title/classes/User.html",[52,0.197,103,1.928]],["body/classes/User.html",[3,0.149,4,0.119,5,0.133,7,0.18,8,1.046,9,2.715,10,2.399,11,0.841,13,2.715,14,1.983,15,1.735,16,0.349,17,0.014,18,1.392,19,0.149,23,0.009,24,0.009,27,0.708,28,2.058,29,4.44,48,0.282,52,0.192,57,0.946,63,0.61,103,2.595,124,0.761,140,1.526,141,1.359,170,1.359,227,1.904,265,1.526,318,2.078,339,2.914,345,2.595,346,2.314,437,3.863,565,2.314,571,2.189,854,3.638,1131,3.885,1201,3.412,1202,3.923,1203,3.923,1204,3.923,1205,3.923,1206,3.923,1207,3.923,1208,3.923,1209,3.923,1210,3.923]],["title/classes/UserDto.html",[52,0.197,1211,3.143]],["body/classes/UserDto.html",[3,0.142,4,0.114,5,0.128,7,0.172,8,1.016,9,2.654,10,2.346,11,0.822,13,2.654,14,1.939,15,1.685,16,0.346,17,0.014,18,1.384,19,0.142,23,0.009,24,0.009,27,0.669,28,2.013,48,0.24,52,0.257,57,0.943,63,0.604,124,0.729,158,2.997,170,1.303,227,1.886,339,2.675,399,4.362,400,5.049,401,1.896,437,3.777,438,4.341,439,3.27,452,3.27,454,4.108,455,4.557,457,2.948,571,2.098,854,3.557,1211,4.108,1212,3.27,1213,3.759,1214,6.521,1215,6.521,1216,3.759,1217,3.759,1218,3.759,1219,3.759,1220,3.759,1221,3.759,1222,3.759,1223,3.759,1224,3.759,1225,3.759,1226,3.759,1227,5.238,1228,6.521]],["title/injectables/UserService.html",[53,0.899,1229,3.143]],["body/injectables/UserService.html",[3,0.192,4,0.153,5,0.173,7,0.232,11,0.872,16,0.293,17,0.014,19,0.192,23,0.011,24,0.011,27,0.603,48,0.336,49,1.099,52,0.249,53,1.435,54,2.057,56,1.717,57,0.801,58,2.52,60,1.76,63,0.512,65,1.598,69,1.315,70,2.302,80,2.143,103,2.443,114,1.224,133,2.235,293,3.982,434,4.916,629,3.397,633,3.657,897,4.605,1072,5.292,1088,4.417,1229,5.015,1230,4.417,1231,6.395,1232,5.078,1233,5.078,1234,6.395,1235,5.078,1236,5.078,1237,5.078]],["title/injectables/UtilService.html",[53,0.899,1238,3.143]],["body/injectables/UtilService.html",[3,0.148,4,0.118,5,0.133,7,0.179,11,0.904,16,0.337,17,0.014,18,1.319,19,0.148,22,1.97,23,0.009,24,0.009,27,0.625,48,0.179,49,0.845,52,0.192,53,1.207,54,1.582,56,1.444,57,0.898,63,0.531,65,1.796,69,1.717,114,1.483,137,5.018,140,1.52,141,2.132,152,2.305,153,2.305,154,2.305,155,3.63,283,2.813,464,5.352,465,4.218,514,2.447,515,2.613,686,3.063,1172,3.398,1238,4.218,1239,3.063,1240,5.379,1241,5.379,1242,5.379,1243,5.379,1244,7.612,1245,7.779,1246,6.404,1247,3.906,1248,5.379,1249,3.906,1250,5.379,1251,3.906,1252,3.906,1253,5.379,1254,6.153,1255,3.906,1256,6.153,1257,3.906,1258,3.906,1259,3.906,1260,3.906,1261,5.379,1262,3.906,1263,3.906,1264,3.906]],["title/classes/Worker.html",[52,0.197,377,1.765]],["body/classes/Worker.html",[3,0.098,4,0.078,5,0.088,7,0.118,8,0.769,9,2.13,10,1.883,11,0.66,13,2.13,14,1.557,15,2.249,16,0.342,17,0.014,18,1.363,19,0.245,23,0.007,24,0.007,27,0.746,28,1.615,48,0.182,52,0.304,57,0.952,63,0.598,124,0.499,135,2.197,140,1.883,141,1.677,151,2.7,170,0.892,217,1.002,227,1.865,265,1.544,332,3.365,333,1.437,334,1.519,335,1.519,336,1.519,337,3.034,338,1.519,339,2.951,345,2.825,346,1.519,347,1.519,348,2.701,349,1.519,350,2.341,351,1.519,352,1.519,353,1.519,354,1.519,355,1.519,356,1.519,357,1.519,358,1.519,359,1.519,360,1.519,361,1.519,362,2.701,363,1.519,364,2.701,365,2.214,366,1.519,367,2.701,368,1.519,369,1.519,370,3.034,371,1.519,372,1.519,373,1.519,374,1.519,375,1.519,376,1.519,377,1.747,378,2.855,379,2.13,380,2.855,381,2.855,382,2.44,392,2.485,393,3.111,394,1.613,395,2.019,397,1.854,565,2.341,567,3.111,568,2.24,569,2.24,1265,2.575,1266,2.575,1267,2.575,1268,2.575,1269,2.575,1270,2.575,1271,2.575,1272,2.575,1273,2.575,1274,2.575,1275,2.575,1276,2.575,1277,2.575]],["title/classes/WorkerBenefits.html",[52,0.197,362,2.237]],["body/classes/WorkerBenefits.html",[3,0.137,4,0.109,5,0.123,7,0.165,8,0.987,9,1.589,10,1.404,11,0.492,13,1.589,14,1.161,15,2.317,16,0.165,17,0.014,18,1.361,19,0.273,23,0.009,24,0.009,27,0.48,28,1.205,48,0.233,52,0.344,57,0.949,63,0.289,124,0.7,135,2.622,151,2.712,170,1.251,227,0.902,265,1.404,332,3.406,333,2.014,334,2.129,335,2.129,336,2.129,337,2.841,338,2.129,339,2.986,345,2.449,346,2.129,347,2.129,348,3.291,349,2.129,350,3.003,351,2.129,352,2.129,353,2.129,354,2.129,355,2.129,356,2.129,357,2.129,358,2.129,359,2.129,360,2.129,361,2.129,362,3.575,363,3.479,364,3.291,365,2.841,366,2.129,367,3.291,368,2.129,369,2.129,370,3.291,371,2.129,372,2.129,373,2.129,374,2.129,375,2.129,376,2.129,377,1.589,378,2.129,379,1.589,380,2.129,381,2.129,382,1.82,1278,3.609]],["title/classes/WorkerBenefitsDto.html",[52,0.197,1279,2.886]],["body/classes/WorkerBenefitsDto.html",[3,0.217,4,0.173,5,0.195,7,0.263,8,1.337,16,0.263,17,0.014,19,0.217,23,0.012,24,0.012,27,0.65,48,0.263,52,0.282,57,0.846,63,0.46,124,1.113,135,2.58,170,1.989,227,1.434,339,2.661,363,4.361,1279,4.965,1280,4.965,1281,4.992,1282,5.738]],["title/controllers/WorkerController.html",[220,2.123,1153,2.886]],["body/controllers/WorkerController.html",[3,0.112,4,0.09,5,0.101,7,0.136,11,0.852,14,0.954,16,0.286,17,0.014,19,0.112,23,0.007,24,0.007,27,0.589,28,0.99,48,0.345,49,0.642,52,0.146,56,1.185,57,0.876,58,2.757,60,1.028,62,2.124,63,0.5,65,1.561,66,1.364,69,1.618,70,2.61,73,1.427,75,2.226,76,1.201,77,1.252,79,1.788,80,1.863,85,1.306,114,1.506,123,1.858,133,2.572,138,3.105,142,1.201,220,1.571,222,1.75,224,2.326,227,1.561,230,3.462,231,2.136,240,1.364,241,1.571,257,1.858,258,1.858,377,2.572,486,1.984,535,1.306,587,3.89,588,3.42,589,4.046,590,3.656,593,3.798,617,2.326,618,2.136,619,2.326,620,1.984,621,2.58,622,1.984,623,1.858,624,1.858,625,1.984,626,1.858,635,2.58,638,2.326,639,2.58,641,2.58,643,5.434,644,5.434,645,3.841,646,2.58,790,2.326,803,3.179,821,2.326,822,3.841,1150,2.766,1153,3.179,1158,2.58,1283,2.58,1284,3.462,1285,4.588,1286,5.274,1287,3.462,1288,4.415,1289,2.326,1290,4.002,1291,2.966,1292,6.247,1293,2.966,1294,2.58,1295,4.415,1296,2.966,1297,2.966,1298,2.966,1299,2.966,1300,2.326,1301,2.966,1302,2.966,1303,2.966,1304,2.966,1305,2.136,1306,4.415,1307,2.966,1308,2.966,1309,2.966,1310,6.247,1311,2.966,1312,2.966,1313,2.966,1314,2.966,1315,2.966,1316,2.966,1317,2.966,1318,2.966,1319,2.966,1320,2.966,1321,2.58,1322,2.966]],["title/classes/WorkerDto.html",[52,0.197,1290,2.365]],["body/classes/WorkerDto.html",[3,0.118,4,0.094,5,0.106,7,0.143,8,0.889,9,2.393,10,2.115,11,0.741,13,2.393,14,1.749,15,2.146,16,0.348,17,0.014,18,1.347,19,0.118,23,0.008,24,0.008,27,0.758,28,1.814,48,0.274,52,0.225,57,0.945,63,0.609,124,0.605,140,1.784,141,1.589,151,2.755,158,1.935,170,1.082,227,1.9,332,2.741,337,3.034,339,2.76,378,3.207,380,3.207,381,3.207,382,2.741,383,4.314,399,4.978,400,4.008,401,1.574,454,4.697,457,2.448,565,2.706,571,1.742,854,3.207,1031,3.636,1290,2.706,1323,2.716,1324,3.122,1325,5.436,1326,3.122,1327,3.122,1328,3.122,1329,3.122,1330,3.122,1331,3.122,1332,3.122,1333,3.122,1334,3.122,1335,3.122,1336,3.122,1337,3.122,1338,3.122,1339,4.586,1340,3.122,1341,3.122,1342,3.122,1343,3.122,1344,4.314,1345,3.122,1346,3.122,1347,3.122,1348,2.716,1349,3.122,1350,4.586,1351,4.586]],["title/classes/WorkerMapperProfile.html",[52,0.197,1155,2.886]],["body/classes/WorkerMapperProfile.html",[3,0.186,4,0.148,5,0.167,7,0.225,11,0.669,16,0.225,17,0.014,19,0.186,23,0.011,24,0.011,27,0.462,48,0.332,52,0.241,60,1.701,63,0.501,65,1.226,76,1.988,114,1.183,124,0.952,183,2.895,265,2.435,377,3.3,428,3.074,732,3.848,733,5.994,734,5.444,735,5.403,736,4.268,737,5.327,738,4.268,739,4.268,740,4.268,741,5.444,742,4.268,743,4.907,744,3.074,746,3.283,747,4.268,748,4.268,749,4.268,750,4.268,751,5.444,785,3.534,1155,4.506,1290,4.281,1305,3.534,1352,5.994]],["title/injectables/WorkerRepository.html",[53,0.899,1151,2.511]],["body/injectables/WorkerRepository.html",[3,0.13,4,0.064,5,0.073,7,0.098,11,0.781,16,0.262,17,0.014,19,0.081,22,1.726,23,0.006,24,0.006,27,0.54,28,0.713,48,0.329,49,0.462,52,0.105,53,0.768,54,0.865,56,0.919,57,0.821,58,2.584,60,1.186,61,1.259,62,2.359,63,0.459,65,1.504,66,1.574,69,1.39,70,2.383,75,1.726,76,1.386,77,0.901,79,1.736,80,1.445,82,1.428,83,2.365,85,2.914,94,1.674,114,1.596,119,1.337,120,1.537,123,1.337,133,1.887,138,2.993,142,1.736,146,1.428,147,1.428,183,1.259,199,1.857,202,1.259,217,1.667,240,1.971,241,2.27,270,3.728,377,2.649,392,1.337,394,1.337,486,4.428,548,2.144,587,3.694,588,3.034,589,3.694,590,3.338,623,1.337,624,1.337,626,1.337,737,4.026,744,1.337,746,2.29,758,3.728,759,3.844,766,4.265,776,1.674,777,1.857,778,3.728,779,2.465,780,1.91,781,1.191,782,2.978,783,1.857,785,1.537,788,1.337,789,1.857,790,1.674,792,1.857,795,3.844,796,4.492,797,5.613,799,2.978,800,2.978,801,2.978,802,3.728,803,3.086,807,2.978,808,2.465,812,2.978,813,3.531,816,2.978,817,4.265,818,2.978,819,3.728,821,4.208,823,3.728,832,1.857,836,1.674,875,1.857,909,1.857,1033,2.684,1101,1.857,1104,1.857,1151,2.144,1284,2.684,1285,3.728,1287,2.684,1289,2.684,1290,4.128,1294,1.857,1300,2.684,1305,1.537,1321,1.857,1353,1.857,1354,4.285,1355,2.978,1356,2.135,1357,2.135,1358,2.135,1359,2.135,1360,2.135,1361,2.135,1362,2.978,1363,2.135,1364,3.423,1365,2.135,1366,3.423,1367,3.423,1368,3.423,1369,3.423,1370,3.423,1371,3.423,1372,3.423,1373,4.903,1374,3.423,1375,3.423,1376,3.423,1377,3.423,1378,2.135,1379,2.135,1380,2.135,1381,2.135,1382,2.135,1383,2.135,1384,2.135,1385,2.135,1386,2.135,1387,3.423,1388,3.423,1389,2.135,1390,2.135,1391,2.135,1392,2.135,1393,2.135,1394,2.135,1395,2.135]],["title/classes/WorkerSalary.html",[52,0.197,370,2.237]],["body/classes/WorkerSalary.html",[3,0.113,4,0.09,5,0.101,7,0.136,8,0.858,9,1.31,10,1.158,11,0.406,13,1.31,14,0.957,15,2.244,16,0.326,17,0.014,18,1.346,19,0.257,23,0.007,24,0.007,27,0.736,28,0.993,48,0.203,52,0.322,57,0.952,63,0.571,124,0.577,135,2.453,151,2.43,170,1.031,227,1.781,265,1.158,332,3.424,333,1.66,334,1.755,335,1.755,336,1.755,337,2.47,338,1.755,339,2.964,345,2.129,346,1.755,347,1.755,348,3.659,349,1.755,350,2.611,351,1.755,352,1.755,353,1.755,354,1.755,355,1.755,356,1.755,357,1.755,358,1.755,359,1.755,360,1.755,361,1.755,362,3.266,363,1.755,364,3.266,365,3.266,366,1.755,367,3.266,368,1.755,369,1.755,370,3.266,371,3.118,372,3.118,373,3.118,374,3.118,375,3.118,376,3.118,377,1.31,378,1.755,379,1.31,380,1.755,381,1.755,382,1.5,565,3.118,1396,2.975,1397,2.975,1398,2.975,1399,2.975,1400,2.975,1401,2.975,1402,2.975,1403,2.975,1404,2.975]],["title/classes/WorkerSalaryDeduction.html",[52,0.197,367,2.237]],["body/classes/WorkerSalaryDeduction.html",[3,0.133,4,0.106,5,0.12,7,0.161,8,0.969,9,1.548,10,1.368,11,0.479,13,1.548,14,1.131,15,2.299,16,0.229,17,0.014,18,1.355,19,0.271,23,0.008,24,0.008,27,0.597,28,1.173,48,0.229,52,0.341,57,0.95,63,0.4,124,0.682,135,2.674,151,2.673,170,1.218,227,1.249,265,1.368,332,3.372,333,1.962,334,2.074,335,2.074,336,2.074,337,2.789,338,2.074,339,2.984,345,2.404,346,2.074,347,2.074,348,3.244,349,2.074,350,2.948,351,2.074,352,2.074,353,2.074,354,2.074,355,2.074,356,2.074,357,2.074,358,2.074,359,2.074,360,2.074,361,2.074,362,3.244,363,2.074,364,3.244,365,2.789,366,2.074,367,3.533,368,3.43,369,3.43,370,3.244,371,2.074,372,2.074,373,2.074,374,2.074,375,2.074,376,2.074,377,1.548,378,2.074,379,1.548,380,2.074,381,2.074,382,1.773,1405,3.515,1406,3.515]],["title/classes/WorkerSalaryDeductionsDto.html",[52,0.197,1407,2.886]],["body/classes/WorkerSalaryDeductionsDto.html",[3,0.204,4,0.163,5,0.183,7,0.246,8,1.286,16,0.304,17,0.014,19,0.204,23,0.011,24,0.011,27,0.707,48,0.246,52,0.264,57,0.898,63,0.531,124,1.043,135,2.806,170,1.865,227,1.657,339,2.773,368,4.24,369,4.24,382,3.624,1280,5.175,1407,4.774,1408,4.68,1409,5.38,1410,5.38]],["title/classes/WorkerSalaryDto.html",[52,0.197,1344,2.886]],["body/classes/WorkerSalaryDto.html",[3,0.14,4,0.112,5,0.126,7,0.169,8,1.005,15,1.667,16,0.344,17,0.014,18,1.224,19,0.14,23,0.009,24,0.009,27,0.758,48,0.312,52,0.182,57,0.942,63,0.602,124,0.718,135,1.938,170,1.282,227,1.879,332,3.015,339,2.869,348,3.943,365,3.336,371,3.527,372,3.527,373,3.527,374,3.527,375,3.527,376,3.527,382,1.866,565,3.527,785,2.665,1179,4.664,1279,4.664,1280,5.487,1344,3.731,1348,4.507,1407,4.664,1411,3.219,1412,3.701,1413,3.701,1414,3.701,1415,3.701,1416,3.701,1417,3.701,1418,3.701,1419,3.701,1420,3.701,1421,3.701,1422,3.701,1423,3.701,1424,3.701]],["title/injectables/WorkerService.html",[53,0.899,1150,2.511]],["body/injectables/WorkerService.html",[3,0.127,4,0.102,5,0.114,7,0.154,11,0.934,16,0.314,17,0.014,19,0.127,23,0.008,24,0.008,27,0.645,48,0.331,49,0.728,52,0.165,53,1.087,54,1.363,56,1.3,57,0.895,58,2.815,60,1.679,61,1.986,62,2.986,63,0.548,65,1.711,66,2.227,69,1.703,70,2.688,75,2.442,76,1.363,77,1.42,79,1.962,80,2.044,83,1.044,85,1.482,114,1.585,133,2.132,138,3.151,142,2.298,147,2.252,239,2.928,240,1.548,241,1.783,486,3.24,575,4.213,587,4.031,588,3.559,589,4.105,590,3.765,623,2.108,624,2.108,626,2.108,897,4.086,1150,3.034,1151,3.888,1157,2.928,1284,3.798,1287,3.798,1289,3.798,1290,4.164,1300,3.798,1305,2.424,1355,4.213,1362,4.213,1425,2.928,1426,5.674,1427,3.366,1428,3.366,1429,4.844,1430,3.366,1431,3.366,1432,3.366,1433,3.366,1434,3.366,1435,3.366,1436,3.366,1437,3.366,1438,3.366,1439,3.366,1440,3.366]],["title/coverage.html",[1441,4.293]],["body/coverage.html",[0,2.808,1,1.967,5,0.075,6,3.066,16,0.101,17,0.014,20,1.777,23,0.006,24,0.006,26,1.926,36,1.306,42,1.387,43,1.387,52,0.39,53,1.605,55,1.926,57,0.253,103,1.065,123,1.387,125,1.926,126,1.926,138,1.488,142,0.897,174,1.306,186,1.595,188,1.595,189,1.736,190,2.954,217,0.862,220,2.652,221,1.595,223,1.926,232,1.236,246,1.481,250,1.595,264,1.926,275,2.938,285,1.926,300,2.764,301,1.736,303,1.926,332,1.117,333,3.249,345,1.065,362,1.236,364,1.236,367,1.236,370,1.236,377,0.975,382,1.117,383,1.595,384,1.926,385,1.926,391,1.926,403,1.595,409,1.736,416,1.595,417,1.595,418,1.736,421,1.926,434,1.481,435,1.926,436,3.162,458,1.926,494,1.926,535,2.406,536,1.926,572,1.595,573,1.926,583,1.306,588,1.117,590,1.117,593,1.595,601,1.387,606,1.387,610,1.387,614,1.387,618,1.595,620,1.481,622,1.481,625,1.481,636,1.387,662,1.236,676,1.926,686,6.556,713,1.736,730,1.595,731,1.926,732,2.764,752,2.08,753,1.926,788,1.387,896,1.926,918,2.538,969,1.926,970,1.926,979,1.736,982,1.595,986,1.595,987,1.595,988,1.595,990,1.595,1003,1.736,1004,1.926,1005,1.926,1012,1.926,1028,2.764,1032,2.764,1036,1.926,1037,1.926,1062,1.926,1072,1.595,1073,1.926,1115,1.595,1116,2.764,1119,2.764,1137,1.926,1150,1.387,1151,1.387,1153,1.595,1155,1.595,1159,1.926,1162,1.736,1179,1.595,1180,1.926,1181,1.926,1184,2.764,1199,1.926,1200,1.926,1201,1.926,1211,1.736,1212,1.926,1229,1.736,1230,1.926,1238,1.736,1239,1.736,1279,1.595,1280,3.162,1281,1.926,1283,1.926,1290,1.306,1323,1.926,1344,1.595,1352,1.926,1353,1.926,1407,1.595,1408,1.926,1411,1.926,1425,1.926,1441,1.736,1442,2.214,1443,2.214,1444,2.214,1445,1.926,1446,7.851,1447,5.064,1448,7.769,1449,1.736,1450,1.926,1451,1.926,1452,1.926,1453,1.926,1454,5.466,1455,5.006,1456,7.492,1457,5.822,1458,6.338,1459,2.214,1460,2.214,1461,3.82,1462,3.066,1463,1.926,1464,1.926,1465,1.926,1466,1.926,1467,3.066,1468,1.926,1469,3.066,1470,1.926,1471,1.926,1472,1.926,1473,1.926,1474,1.926,1475,3.066,1476,1.926,1477,5.006,1478,2.214,1479,2.214,1480,6.106,1481,2.214,1482,2.214,1483,2.214,1484,2.214,1485,1.926,1486,1.926,1487,2.214,1488,2.214]],["title/dependencies.html",[33,2.845,1489,2.91]],["body/dependencies.html",[17,0.014,23,0.01,24,0.01,33,2.587,49,0.949,52,0.285,73,3.344,74,2.747,76,2.356,77,2.754,127,3.158,170,1.52,175,2.587,178,2.747,180,3.158,181,3.158,183,2.587,257,2.747,258,4.354,279,3.814,318,2.323,319,3.851,327,4.189,401,2.211,405,3.439,407,3.158,469,3.814,721,3.814,744,2.747,780,2.447,781,2.447,924,3.439,1023,3.814,1490,4.385,1491,4.385,1492,5.817,1493,5.817,1494,4.385,1495,5.817,1496,4.385,1497,6.527,1498,4.385,1499,4.385,1500,5.817,1501,4.385,1502,4.385,1503,4.385,1504,4.385,1505,4.385,1506,4.385,1507,4.385,1508,4.385,1509,4.385,1510,4.385,1511,4.385,1512,4.385,1513,4.385,1514,4.385,1515,4.385,1516,4.385,1517,4.385,1518,4.385,1519,4.385,1520,4.385,1521,3.439,1522,4.385,1523,4.385,1524,4.385,1525,4.385,1526,4.385,1527,3.814,1528,4.385,1529,4.385,1530,4.385,1531,5.817,1532,4.385,1533,4.385,1534,4.385,1535,4.385,1536,4.385,1537,4.385,1538,4.385,1539,4.385,1540,4.385]],["title/miscellaneous/enumerations.html",[1541,1.867,1542,4.195]],["body/miscellaneous/enumerations.html",[7,0.18,14,1.74,17,0.014,23,0.009,24,0.009,74,3.389,141,2.897,333,2.198,348,3.019,349,2.324,350,3.192,351,2.324,352,2.324,353,2.324,354,2.324,355,2.324,356,2.324,357,2.324,358,2.324,359,2.324,360,2.324,361,2.324,377,2.382,538,3.896,541,3.896,548,3.389,571,3.019,662,3.019,701,4.242,710,4.242,776,4.242,848,4.242,854,3.192,918,2.836,929,4.706,930,3.426,931,3.426,932,3.426,933,4.242,934,3.426,935,3.426,1541,2.198,1542,3.426,1543,3.939,1544,7.204,1545,3.939,1546,3.939,1547,3.939,1548,5.41,1549,3.426,1550,3.939,1551,3.939,1552,3.939,1553,3.939,1554,3.939,1555,3.939,1556,3.939,1557,3.939,1558,3.939,1559,3.939,1560,3.939,1561,3.939,1562,4.706,1563,3.939,1564,3.939,1565,3.939,1566,3.939,1567,3.939,1568,5.41,1569,3.939,1570,3.939,1571,3.939,1572,3.939,1573,3.939,1574,3.939,1575,3.939,1576,3.939,1577,3.939,1578,3.939,1579,3.939,1580,3.939,1581,3.939,1582,3.939,1583,3.939,1584,3.939,1585,3.939,1586,3.939,1587,3.939,1588,3.939,1589,3.939,1590,3.939,1591,3.939,1592,3.939]],["title/miscellaneous/functions.html",[1521,3.781,1541,1.867]],["body/miscellaneous/functions.html",[7,0.26,11,0.933,16,0.313,17,0.014,18,1.274,23,0.012,24,0.012,27,0.645,36,4.338,65,1.71,69,1.904,70,2.041,417,4.929,713,5.368,1445,4.932,1468,4.932,1485,4.932,1521,4.446,1541,3.164,1593,5.67,1594,5.67,1595,5.67,1596,5.67,1597,5.67,1598,4.932,1599,7.353,1600,4.083]],["title/index.html",[7,0.153,1601,3.345,1602,3.345]],["body/index.html",[4,0.148,17,0.014,23,0.011,24,0.011,514,3.074,897,3.534,1013,3.848,1441,3.848,1600,3.534,1603,4.907,1604,4.907,1605,6.258,1606,4.907,1607,4.907,1608,4.907,1609,4.907,1610,4.907,1611,4.907,1612,6.89,1613,4.907,1614,4.907,1615,6.89,1616,7.79,1617,4.907,1618,4.268,1619,7.665,1620,4.907,1621,4.907,1622,6.258,1623,4.907,1624,3.848,1625,4.907,1626,4.907,1627,7.257,1628,4.907,1629,4.907,1630,4.907,1631,6.258,1632,6.258,1633,4.907,1634,4.907,1635,4.907,1636,4.907,1637,4.907,1638,4.268,1639,4.907,1640,4.907,1641,4.907,1642,4.907,1643,4.907,1644,4.907,1645,4.907,1646,4.907,1647,4.907,1648,4.907,1649,4.268,1650,4.907,1651,4.907,1652,4.907,1653,4.907,1654,4.907,1655,4.907,1656,4.268]],["title/modules.html",[32,2.761]],["body/modules.html",[17,0.012,23,0.012,24,0.012,31,3.91,32,2.947,160,4.209,163,3.91,164,3.91,165,3.91,166,3.661,167,3.91,1638,6.711,1657,7.715,1658,7.715,1659,8.084,1660,7.45,1661,7.45]],["title/overview.html",[1662,4.763]],["body/overview.html",[2,2.685,17,0.014,23,0.01,24,0.01,30,1.668,31,5.192,32,2.161,33,2.529,34,2.867,35,2.867,36,2.529,37,2.392,38,2.392,39,3.728,40,3.728,41,3.728,42,4.725,43,4.725,44,3.832,45,2.867,46,2.867,54,1.736,124,0.831,160,5.734,161,3.728,162,3.728,163,5.245,164,4.317,165,4.317,166,4.042,167,5.359,222,2.529,232,4.209,241,2.271,242,3.728,243,3.728,245,3.728,246,4.317,302,3.361,636,4.725,752,3.807,1147,3.728,1148,3.728,1149,3.728,1150,4.725,1151,4.042,1662,3.728,1663,5.729,1664,4.286,1665,4.286,1666,4.286]],["title/properties.html",[8,0.935,1489,2.91]],["body/properties.html",[8,1.184,17,0.014,23,0.012,24,0.012,79,2.474,535,2.689,1013,4.79,1449,4.79,1600,4.398,1649,5.313,1656,5.313,1667,6.108,1668,6.108,1669,6.108,1670,6.108,1671,6.108,1672,6.108,1673,6.108]],["title/miscellaneous/typealiases.html",[1541,1.867,1674,4.822]],["body/miscellaneous/typealiases.html",[7,0.277,16,0.277,17,0.012,23,0.012,24,0.012,140,2.768,190,4.198,465,4.744,1239,4.744,1246,6.189,1541,3.376,1624,5.579,1675,6.05,1676,7.802,1677,6.189,1678,6.05,1679,6.05]],["title/miscellaneous/variables.html",[519,3.781,1541,1.867]],["body/miscellaneous/variables.html",[4,0.077,7,0.069,12,4.243,14,1.267,15,0.821,16,0.3,17,0.014,18,0.834,23,0.004,24,0.004,25,1.174,28,0.5,57,0.292,58,0.919,70,0.919,77,0.632,83,2.234,85,1.946,114,1.361,137,2.636,138,1.077,140,2.822,141,2.605,142,1.034,151,2.488,156,1.002,157,2.232,158,2.808,172,1.303,188,1.838,189,2.001,190,3.45,207,1.303,208,1.303,210,1.303,217,2.276,218,1.174,240,1.812,271,1.078,275,1.002,283,1.078,310,2.468,315,3.151,319,1.506,326,1.303,327,3.184,328,2.468,329,1.303,330,1.303,331,1.303,409,1.174,417,1.078,418,2.001,419,1.303,432,3.39,499,3.427,513,3.219,519,1.174,538,2.402,541,2.402,548,0.938,571,1.424,587,2.467,588,0.755,589,2.686,590,1.682,593,1.838,618,1.838,622,1.708,625,1.708,701,2.616,710,2.616,743,1.174,752,1.506,795,2.001,796,2.616,848,1.174,854,0.884,918,1.078,919,4.243,920,3.846,927,2.22,933,1.174,936,2.22,937,2.616,938,1.303,939,2.001,940,1.303,941,1.303,942,1.303,943,2.616,944,1.174,945,1.303,946,1.303,947,1.303,948,1.303,949,1.303,950,2.22,951,3.09,952,3.09,953,1.303,954,1.303,955,1.303,956,1.303,957,1.303,958,1.303,959,1.303,960,1.303,961,1.303,962,1.303,963,1.303,964,1.303,965,1.303,966,1.303,967,2.616,968,1.303,984,1.303,986,1.838,987,1.838,988,1.838,990,1.838,991,1.174,1000,3.09,1058,2.902,1122,2.001,1138,4.707,1162,2.001,1184,1.174,1185,2.22,1186,1.303,1187,1.303,1188,1.303,1189,1.303,1190,2.902,1191,1.303,1192,1.303,1193,1.303,1194,1.303,1195,1.303,1196,1.303,1197,1.303,1198,1.303,1447,1.303,1449,2.001,1450,2.22,1451,2.22,1452,2.22,1453,2.22,1461,1.303,1462,1.303,1463,1.303,1464,1.303,1465,2.22,1466,2.22,1467,1.303,1469,1.303,1470,2.22,1471,1.303,1472,1.303,1473,1.303,1474,1.303,1475,1.303,1476,2.22,1486,1.303,1527,1.303,1541,0.836,1549,1.303,1562,1.303,1598,1.303,1600,1.078,1618,1.303,1624,2.616,1677,1.303,1680,4.812,1681,1.498,1682,1.498,1683,1.498,1684,1.498,1685,2.552,1686,1.498,1687,3.336,1688,2.552,1689,1.498,1690,1.498,1691,1.498,1692,2.552,1693,1.498,1694,1.498,1695,1.498,1696,1.498,1697,1.498,1698,1.498,1699,2.552,1700,2.552,1701,1.498,1702,1.498,1703,1.498,1704,1.498,1705,1.498,1706,1.498,1707,1.498,1708,1.498,1709,1.498,1710,1.498,1711,1.498,1712,1.498,1713,1.498,1714,1.498,1715,2.552,1716,3.336,1717,1.498,1718,1.498,1719,5.137,1720,1.498,1721,1.498,1722,1.498,1723,1.498,1724,1.498,1725,1.498,1726,3.94,1727,3.336,1728,1.498,1729,1.498,1730,3.336,1731,3.336,1732,3.336,1733,3.336,1734,3.336,1735,1.498,1736,1.498,1737,1.498,1738,1.498,1739,1.498,1740,1.498,1741,1.498,1742,1.498,1743,1.498,1744,2.552,1745,3.336,1746,3.336,1747,3.336,1748,3.336,1749,2.552,1750,3.94,1751,3.336,1752,3.94,1753,3.336,1754,3.336,1755,3.94,1756,3.336,1757,3.94,1758,1.498,1759,1.498,1760,1.498,1761,1.498,1762,1.498,1763,1.498,1764,3.336,1765,1.498,1766,3.336,1767,1.498,1768,1.498,1769,1.498,1770,1.498,1771,1.498,1772,1.498,1773,1.498,1774,1.498,1775,1.498,1776,1.498,1777,2.552,1778,1.498,1779,1.498,1780,1.498,1781,1.498,1782,1.498,1783,1.498,1784,1.498,1785,2.552,1786,1.498,1787,1.498,1788,1.498,1789,1.498,1790,2.552,1791,1.498,1792,1.498,1793,1.498,1794,1.498,1795,1.498,1796,2.552,1797,1.498,1798,1.498,1799,1.498,1800,1.498,1801,1.498,1802,1.498,1803,1.498,1804,1.498,1805,1.498,1806,1.498,1807,1.498,1808,1.498,1809,1.498,1810,1.498,1811,3.94,1812,1.498,1813,2.552,1814,1.498,1815,1.498,1816,1.498,1817,1.498,1818,1.498,1819,1.498,1820,1.498,1821,1.498,1822,1.498,1823,1.498,1824,1.498,1825,3.336,1826,1.498,1827,2.552,1828,1.498,1829,1.498,1830,1.498,1831,1.498,1832,1.498,1833,1.498,1834,1.498,1835,2.552,1836,1.498,1837,1.498,1838,1.498,1839,1.498,1840,1.498]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/Account.html":{},"interfaces/Account-1.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/ApiResponseBuilder.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSerializer.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/BaseModel.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateOwnerDto.html":{},"injectables/EmailService.html":{},"classes/ExceptionsFilter.html":{},"classes/Farm.html":{},"controllers/FarmController.html":{},"classes/FarmDto.html":{},"classes/FarmMapperProfile.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"interfaces/Filtering.html":{},"classes/FirebaseAuthStrategy.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"classes/LinkFarmOwnerDto.html":{},"classes/LinkFarmWorkerDto.html":{},"injectables/LoggerContextMiddleware.html":{},"classes/Owner.html":{},"injectables/OwnerRepository.html":{},"classes/PaginatedResponseData.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"classes/Payload.html":{},"classes/Response.html":{},"modules/RestModule.html":{},"guards/RolesGuard.html":{},"classes/SalaryHistory.html":{},"classes/SalaryHistoryDto.html":{},"interfaces/Sorting.html":{},"classes/UnlinkFarmOwnerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerBenefitsDto.html":{},"controllers/WorkerController.html":{},"classes/WorkerDto.html":{},"classes/WorkerMapperProfile.html":{},"injectables/WorkerRepository.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDeductionsDto.html":{},"classes/WorkerSalaryDto.html":{},"injectables/WorkerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":686,"title":{},"body":{"classes/FarmDto.html":{},"injectables/UtilService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1511,"title":{},"body":{"dependencies.html":{}}}],["0.0.1",{"_index":1668,"title":{},"body":{"properties.html":{}}}],["0.14.0",{"_index":1514,"title":{},"body":{"dependencies.html":{}}}],["0.2.1",{"_index":1538,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1513,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":1530,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1446,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1480,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1478,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1481,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1483,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1479,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1458,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1482,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1456,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1457,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1455,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1477,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1454,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1484,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":25,"title":{"interfaces/Account-1.html":{}},"body":{"injectables/LoggerContextMiddleware.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":1509,"title":{},"body":{"dependencies.html":{}}}],["1.0.6",{"_index":1512,"title":{},"body":{"dependencies.html":{}}}],["1.17.3",{"_index":1519,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":1532,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":1516,"title":{},"body":{"dependencies.html":{}}}],["1/2",{"_index":1460,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.0.3",{"_index":1503,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1500,"title":{},"body":{"dependencies.html":{}}}],["10.3.0",{"_index":1497,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.0.0",{"_index":1520,"title":{},"body":{"dependencies.html":{}}}],["12.0.11",{"_index":1495,"title":{},"body":{"dependencies.html":{}}}],["127.0.0.1",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":1665,"title":{},"body":{"overview.html":{}}}],["16.8.1",{"_index":1523,"title":{},"body":{"dependencies.html":{}}}],["180",{"_index":699,"title":{},"body":{"classes/FarmDto.html":{}}}],["180'})@max(180",{"_index":698,"title":{},"body":{"classes/FarmDto.html":{}}}],["1].id",{"_index":816,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{}}}],["2",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{},"injectables/EmailService.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"injectables/OwnerRepository.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{},"overview.html":{}}}],["2.0.0",{"_index":1525,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":1502,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":895,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["3.0.1",{"_index":1496,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":1498,"title":{},"body":{"dependencies.html":{}}}],["3.3.6",{"_index":1528,"title":{},"body":{"dependencies.html":{}}}],["3.5.0",{"_index":1529,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33",{"_index":1666,"title":{},"body":{"overview.html":{}}}],["3306",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1664,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":1506,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1533,"title":{},"body":{"dependencies.html":{}}}],["4.18.2",{"_index":1517,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":1522,"title":{},"body":{"dependencies.html":{}}}],["4.9.5",{"_index":1491,"title":{},"body":{"dependencies.html":{}}}],["404",{"_index":150,"title":{},"body":{"classes/ApiResponseBuilder.html":{}}}],["5",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["50",{"_index":1459,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1663,"title":{},"body":{"overview.html":{}}}],["7.1.0",{"_index":1493,"title":{},"body":{"dependencies.html":{}}}],["7.1.17",{"_index":1508,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1540,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":1510,"title":{},"body":{"dependencies.html":{}}}],["8.17.2",{"_index":1534,"title":{},"body":{"dependencies.html":{}}}],["8.6.1",{"_index":1535,"title":{},"body":{"dependencies.html":{}}}],["8.7.7",{"_index":1492,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":696,"title":{},"body":{"classes/FarmDto.html":{}}}],["90'})@max(90",{"_index":695,"title":{},"body":{"classes/FarmDto.html":{}}}],["9]+):(asc|desc",{"_index":1192,"title":{},"body":{"interfaces/Sorting.html":{},"miscellaneous/variables.html":{}}}],["9_",{"_index":957,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["9_]+:(=|>|array",{"_index":953,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["9_]+:(isnull|isnotnull",{"_index":958,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["__dirname}/../../entity/**/*.{js,ts",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["__dirname}/../../migration/**/*.{js,ts",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["__dirname}/../../subscriber/**/*.{js,ts",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_res",{"_index":1041,"title":{},"body":{"injectables/LoggerContextMiddleware.html":{}}}],["abbreviation",{"_index":537,"title":{},"body":{"classes/Farm.html":{},"classes/FarmDto.html":{}}}],["accessors",{"_index":734,"title":{},"body":{"classes/FarmMapperProfile.html":{},"classes/WorkerMapperProfile.html":{}}}],["account",{"_index":1,"title":{"interfaces/Account.html":{},"interfaces/Account-1.html":{}},"body":{"interfaces/Account.html":{},"interfaces/Account-1.html":{},"injectables/AccountService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["account.blacklisted",{"_index":98,"title":{},"body":{"injectables/AccountService.html":{}}}],["account.email",{"_index":88,"title":{},"body":{"injectables/AccountService.html":{}}}],["account.name",{"_index":92,"title":{},"body":{"injectables/AccountService.html":{}}}],["account.password",{"_index":87,"title":{},"body":{"injectables/AccountService.html":{}}}],["account.phone",{"_index":90,"title":{},"body":{"injectables/AccountService.html":{}}}],["account.roles",{"_index":99,"title":{},"body":{"injectables/AccountService.html":{}}}],["account.service",{"_index":50,"title":{},"body":{"modules/AccountModule.html":{}}}],["accountmodule",{"_index":31,"title":{"modules/AccountModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["accountnumber",{"_index":334,"title":{},"body":{"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{}}}],["accountservice",{"_index":42,"title":{"injectables/AccountService.html":{}},"body":{"modules/AccountModule.html":{},"injectables/AccountService.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["add",{"_index":1057,"title":{},"body":{"injectables/LoggerContextMiddleware.html":{}}}],["admin",{"_index":74,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/OwnerRepository.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["admin/firestore",{"_index":787,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["aliases",{"_index":1675,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowinfinity",{"_index":684,"title":{},"body":{"classes/FarmDto.html":{}}}],["allownan",{"_index":726,"title":{},"body":{"classes/FarmDto.html":{}}}],["always",{"_index":1228,"title":{},"body":{"classes/UserDto.html":{}}}],["amazing",{"_index":1639,"title":{},"body":{"index.html":{}}}],["amount",{"_index":365,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/SalaryHistoryDto.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDto.html":{}}}],["any):[a",{"_index":956,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["api",{"_index":1449,"title":{},"body":{"coverage.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["apikey",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["apiresponsebuilder",{"_index":123,"title":{"classes/ApiResponseBuilder.html":{}},"body":{"classes/ApiResponseBuilder.html":{},"injectables/FarmRepository.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"coverage.html":{}}}],["apiresponsebuilder.notfound",{"_index":821,"title":{},"body":{"injectables/FarmRepository.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{}}}],["apiresponsebuilder.success",{"_index":894,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["apiresponsebuilder.success(200",{"_index":819,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{}}}],["apiresponsebuilder.success(201",{"_index":1393,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["apiresponsebuilder.witherror(404",{"_index":874,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["apiresponsebuilder.witherror(500",{"_index":1394,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["apollo/server",{"_index":1490,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":1600,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["app.enable('trust",{"_index":1703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.enablecors",{"_index":1705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.enableshutdownhooks",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.enableversioning",{"_index":1706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.init",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.useglobalinterceptors(new",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.useglobalpipes(new",{"_index":1709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_filter",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["app_pipe",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["applications",{"_index":1611,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":160,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["areameasurementunit",{"_index":538,"title":{},"body":{"classes/Farm.html":{},"classes/FarmDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["areameasureunittyperesolver",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["args",{"_index":509,"title":{},"body":{"classes/ExceptionsFilter.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{}}}],["argument",{"_index":873,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["argumentshost",{"_index":500,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["argv",{"_index":1252,"title":{},"body":{"injectables/UtilService.html":{}}}],["array",{"_index":571,"title":{},"body":{"classes/Farm.html":{},"classes/FarmDto.html":{},"interfaces/Filtering.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/WorkerDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(data",{"_index":941,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(validparams",{"_index":1189,"title":{},"body":{"interfaces/Sorting.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(value",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array_contains",{"_index":932,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/enumerations.html":{}}}],["array_contains_any",{"_index":935,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/enumerations.html":{}}}],["arraynotempty",{"_index":455,"title":{},"body":{"classes/CreateOwnerDto.html":{},"classes/UserDto.html":{}}}],["arraynotempty()@isstring({each",{"_index":452,"title":{},"body":{"classes/CreateOwnerDto.html":{},"classes/UserDto.html":{}}}],["asc",{"_index":1383,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["asociado",{"_index":361,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"miscellaneous/enumerations.html":{}}}],["assignment",{"_index":517,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["associate",{"_index":360,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"miscellaneous/enumerations.html":{}}}],["async",{"_index":58,"title":{},"body":{"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"classes/FirebaseAuthStrategy.html":{},"controllers/HealthController.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/OwnerRepository.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{},"miscellaneous/variables.html":{}}}],["audience",{"_index":260,"title":{},"body":{"modules/AuthModule.html":{},"classes/FirebaseAuthStrategy.html":{}}}],["auth",{"_index":72,"title":{},"body":{"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/OwnerRepository.html":{}}}],["auth().createuser",{"_index":86,"title":{},"body":{"injectables/AccountService.html":{}}}],["auth().generateemailverificationlink(useraccount.email",{"_index":105,"title":{},"body":{"injectables/AccountService.html":{}}}],["auth().getuser(userid",{"_index":113,"title":{},"body":{"injectables/AccountService.html":{}}}],["auth().getuserbyemail(data.email",{"_index":1094,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["auth().setcustomuserclaims(userid",{"_index":97,"title":{},"body":{"injectables/AccountService.html":{}}}],["auth().verifyidtoken(token",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth.decodedidtoken",{"_index":1046,"title":{},"body":{"injectables/LoggerContextMiddleware.html":{}}}],["auth.guard.ts",{"_index":1005,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:9",{"_index":1006,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["auth.interface",{"_index":280,"title":{},"body":{"injectables/AuthSerializer.html":{},"injectables/AuthService.html":{}}}],["auth.strategy",{"_index":252,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.strategy.ts",{"_index":970,"title":{},"body":{"classes/FirebaseAuthStrategy.html":{},"coverage.html":{}}}],["auth.strategy.ts:12",{"_index":975,"title":{},"body":{"classes/FirebaseAuthStrategy.html":{}}}],["auth.strategy.ts:4",{"_index":972,"title":{},"body":{"classes/FirebaseAuthStrategy.html":{}}}],["auth.userrecord",{"_index":112,"title":{},"body":{"injectables/AccountService.html":{}}}],["auth/auth.interface",{"_index":71,"title":{},"body":{"injectables/AccountService.html":{}}}],["auth/auth.serializer",{"_index":248,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.service",{"_index":249,"title":{},"body":{"modules/AuthModule.html":{},"guards/RolesGuard.html":{}}}],["auth/strategies/firebase",{"_index":251,"title":{},"body":{"modules/AuthModule.html":{}}}],["authcontroller",{"_index":221,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/BaseModule.html":{},"coverage.html":{}}}],["authenticatedguard",{"_index":301,"title":{"guards/AuthenticatedGuard.html":{}},"body":{"guards/AuthenticatedGuard.html":{},"coverage.html":{}}}],["authentication",{"_index":408,"title":{},"body":{"modules/BaseModule.html":{}}}],["authmodule",{"_index":163,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1649,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":1044,"title":{},"body":{"injectables/LoggerContextMiddleware.html":{},"guards/RolesGuard.html":{}}}],["authorization.replace(/bearer/gim",{"_index":1171,"title":{},"body":{"guards/RolesGuard.html":{}}}],["authorization.split",{"_index":1048,"title":{},"body":{"injectables/LoggerContextMiddleware.html":{}}}],["authorization.trim",{"_index":1168,"title":{},"body":{"guards/RolesGuard.html":{}}}],["authorization?.startswith('bearer",{"_index":1047,"title":{},"body":{"injectables/LoggerContextMiddleware.html":{}}}],["authserializer",{"_index":246,"title":{"injectables/AuthSerializer.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthSerializer.html":{},"coverage.html":{},"overview.html":{}}}],["authservice",{"_index":232,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LoggerContextMiddleware.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"overview.html":{}}}],["authtoken",{"_index":1170,"title":{},"body":{"guards/RolesGuard.html":{}}}],["autoid",{"_index":782,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{}}}],["autoloadentities",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autologging",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automap",{"_index":339,"title":{},"body":{"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/BaseModel.html":{},"classes/Farm.html":{},"classes/FarmDto.html":{},"classes/Owner.html":{},"classes/SalaryHistory.html":{},"classes/SalaryHistoryDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerBenefitsDto.html":{},"classes/WorkerDto.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDeductionsDto.html":{},"classes/WorkerSalaryDto.html":{}}}],["automap()@isnumber()@isoptional()@min(undefined",{"_index":694,"title":{},"body":{"classes/FarmDto.html":{}}}],["automap()@isnumber({allownan",{"_index":683,"title":{},"body":{"classes/FarmDto.html":{}}}],["automap()@isoptional",{"_index":1331,"title":{},"body":{"classes/WorkerDto.html":{}}}],["automap()@isoptional()@automap(undefined",{"_index":706,"title":{},"body":{"classes/FarmDto.html":{}}}],["automap()@isoptional()@isalphanumeric",{"_index":1337,"title":{},"body":{"classes/WorkerDto.html":{}}}],["automap()@isoptional()@isboolean",{"_index":1325,"title":{},"body":{"classes/WorkerDto.html":{}}}],["automap()@isoptional()@isdatestring",{"_index":1335,"title":{},"body":{"classes/WorkerDto.html":{}}}],["automap()@isoptional()@isemail",{"_index":1327,"title":{},"body":{"classes/WorkerDto.html":{}}}],["automap()@isoptional()@isstring",{"_index":1339,"title":{},"body":{"classes/WorkerDto.html":{}}}],["automap()@isstring",{"_index":678,"title":{},"body":{"classes/FarmDto.html":{}}}],["automap()@isstring()@isnotempty",{"_index":704,"title":{},"body":{"classes/FarmDto.html":{}}}],["automap()@isstring()@isoptional",{"_index":397,"title":{},"body":{"classes/BaseModel.html":{},"classes/Farm.html":{},"classes/FarmDto.html":{},"classes/Worker.html":{}}}],["automap()@isstring({each",{"_index":1342,"title":{},"body":{"classes/WorkerDto.html":{}}}],["automap()@transform",{"_index":680,"title":{},"body":{"classes/FarmDto.html":{}}}],["automap(undefined",{"_index":565,"title":{},"body":{"classes/Farm.html":{},"classes/Owner.html":{},"classes/User.html":{},"classes/Worker.html":{},"classes/WorkerDto.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDto.html":{}}}],["automap(undefined)@isoptional()@isalphanumeric",{"_index":1329,"title":{},"body":{"classes/WorkerDto.html":{}}}],["automapper/classes",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/BaseModel.html":{},"classes/Farm.html":{},"classes/FarmDto.html":{},"classes/SalaryHistory.html":{},"classes/SalaryHistoryDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerBenefitsDto.html":{},"classes/WorkerDto.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDeductionsDto.html":{},"classes/WorkerSalaryDto.html":{},"dependencies.html":{}}}],["automapper/core",{"_index":744,"title":{},"body":{"classes/FarmMapperProfile.html":{},"injectables/FarmRepository.html":{},"injectables/OwnerRepository.html":{},"classes/WorkerMapperProfile.html":{},"injectables/WorkerRepository.html":{},"dependencies.html":{}}}],["automappermodule",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["automappermodule.forroot",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["automapperprofile",{"_index":733,"title":{},"body":{"classes/FarmMapperProfile.html":{},"classes/WorkerMapperProfile.html":{}}}],["autoschemafile",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autotransformhttperrors",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["available",{"_index":1661,"title":{},"body":{"modules.html":{}}}],["await",{"_index":85,"title":{},"body":{"injectables/AccountService.html":{},"controllers/AuthController.html":{},"injectables/AuthSerializer.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/FarmRepository.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/OwnerRepository.html":{},"guards/RolesGuard.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":1640,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":925,"title":{},"body":{"interfaces/Filtering.html":{},"interfaces/Sorting.html":{}}}],["badrequestexception('filter",{"_index":942,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["badrequestexception('invalid",{"_index":1190,"title":{},"body":{"interfaces/Sorting.html":{},"miscellaneous/variables.html":{}}}],["badrequestexception('pattern",{"_index":959,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["badrequestexception(`invalid",{"_index":967,"title":{},"body":{"interfaces/Filtering.html":{},"interfaces/Sorting.html":{},"miscellaneous/variables.html":{}}}],["bankinfo",{"_index":332,"title":{"classes/BankInfo.html":{}},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerDto.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDto.html":{},"coverage.html":{}}}],["bankinfodto",{"_index":383,"title":{"classes/BankInfoDto.html":{}},"body":{"classes/BankInfoDto.html":{},"classes/WorkerDto.html":{},"coverage.html":{}}}],["bankname",{"_index":335,"title":{},"body":{"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{}}}],["base",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["base.model",{"_index":570,"title":{},"body":{"classes/Farm.html":{}}}],["base/roles",{"_index":617,"title":{},"body":{"controllers/FarmController.html":{},"guards/RolesGuard.html":{},"controllers/WorkerController.html":{}}}],["baseexceptionfilter",{"_index":507,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["basemodel",{"_index":345,"title":{"classes/BaseModel.html":{}},"body":{"classes/BankInfo.html":{},"classes/BaseModel.html":{},"classes/Farm.html":{},"classes/SalaryHistory.html":{},"classes/User.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"coverage.html":{}}}],["basemodel:12",{"_index":569,"title":{},"body":{"classes/Farm.html":{},"classes/Worker.html":{}}}],["basemodel:7",{"_index":568,"title":{},"body":{"classes/Farm.html":{},"classes/Worker.html":{}}}],["basemodule",{"_index":164,"title":{"modules/BaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BaseModule.html":{},"modules.html":{},"overview.html":{}}}],["benefits",{"_index":375,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDto.html":{}}}],["benefits.dto",{"_index":1423,"title":{},"body":{"classes/WorkerSalaryDto.html":{}}}],["benefits.dto.ts",{"_index":1281,"title":{},"body":{"classes/WorkerBenefitsDto.html":{},"coverage.html":{}}}],["benefits.dto.ts:5",{"_index":1282,"title":{},"body":{"classes/WorkerBenefitsDto.html":{}}}],["blacklisted",{"_index":9,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountService.html":{},"classes/BankInfo.html":{},"classes/CreateOwnerDto.html":{},"classes/Owner.html":{},"classes/SalaryHistory.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerDto.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{}}}],["block",{"_index":1556,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["body",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{},"classes/ExceptionsFilter.html":{},"controllers/FarmController.html":{},"controllers/WorkerController.html":{}}}],["bonus",{"_index":363,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerBenefitsDto.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{}}}],["boolean",{"_index":15,"title":{},"body":{"interfaces/Account.html":{},"classes/ApiResponseBuilder.html":{},"guards/AuthenticatedGuard.html":{},"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/CreateOwnerDto.html":{},"classes/Owner.html":{},"classes/PaginatedResponseData.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"classes/Response.html":{},"classes/SalaryHistory.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerDto.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDto.html":{},"miscellaneous/variables.html":{}}}],["boolean('true",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":36,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RestModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["botellas",{"_index":1582,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bottles",{"_index":1581,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["browse",{"_index":1659,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1657,"title":{},"body":{"modules.html":{}}}],["build",{"_index":1135,"title":{},"body":{"classes/PaginationBuilder.html":{}}}],["build(snapshot",{"_index":1132,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationBuilder.html":{}}}],["building",{"_index":1606,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":304,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":309,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"guards/RolesGuard.html":{}}}],["capitalize",{"_index":713,"title":{},"body":{"classes/FarmDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["capitalize(`${value",{"_index":727,"title":{},"body":{"classes/FarmDto.html":{}}}],["capitalize(input",{"_index":1596,"title":{},"body":{"miscellaneous/functions.html":{}}}],["carnica",{"_index":1571,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["catch",{"_index":119,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthSerializer.html":{},"injectables/EmailService.html":{},"classes/ExceptionsFilter.html":{},"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{}}}],["catch(exception",{"_index":498,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["cattle",{"_index":1669,"title":{},"body":{"properties.html":{}}}],["cattlefarmingarea",{"_index":539,"title":{},"body":{"classes/Farm.html":{},"classes/FarmDto.html":{}}}],["cfg",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["cfg.get('mail_api_key",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["change",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":939,"title":{},"body":{"interfaces/Filtering.html":{},"controllers/HealthController.html":{},"miscellaneous/variables.html":{}}}],["city",{"_index":540,"title":{},"body":{"classes/Farm.html":{},"classes/FarmDto.html":{}}}],["claims",{"_index":102,"title":{},"body":{"injectables/AccountService.html":{}}}],["class",{"_index":52,"title":{"classes/ApiResponseBuilder.html":{},"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/BaseModel.html":{},"classes/CreateOwnerDto.html":{},"classes/ExceptionsFilter.html":{},"classes/Farm.html":{},"classes/FarmDto.html":{},"classes/FarmMapperProfile.html":{},"classes/FirebaseAuthStrategy.html":{},"classes/LinkFarmOwnerDto.html":{},"classes/LinkFarmWorkerDto.html":{},"classes/Owner.html":{},"classes/PaginatedResponseData.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"classes/Payload.html":{},"classes/Response.html":{},"classes/SalaryHistory.html":{},"classes/SalaryHistoryDto.html":{},"classes/UnlinkFarmOwnerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerBenefitsDto.html":{},"classes/WorkerDto.html":{},"classes/WorkerMapperProfile.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDeductionsDto.html":{},"classes/WorkerSalaryDto.html":{}},"body":{"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/ApiResponseBuilder.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSerializer.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/BaseModel.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateOwnerDto.html":{},"injectables/EmailService.html":{},"classes/ExceptionsFilter.html":{},"classes/Farm.html":{},"controllers/FarmController.html":{},"classes/FarmDto.html":{},"classes/FarmMapperProfile.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"classes/FirebaseAuthStrategy.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"classes/LinkFarmOwnerDto.html":{},"classes/LinkFarmWorkerDto.html":{},"injectables/LoggerContextMiddleware.html":{},"classes/Owner.html":{},"injectables/OwnerRepository.html":{},"classes/PaginatedResponseData.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"classes/Payload.html":{},"classes/Response.html":{},"modules/RestModule.html":{},"guards/RolesGuard.html":{},"classes/SalaryHistory.html":{},"classes/SalaryHistoryDto.html":{},"classes/UnlinkFarmOwnerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerBenefitsDto.html":{},"controllers/WorkerController.html":{},"classes/WorkerDto.html":{},"classes/WorkerMapperProfile.html":{},"injectables/WorkerRepository.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDeductionsDto.html":{},"classes/WorkerSalaryDto.html":{},"injectables/WorkerService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":124,"title":{},"body":{"classes/ApiResponseBuilder.html":{},"modules/AppModule.html":{},"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/BaseModel.html":{},"classes/CreateOwnerDto.html":{},"classes/ExceptionsFilter.html":{},"classes/Farm.html":{},"classes/FarmDto.html":{},"classes/FarmMapperProfile.html":{},"classes/FirebaseAuthStrategy.html":{},"classes/LinkFarmOwnerDto.html":{},"classes/LinkFarmWorkerDto.html":{},"classes/Owner.html":{},"classes/PaginatedResponseData.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"classes/Payload.html":{},"classes/Response.html":{},"classes/SalaryHistory.html":{},"classes/SalaryHistoryDto.html":{},"classes/UnlinkFarmOwnerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerBenefitsDto.html":{},"classes/WorkerDto.html":{},"classes/WorkerMapperProfile.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDeductionsDto.html":{},"classes/WorkerSalaryDto.html":{},"overview.html":{}}}],["clicktracking",{"_index":481,"title":{},"body":{"injectables/EmailService.html":{}}}],["client_email",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["cloud/firestore",{"_index":781,"title":{},"body":{"injectables/FarmRepository.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"injectables/OwnerRepository.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"injectables/WorkerRepository.html":{},"dependencies.html":{}}}],["cloud/firestore/build/src/util",{"_index":783,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{}}}],["cluster_accountmodule",{"_index":39,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_exports",{"_index":41,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_providers",{"_index":40,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":242,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":243,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":244,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":245,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_restmodule",{"_index":1147,"title":{},"body":{"modules/RestModule.html":{},"overview.html":{}}}],["cluster_restmodule_exports",{"_index":1148,"title":{},"body":{"modules/RestModule.html":{},"overview.html":{}}}],["cluster_restmodule_providers",{"_index":1149,"title":{},"body":{"modules/RestModule.html":{},"overview.html":{}}}],["code",{"_index":145,"title":{},"body":{"classes/ApiResponseBuilder.html":{}}}],["collectionproviders",{"_index":997,"title":{},"body":{"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{}}}],["collectionreference",{"_index":759,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/OwnerRepository.html":{},"injectables/WorkerRepository.html":{}}}],["collections",{"_index":776,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{},"miscellaneous/enumerations.html":{}}}],["comment",{"_index":1009,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["common",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["common/db/firestore.module",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["common/db/firestore.provider",{"_index":989,"title":{},"body":{"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{}}}],["common/decorators",{"_index":619,"title":{},"body":{"controllers/FarmController.html":{},"guards/RolesGuard.html":{},"controllers/WorkerController.html":{}}}],["common/guards",{"_index":621,"title":{},"body":{"controllers/FarmController.html":{},"controllers/WorkerController.html":{}}}],["common/utils/string.utils",{"_index":714,"title":{},"body":{"classes/FarmDto.html":{}}}],["commonmodule",{"_index":165,"title":{"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["completo",{"_index":353,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"miscellaneous/enumerations.html":{}}}],["compression",{"_index":1515,"title":{},"body":{"dependencies.html":{}}}],["condition",{"_index":1053,"title":{},"body":{"injectables/LoggerContextMiddleware.html":{}}}],["config",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["config/configuration",{"_index":253,"title":{},"body":{"modules/AuthModule.html":{}}}],["configmodule",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configservice",{"_index":174,"title":{"injectables/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"injectables/EmailService.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"coverage.html":{}}}],["configservice.get('client_email",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('private_key",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('project_id",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configure",{"_index":410,"title":{},"body":{"modules/CommonModule.html":{}}}],["configure(consumer",{"_index":411,"title":{},"body":{"modules/CommonModule.html":{}}}],["connectionlimit",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":83,"title":{},"body":{"injectables/AccountService.html":{},"controllers/AuthController.html":{},"injectables/AuthSerializer.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/EmailService.html":{},"classes/ExceptionsFilter.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"interfaces/Filtering.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"injectables/GqlAuthGuard.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/OwnerRepository.html":{},"guards/RolesGuard.html":{},"interfaces/Sorting.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":60,"title":{},"body":{"injectables/AccountService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"injectables/EmailService.html":{},"controllers/FarmController.html":{},"classes/FarmMapperProfile.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"classes/FirebaseAuthStrategy.html":{},"controllers/HealthController.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/OwnerRepository.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{},"controllers/WorkerController.html":{},"classes/WorkerMapperProfile.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{}}}],["constructor(@injectmapper",{"_index":747,"title":{},"body":{"classes/FarmMapperProfile.html":{},"classes/WorkerMapperProfile.html":{}}}],["constructor(emailservice",{"_index":460,"title":{},"body":{"injectables/EmailService.html":{}}}],["constructor(logger",{"_index":61,"title":{},"body":{"injectables/AccountService.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/OwnerRepository.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{}}}],["constructor(mapper",{"_index":736,"title":{},"body":{"classes/FarmMapperProfile.html":{},"classes/WorkerMapperProfile.html":{}}}],["constructor(private",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"injectables/UserService.html":{}}}],["constructor(reflector",{"_index":306,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"guards/RolesGuard.html":{}}}],["constructor(repository",{"_index":1232,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(user",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["consumer",{"_index":414,"title":{},"body":{"modules/CommonModule.html":{}}}],["consumer.apply(loggercontextmiddleware).forroutes",{"_index":420,"title":{},"body":{"modules/CommonModule.html":{}}}],["contains",{"_index":933,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["contains|in|not",{"_index":954,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":312,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"injectables/GqlAuthGuard.html":{},"injectables/LoggerContextMiddleware.html":{},"guards/RolesGuard.html":{}}}],["context.getclass",{"_index":1166,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":323,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"guards/RolesGuard.html":{}}}],["context.gettype",{"_index":326,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"miscellaneous/variables.html":{}}}],["context.middleware.ts",{"_index":1037,"title":{},"body":{"injectables/LoggerContextMiddleware.html":{},"coverage.html":{}}}],["context.middleware.ts:11",{"_index":1039,"title":{},"body":{"injectables/LoggerContextMiddleware.html":{}}}],["context.middleware.ts:17",{"_index":1042,"title":{},"body":{"injectables/LoggerContextMiddleware.html":{}}}],["context.switchtohttp().getrequest",{"_index":331,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"miscellaneous/variables.html":{}}}],["contractor",{"_index":354,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"miscellaneous/enumerations.html":{}}}],["contratista",{"_index":355,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"miscellaneous/enumerations.html":{}}}],["controller",{"_index":220,"title":{"controllers/AuthController.html":{},"controllers/FarmController.html":{},"controllers/HealthController.html":{},"controllers/WorkerController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/FarmController.html":{},"controllers/HealthController.html":{},"controllers/WorkerController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('farm",{"_index":640,"title":{},"body":{"controllers/FarmController.html":{}}}],["controller('worker",{"_index":1308,"title":{},"body":{"controllers/WorkerController.html":{}}}],["controllers",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"modules/BaseModule.html":{},"controllers/FarmController.html":{},"controllers/HealthController.html":{},"modules/RestModule.html":{},"controllers/WorkerController.html":{},"overview.html":{}}}],["core/email.service",{"_index":51,"title":{},"body":{"modules/AccountModule.html":{},"injectables/AccountService.html":{}}}],["core/response.model",{"_index":639,"title":{},"body":{"controllers/FarmController.html":{},"controllers/WorkerController.html":{}}}],["core/response/api",{"_index":1307,"title":{},"body":{"controllers/WorkerController.html":{}}}],["correctamente",{"_index":488,"title":{},"body":{"injectables/EmailService.html":{}}}],["cors",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["country",{"_index":437,"title":{},"body":{"classes/CreateOwnerDto.html":{},"classes/Farm.html":{},"classes/FarmDto.html":{},"classes/Owner.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["countrycode",{"_index":438,"title":{},"body":{"classes/CreateOwnerDto.html":{},"classes/Farm.html":{},"classes/FarmDto.html":{},"classes/UserDto.html":{}}}],["coverage",{"_index":1441,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":1231,"title":{},"body":{"injectables/UserService.html":{}}}],["create(data",{"_index":1234,"title":{},"body":{"injectables/UserService.html":{}}}],["createaccount",{"_index":59,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{}}}],["createaccount(account",{"_index":67,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{}}}],["created",{"_index":94,"title":{},"body":{"injectables/AccountService.html":{},"controllers/AuthController.html":{},"injectables/WorkerRepository.html":{}}}],["createdat",{"_index":392,"title":{},"body":{"classes/BaseModel.html":{},"classes/Farm.html":{},"injectables/FarmRepository.html":{},"injectables/OwnerRepository.html":{},"classes/Worker.html":{},"injectables/WorkerRepository.html":{}}}],["createfarm",{"_index":574,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{}}}],["createfarm(@body",{"_index":654,"title":{},"body":{"controllers/FarmController.html":{}}}],["createfarm(data",{"_index":582,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{}}}],["createfunctions",{"_index":1450,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["createfunctions(expressserver",{"_index":1696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createmap",{"_index":741,"title":{},"body":{"classes/FarmMapperProfile.html":{},"classes/WorkerMapperProfile.html":{}}}],["createmap(mapper",{"_index":751,"title":{},"body":{"classes/FarmMapperProfile.html":{},"classes/WorkerMapperProfile.html":{}}}],["createowner",{"_index":1074,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["createowner(data",{"_index":1081,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["createownerdto",{"_index":434,"title":{"classes/CreateOwnerDto.html":{}},"body":{"classes/CreateOwnerDto.html":{},"injectables/OwnerRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createparamdecorator",{"_index":926,"title":{},"body":{"interfaces/Filtering.html":{},"interfaces/Sorting.html":{}}}],["createparamdecorator((context",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createparamdecorator((data",{"_index":936,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["createparamdecorator((validparams",{"_index":1187,"title":{},"body":{"interfaces/Sorting.html":{},"miscellaneous/variables.html":{}}}],["createworker",{"_index":1284,"title":{},"body":{"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{}}}],["createworker(@body",{"_index":1318,"title":{},"body":{"controllers/WorkerController.html":{}}}],["createworker(data",{"_index":1289,"title":{},"body":{"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{}}}],["credentials",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["ctx",{"_index":328,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"interfaces/Filtering.html":{},"injectables/GqlAuthGuard.html":{},"guards/RolesGuard.html":{},"interfaces/Sorting.html":{},"miscellaneous/variables.html":{}}}],["ctx.getcontext().req",{"_index":1011,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["ctx.req",{"_index":330,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":937,"title":{},"body":{"interfaces/Filtering.html":{},"interfaces/Sorting.html":{},"miscellaneous/variables.html":{}}}],["cuadrados",{"_index":1560,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["currency",{"_index":373,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDto.html":{}}}],["custom",{"_index":101,"title":{},"body":{"injectables/AccountService.html":{}}}],["customdecorator",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customprops",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dairyproduction",{"_index":1567,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["data",{"_index":133,"title":{},"body":{"classes/ApiResponseBuilder.html":{},"injectables/AuthSerializer.html":{},"injectables/EmailService.html":{},"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"injectables/OwnerRepository.html":{},"classes/PaginatedResponseData.html":{},"classes/Response.html":{},"injectables/UserService.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{}}}],["data.docs.length",{"_index":814,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["data.docs.map((doc",{"_index":811,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["data.docs[limit",{"_index":815,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["data.empty",{"_index":810,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["data.farmid",{"_index":664,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{}}}],["data.id",{"_index":1095,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["data.includes(property",{"_index":966,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["data.ownerid",{"_index":663,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{}}}],["data.trackingsettings",{"_index":480,"title":{},"body":{"injectables/EmailService.html":{}}}],["data.workerid",{"_index":671,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{}}}],["database",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":366,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/SalaryHistoryDto.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{}}}],["date().toisostring",{"_index":394,"title":{},"body":{"classes/BaseModel.html":{},"classes/Farm.html":{},"injectables/FarmRepository.html":{},"injectables/OwnerRepository.html":{},"classes/Worker.html":{},"injectables/WorkerRepository.html":{}}}],["datos",{"_index":148,"title":{},"body":{"classes/ApiResponseBuilder.html":{}}}],["db",{"_index":1000,"title":{},"body":{"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["db.collection(providername",{"_index":1001,"title":{},"body":{"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{}}}],["dbname",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbprovider",{"_index":995,"title":{},"body":{"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{}}}],["debug",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":35,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RestModule.html":{},"overview.html":{}}}],["decodedidtoken",{"_index":974,"title":{},"body":{"classes/FirebaseAuthStrategy.html":{}}}],["decodedtoken",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["decodedtoken.email",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["decodedtoken['name",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["decodedtoken['roles",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["decorators",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/BaseModel.html":{},"classes/CreateOwnerDto.html":{},"classes/Farm.html":{},"controllers/FarmController.html":{},"classes/FarmDto.html":{},"controllers/HealthController.html":{},"classes/LinkFarmOwnerDto.html":{},"classes/LinkFarmWorkerDto.html":{},"classes/Owner.html":{},"classes/Pagination.html":{},"classes/SalaryHistory.html":{},"classes/SalaryHistoryDto.html":{},"classes/UnlinkFarmOwnerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerBenefitsDto.html":{},"controllers/WorkerController.html":{},"classes/WorkerDto.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDeductionsDto.html":{},"classes/WorkerSalaryDto.html":{}}}],["decorators/filtering.decorator",{"_index":623,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{}}}],["decorators/pagination.decorator",{"_index":624,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{}}}],["decorators/sorting.decorator",{"_index":626,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{}}}],["deductions",{"_index":374,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDto.html":{}}}],["deductions.dto",{"_index":1424,"title":{},"body":{"classes/WorkerSalaryDto.html":{}}}],["deductions.dto.ts",{"_index":1408,"title":{},"body":{"classes/WorkerSalaryDeductionsDto.html":{},"coverage.html":{}}}],["deductions.dto.ts:5",{"_index":1410,"title":{},"body":{"classes/WorkerSalaryDeductionsDto.html":{}}}],["deductions.dto.ts:8",{"_index":1409,"title":{},"body":{"classes/WorkerSalaryDeductionsDto.html":{}}}],["dedupe",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deep",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":140,"title":{},"body":{"classes/ApiResponseBuilder.html":{},"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/BaseModel.html":{},"injectables/EmailService.html":{},"classes/ExceptionsFilter.html":{},"classes/Farm.html":{},"classes/Owner.html":{},"classes/PaginationBuilder.html":{},"classes/Payload.html":{},"classes/User.html":{},"injectables/UtilService.html":{},"classes/Worker.html":{},"classes/WorkerDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["defaultversion",{"_index":1708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":63,"title":{},"body":{"injectables/AccountService.html":{},"classes/ApiResponseBuilder.html":{},"controllers/AuthController.html":{},"injectables/AuthSerializer.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/BaseModel.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateOwnerDto.html":{},"injectables/EmailService.html":{},"classes/ExceptionsFilter.html":{},"classes/Farm.html":{},"controllers/FarmController.html":{},"classes/FarmDto.html":{},"classes/FarmMapperProfile.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"classes/FirebaseAuthStrategy.html":{},"modules/FirestoreModule.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"classes/LinkFarmOwnerDto.html":{},"classes/LinkFarmWorkerDto.html":{},"injectables/LoggerContextMiddleware.html":{},"classes/Owner.html":{},"injectables/OwnerRepository.html":{},"classes/PaginatedResponseData.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"classes/Payload.html":{},"classes/Response.html":{},"guards/RolesGuard.html":{},"classes/SalaryHistory.html":{},"classes/SalaryHistoryDto.html":{},"classes/UnlinkFarmOwnerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerBenefitsDto.html":{},"controllers/WorkerController.html":{},"classes/WorkerDto.html":{},"classes/WorkerMapperProfile.html":{},"injectables/WorkerRepository.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDeductionsDto.html":{},"classes/WorkerSalaryDto.html":{},"injectables/WorkerService.html":{}}}],["deleted",{"_index":882,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["delimiter",{"_index":1254,"title":{},"body":{"injectables/UtilService.html":{}}}],["dependencies",{"_index":33,"title":{"dependencies.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RestModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":1013,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{},"properties.html":{}}}],["deserializeuser",{"_index":267,"title":{},"body":{"injectables/AuthSerializer.html":{}}}],["deserializeuser(data",{"_index":269,"title":{},"body":{"injectables/AuthSerializer.html":{}}}],["dest.id",{"_index":750,"title":{},"body":{"classes/FarmMapperProfile.html":{},"classes/WorkerMapperProfile.html":{}}}],["desvinculado",{"_index":885,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["development",{"_index":1618,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["different",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direction",{"_index":1185,"title":{},"body":{"interfaces/Sorting.html":{},"miscellaneous/variables.html":{}}}],["disable",{"_index":153,"title":{},"body":{"classes/ApiResponseBuilder.html":{},"classes/ExceptionsFilter.html":{},"injectables/FarmRepository.html":{},"injectables/GqlAuthGuard.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/OwnerRepository.html":{},"injectables/UtilService.html":{}}}],["displayname",{"_index":91,"title":{},"body":{"injectables/AccountService.html":{}}}],["distintos",{"_index":853,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["doble",{"_index":1565,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["doc",{"_index":824,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["doc.data",{"_index":812,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{}}}],["doc.exists",{"_index":826,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["docref",{"_index":1097,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["docref.get",{"_index":1100,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["docref.set(ownerinfo",{"_index":1099,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["documentation",{"_index":1442,"title":{},"body":{"coverage.html":{}}}],["don't",{"_index":948,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["done",{"_index":270,"title":{},"body":{"injectables/AuthSerializer.html":{},"injectables/WorkerRepository.html":{}}}],["done(error",{"_index":284,"title":{},"body":{"injectables/AuthSerializer.html":{}}}],["done(null",{"_index":281,"title":{},"body":{"injectables/AuthSerializer.html":{}}}],["doublepurpose",{"_index":1564,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dtos/bank",{"_index":1346,"title":{},"body":{"classes/WorkerDto.html":{}}}],["dtos/create",{"_index":1088,"title":{},"body":{"injectables/OwnerRepository.html":{},"injectables/UserService.html":{}}}],["dtos/farm.dto",{"_index":627,"title":{},"body":{"controllers/FarmController.html":{},"classes/FarmMapperProfile.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{}}}],["dtos/link",{"_index":628,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{}}}],["dtos/salary",{"_index":1421,"title":{},"body":{"classes/WorkerSalaryDto.html":{}}}],["dtos/ublink",{"_index":631,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{}}}],["dtos/unlink",{"_index":632,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{}}}],["dtos/worker",{"_index":1348,"title":{},"body":{"classes/WorkerDto.html":{},"classes/WorkerSalaryDto.html":{}}}],["dtos/worker.dto",{"_index":1305,"title":{},"body":{"controllers/WorkerController.html":{},"classes/WorkerMapperProfile.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{}}}],["dynamicmodule",{"_index":985,"title":{},"body":{"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{}}}],["dynamictemplatedata",{"_index":478,"title":{},"body":{"injectables/EmailService.html":{}}}],["e",{"_index":120,"title":{},"body":{"injectables/AccountService.html":{},"injectables/EmailService.html":{},"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{}}}],["e.message",{"_index":875,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{}}}],["e2e",{"_index":1628,"title":{},"body":{"index.html":{}}}],["each",{"_index":457,"title":{},"body":{"classes/CreateOwnerDto.html":{},"classes/UserDto.html":{},"classes/WorkerDto.html":{}}}],["efficient",{"_index":1607,"title":{},"body":{"index.html":{}}}],["el",{"_index":867,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["email",{"_index":10,"title":{},"body":{"interfaces/Account.html":{},"interfaces/Account-1.html":{},"injectables/AccountService.html":{},"injectables/AuthService.html":{},"classes/BankInfo.html":{},"classes/CreateOwnerDto.html":{},"injectables/EmailService.html":{},"classes/Owner.html":{},"classes/SalaryHistory.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerDto.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{}}}],["emaillink",{"_index":104,"title":{},"body":{"injectables/AccountService.html":{}}}],["emailservice",{"_index":43,"title":{"injectables/EmailService.html":{}},"body":{"modules/AccountModule.html":{},"injectables/AccountService.html":{},"injectables/EmailService.html":{},"coverage.html":{},"overview.html":{}}}],["employeestatus",{"_index":348,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDto.html":{},"miscellaneous/enumerations.html":{}}}],["enable",{"_index":482,"title":{},"body":{"injectables/EmailService.html":{}}}],["enabletracking",{"_index":466,"title":{},"body":{"injectables/EmailService.html":{}}}],["encontrados",{"_index":149,"title":{},"body":{"classes/ApiResponseBuilder.html":{}}}],["entities",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enum",{"_index":347,"title":{},"body":{"classes/BankInfo.html":{},"interfaces/Filtering.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{}}}],["enumerations",{"_index":1542,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/area",{"_index":715,"title":{},"body":{"classes/FarmDto.html":{}}}],["enums/collections",{"_index":777,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{}}}],["enums/farm",{"_index":717,"title":{},"body":{"classes/FarmDto.html":{}}}],["enums/milk",{"_index":719,"title":{},"body":{"classes/FarmDto.html":{}}}],["enums/weight",{"_index":720,"title":{},"body":{"classes/FarmDto.html":{}}}],["enviado",{"_index":487,"title":{},"body":{"injectables/EmailService.html":{}}}],["environment",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["equals",{"_index":1573,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":531,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["error",{"_index":271,"title":{},"body":{"injectables/AuthSerializer.html":{},"classes/ExceptionsFilter.html":{},"injectables/LoggerContextMiddleware.html":{},"miscellaneous/variables.html":{}}}],["error(`notfoundconfig",{"_index":433,"title":{},"body":{"injectables/ConfigService.html":{}}}],["error(e.message",{"_index":122,"title":{},"body":{"injectables/AccountService.html":{}}}],["eslint",{"_index":152,"title":{},"body":{"classes/ApiResponseBuilder.html":{},"classes/ExceptionsFilter.html":{},"injectables/FarmRepository.html":{},"injectables/GqlAuthGuard.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/OwnerRepository.html":{},"injectables/UtilService.html":{}}}],["eslint/ban",{"_index":1007,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["eslint/no",{"_index":515,"title":{},"body":{"classes/ExceptionsFilter.html":{},"injectables/FarmRepository.html":{},"injectables/GqlAuthGuard.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/UtilService.html":{}}}],["example",{"_index":1615,"title":{},"body":{"index.html":{}}}],["exception",{"_index":502,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exception.getstatus",{"_index":534,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exceptionsfilter",{"_index":186,"title":{"classes/ExceptionsFilter.html":{}},"body":{"modules/AppModule.html":{},"classes/ExceptionsFilter.html":{},"coverage.html":{}}}],["executioncontext",{"_index":310,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"interfaces/Filtering.html":{},"injectables/GqlAuthGuard.html":{},"guards/RolesGuard.html":{},"interfaces/Sorting.html":{},"miscellaneous/variables.html":{}}}],["exists",{"_index":878,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["exitosamente",{"_index":872,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["expect",{"_index":1050,"title":{},"body":{"injectables/LoggerContextMiddleware.html":{}}}],["explicit",{"_index":1257,"title":{},"body":{"injectables/UtilService.html":{}}}],["export",{"_index":19,"title":{},"body":{"interfaces/Account.html":{},"interfaces/Account-1.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/ApiResponseBuilder.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSerializer.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/BaseModel.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateOwnerDto.html":{},"injectables/EmailService.html":{},"classes/ExceptionsFilter.html":{},"classes/Farm.html":{},"controllers/FarmController.html":{},"classes/FarmDto.html":{},"classes/FarmMapperProfile.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"interfaces/Filtering.html":{},"classes/FirebaseAuthStrategy.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"classes/LinkFarmOwnerDto.html":{},"classes/LinkFarmWorkerDto.html":{},"injectables/LoggerContextMiddleware.html":{},"classes/Owner.html":{},"injectables/OwnerRepository.html":{},"classes/PaginatedResponseData.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"classes/Payload.html":{},"classes/Response.html":{},"modules/RestModule.html":{},"guards/RolesGuard.html":{},"classes/SalaryHistory.html":{},"classes/SalaryHistoryDto.html":{},"interfaces/Sorting.html":{},"classes/UnlinkFarmOwnerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerBenefitsDto.html":{},"controllers/WorkerController.html":{},"classes/WorkerDto.html":{},"classes/WorkerMapperProfile.html":{},"injectables/WorkerRepository.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDeductionsDto.html":{},"classes/WorkerSalaryDto.html":{},"injectables/WorkerService.html":{}}}],["exports",{"_index":38,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"modules/RestModule.html":{},"overview.html":{}}}],["express",{"_index":319,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"classes/ExceptionsFilter.html":{},"interfaces/Filtering.html":{},"injectables/LoggerContextMiddleware.html":{},"interfaces/Sorting.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["expressadapter(expressinstance",{"_index":1702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expressinstance",{"_index":1698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expressserver",{"_index":1451,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["expressserver(request",{"_index":1697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":265,"title":{},"body":{"injectables/AuthSerializer.html":{},"classes/BankInfo.html":{},"injectables/ConfigService.html":{},"classes/ExceptionsFilter.html":{},"classes/Farm.html":{},"classes/FarmMapperProfile.html":{},"classes/FirebaseAuthStrategy.html":{},"injectables/GqlAuthGuard.html":{},"classes/Owner.html":{},"classes/SalaryHistory.html":{},"classes/User.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerMapperProfile.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{}}}],["extra",{"_index":1058,"title":{},"body":{"injectables/LoggerContextMiddleware.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":151,"title":{},"body":{"classes/ApiResponseBuilder.html":{},"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"injectables/EmailService.html":{},"classes/FarmDto.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerDto.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"miscellaneous/variables.html":{}}}],["farm",{"_index":535,"title":{"classes/Farm.html":{}},"body":{"classes/Farm.html":{},"controllers/FarmController.html":{},"classes/FarmMapperProfile.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"classes/LinkFarmOwnerDto.html":{},"classes/LinkFarmWorkerDto.html":{},"classes/UnlinkFarmOwnerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{},"controllers/WorkerController.html":{},"coverage.html":{},"properties.html":{}}}],["farm.exists",{"_index":860,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["farmcollection",{"_index":761,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["farmcontroller",{"_index":572,"title":{"controllers/FarmController.html":{}},"body":{"controllers/FarmController.html":{},"modules/RestModule.html":{},"coverage.html":{}}}],["farmdata",{"_index":843,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["farmdata.data",{"_index":845,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["farmdto",{"_index":583,"title":{"classes/FarmDto.html":{}},"body":{"controllers/FarmController.html":{},"classes/FarmDto.html":{},"classes/FarmMapperProfile.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"coverage.html":{}}}],["farmid",{"_index":379,"title":{},"body":{"classes/BankInfo.html":{},"classes/CreateOwnerDto.html":{},"injectables/FarmRepository.html":{},"classes/LinkFarmOwnerDto.html":{},"classes/LinkFarmWorkerDto.html":{},"classes/Payload.html":{},"classes/SalaryHistory.html":{},"classes/UnlinkFarmOwnerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{}}}],["farminfo",{"_index":839,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["farmmapperprofile",{"_index":730,"title":{"classes/FarmMapperProfile.html":{}},"body":{"classes/FarmMapperProfile.html":{},"modules/RestModule.html":{},"coverage.html":{}}}],["farmpurpose",{"_index":541,"title":{},"body":{"classes/Farm.html":{},"classes/FarmDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["farmpurposeresolver",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["farmref",{"_index":840,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["farmref.get",{"_index":859,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["farmref.set(farminfo",{"_index":842,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["farmref.update",{"_index":863,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["farmrepository",{"_index":752,"title":{"injectables/FarmRepository.html":{}},"body":{"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"modules/RestModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["farms",{"_index":854,"title":{},"body":{"injectables/FarmRepository.html":{},"classes/Owner.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/WorkerDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["farmservice",{"_index":636,"title":{"injectables/FarmService.html":{}},"body":{"controllers/FarmController.html":{},"injectables/FarmService.html":{},"modules/RestModule.html":{},"coverage.html":{},"overview.html":{}}}],["fatal",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fetchmore",{"_index":282,"title":{},"body":{"injectables/AuthSerializer.html":{}}}],["field",{"_index":881,"title":{},"body":{"injectables/FarmRepository.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{}}}],["field({name",{"_index":1125,"title":{},"body":{"classes/Pagination.html":{}}}],["fieldpath",{"_index":921,"title":{},"body":{"interfaces/Filtering.html":{},"interfaces/Sorting.html":{}}}],["fields",{"_index":1059,"title":{},"body":{"injectables/LoggerContextMiddleware.html":{}}}],["fieldvalue",{"_index":786,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["fieldvalue.arrayremove(data.farmid",{"_index":883,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["fieldvalue.arrayremove(data.ownerid",{"_index":879,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["fieldvalue.arrayremove(data.workerid",{"_index":893,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["fieldvalue.arrayunion(data.farmid",{"_index":866,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["fieldvalue.arrayunion(data.ownerid",{"_index":864,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["fieldvalue.arrayunion(data.workerid",{"_index":890,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Account.html":{},"interfaces/Account-1.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/ApiResponseBuilder.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSerializer.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/BaseModel.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateOwnerDto.html":{},"injectables/EmailService.html":{},"classes/ExceptionsFilter.html":{},"classes/Farm.html":{},"controllers/FarmController.html":{},"classes/FarmDto.html":{},"classes/FarmMapperProfile.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"interfaces/Filtering.html":{},"classes/FirebaseAuthStrategy.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"classes/LinkFarmOwnerDto.html":{},"classes/LinkFarmWorkerDto.html":{},"injectables/LoggerContextMiddleware.html":{},"classes/Owner.html":{},"injectables/OwnerRepository.html":{},"classes/PaginatedResponseData.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"classes/Payload.html":{},"classes/Response.html":{},"modules/RestModule.html":{},"guards/RolesGuard.html":{},"classes/SalaryHistory.html":{},"classes/SalaryHistoryDto.html":{},"interfaces/Sorting.html":{},"classes/UnlinkFarmOwnerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerBenefitsDto.html":{},"controllers/WorkerController.html":{},"classes/WorkerDto.html":{},"classes/WorkerMapperProfile.html":{},"injectables/WorkerRepository.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDeductionsDto.html":{},"classes/WorkerSalaryDto.html":{},"injectables/WorkerService.html":{},"coverage.html":{}}}],["filter",{"_index":589,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"interfaces/Filtering.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{},"miscellaneous/variables.html":{}}}],["filter.match(/^[a",{"_index":950,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["filter.rule",{"_index":802,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{}}}],["filter.split",{"_index":962,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["filter.value",{"_index":803,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{}}}],["filtering",{"_index":590,"title":{"interfaces/Filtering.html":{}},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"interfaces/Filtering.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filteringparams",{"_index":622,"title":{},"body":{"controllers/FarmController.html":{},"interfaces/Filtering.html":{},"controllers/WorkerController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filteringparams(['farms",{"_index":1314,"title":{},"body":{"controllers/WorkerController.html":{}}}],["filteringparams(['name",{"_index":646,"title":{},"body":{"controllers/FarmController.html":{},"controllers/WorkerController.html":{}}}],["filteringparams(['ownerid",{"_index":652,"title":{},"body":{"controllers/FarmController.html":{}}}],["filterrule",{"_index":929,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/enumerations.html":{}}}],["filters",{"_index":961,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["filters[0",{"_index":963,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["filters[1",{"_index":964,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["filters[2",{"_index":965,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["findallworker",{"_index":1075,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["findone",{"_index":1076,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["findone(id",{"_index":1084,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["firebase",{"_index":73,"title":{},"body":{"injectables/AccountService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"classes/FirebaseAuthStrategy.html":{},"injectables/GqlAuthGuard.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/OwnerRepository.html":{},"controllers/WorkerController.html":{},"dependencies.html":{}}}],["firebase/firestore",{"_index":923,"title":{},"body":{"interfaces/Filtering.html":{},"interfaces/Sorting.html":{}}}],["firebaseauthguard",{"_index":638,"title":{},"body":{"controllers/FarmController.html":{},"injectables/GqlAuthGuard.html":{},"controllers/WorkerController.html":{}}}],["firebaseauthmodule",{"_index":256,"title":{},"body":{"modules/AuthModule.html":{}}}],["firebaseauthmodule.register",{"_index":259,"title":{},"body":{"modules/AuthModule.html":{}}}],["firebaseauthstrategy",{"_index":250,"title":{"classes/FirebaseAuthStrategy.html":{}},"body":{"modules/AuthModule.html":{},"classes/FirebaseAuthStrategy.html":{},"coverage.html":{}}}],["firebasestrategy",{"_index":971,"title":{},"body":{"classes/FirebaseAuthStrategy.html":{}}}],["firestore",{"_index":990,"title":{},"body":{"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["firestore(config",{"_index":996,"title":{},"body":{"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{}}}],["firestorecollectionproviders",{"_index":988,"title":{},"body":{"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["firestorecollectionproviders.map((providername",{"_index":998,"title":{},"body":{"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{}}}],["firestoredatabaseprovider",{"_index":986,"title":{},"body":{"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["firestoredb",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firestoremodule",{"_index":166,"title":{"modules/FirestoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"modules.html":{},"overview.html":{}}}],["firestoremodule.forroot",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["firestoremoduleoptions",{"_index":982,"title":{"interfaces/FirestoreModuleOptions.html":{}},"body":{"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"coverage.html":{}}}],["firestoreoptions",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firestoreoptionsprovider",{"_index":987,"title":{},"body":{"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fix",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format",{"_index":945,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["formember",{"_index":742,"title":{},"body":{"classes/FarmMapperProfile.html":{},"classes/WorkerMapperProfile.html":{}}}],["formember((dest",{"_index":749,"title":{},"body":{"classes/FarmMapperProfile.html":{},"classes/WorkerMapperProfile.html":{}}}],["forroot",{"_index":980,"title":{},"body":{"modules/FirestoreModule.html":{}}}],["forroot(options",{"_index":981,"title":{},"body":{"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{}}}],["found",{"_index":1106,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["framework",{"_index":1605,"title":{},"body":{"index.html":{}}}],["full",{"_index":352,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"miscellaneous/enumerations.html":{}}}],["function",{"_index":275,"title":{},"body":{"injectables/AuthSerializer.html":{},"interfaces/FirestoreModuleOptions.html":{},"injectables/LoggerContextMiddleware.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":1521,"title":{"miscellaneous/functions.html":{}},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["functions.config()['farmflow_firebase_config",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["functions.https.onrequest(async",{"_index":1695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gallons",{"_index":1579,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["galones",{"_index":1580,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["genreqid",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('farm",{"_index":1313,"title":{},"body":{"controllers/WorkerController.html":{}}}],["get('farm')@role(roles.admin",{"_index":1298,"title":{},"body":{"controllers/WorkerController.html":{}}}],["get('getbyid",{"_index":595,"title":{},"body":{"controllers/FarmController.html":{}}}],["get('getbyowner",{"_index":598,"title":{},"body":{"controllers/FarmController.html":{}}}],["get('health",{"_index":1024,"title":{},"body":{"controllers/HealthController.html":{}}}],["get()@role(roles.admin",{"_index":1295,"title":{},"body":{"controllers/WorkerController.html":{}}}],["get()@role(roles.admin)@useguards(rolesguard",{"_index":591,"title":{},"body":{"controllers/FarmController.html":{}}}],["get(path",{"_index":423,"title":{},"body":{"injectables/ConfigService.html":{}}}],["get>(path",{"_index":429,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getall",{"_index":575,"title":{},"body":{"controllers/FarmController.html":{},"injectables/WorkerService.html":{}}}],["getall(pagination",{"_index":1429,"title":{},"body":{"injectables/WorkerService.html":{}}}],["getall(paginationparams",{"_index":586,"title":{},"body":{"controllers/FarmController.html":{}}}],["getallfarms",{"_index":754,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/FarmService.html":{}}}],["getallfarms(pagination",{"_index":764,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/FarmService.html":{}}}],["getallworkerbyfarm",{"_index":1426,"title":{},"body":{"injectables/WorkerService.html":{}}}],["getallworkerbyfarm(pagination",{"_index":1431,"title":{},"body":{"injectables/WorkerService.html":{}}}],["getallworkerbyfarmid",{"_index":1354,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["getallworkerbyfarmid(pagination",{"_index":1358,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["getallworkers",{"_index":1285,"title":{},"body":{"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{}}}],["getallworkers(pagination",{"_index":1294,"title":{},"body":{"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{}}}],["getallworkersbyfarmid",{"_index":1286,"title":{},"body":{"controllers/WorkerController.html":{}}}],["getallworkersbyfarmid(pagination",{"_index":1297,"title":{},"body":{"controllers/WorkerController.html":{}}}],["getfarm",{"_index":755,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["getfarm(filter",{"_index":767,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["getfarmbyid",{"_index":576,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmService.html":{}}}],["getfarmbyid(@filteringparams(['id",{"_index":648,"title":{},"body":{"controllers/FarmController.html":{}}}],["getfarmbyid(filter",{"_index":594,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmService.html":{}}}],["getfarmbyowner",{"_index":756,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["getfarmbyowner(sort",{"_index":769,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["getfarmbyownerid",{"_index":577,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmService.html":{}}}],["getfarmbyownerid(sort",{"_index":597,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmService.html":{}}}],["getfirestore",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gethttpstatus",{"_index":496,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["gethttpstatus(exception",{"_index":503,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["getpayload",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["getpayload(token",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["getprofile",{"_index":739,"title":{},"body":{"classes/FarmMapperProfile.html":{},"classes/WorkerMapperProfile.html":{}}}],["getrequest",{"_index":305,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"injectables/GqlAuthGuard.html":{}}}],["getrequest(context",{"_index":313,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"injectables/GqlAuthGuard.html":{}}}],["getting",{"_index":1601,"title":{"index.html":{}},"body":{}}],["getworker",{"_index":1287,"title":{},"body":{"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{}}}],["getworker(@filteringparams(['name",{"_index":1316,"title":{},"body":{"controllers/WorkerController.html":{}}}],["getworker(filter",{"_index":1300,"title":{},"body":{"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{}}}],["given",{"_index":1107,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["global",{"_index":254,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{}}}],["google",{"_index":780,"title":{},"body":{"injectables/FarmRepository.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"injectables/OwnerRepository.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"injectables/WorkerRepository.html":{},"dependencies.html":{}}}],["gqlargumentshost",{"_index":508,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["gqlargumentshost.create(host",{"_index":512,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["gqlauthguard",{"_index":1003,"title":{"injectables/GqlAuthGuard.html":{}},"body":{"injectables/GqlAuthGuard.html":{},"coverage.html":{}}}],["gqlcontexttype",{"_index":316,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"classes/ExceptionsFilter.html":{}}}],["gqlexceptionfilter",{"_index":495,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["gqlexecutioncontext",{"_index":317,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"injectables/GqlAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["gqlexecutioncontext.create(context",{"_index":1010,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["gqlexecutioncontext.create(context).getcontext",{"_index":329,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"miscellaneous/variables.html":{}}}],["gqlhost",{"_index":511,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["gqlhost.getcontext",{"_index":520,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["graph",{"_index":1660,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":327,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"classes/ExceptionsFilter.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["greater_than",{"_index":931,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/enumerations.html":{}}}],["greater_than_or_equals",{"_index":1575,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["grow",{"_index":1635,"title":{},"body":{"index.html":{}}}],["guard",{"_index":300,"title":{"guards/AuthenticatedGuard.html":{},"guards/RolesGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":302,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["h",{"_index":1672,"title":{},"body":{"properties.html":{}}}],["ha",{"_index":869,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["hasdebitcardavailable",{"_index":336,"title":{},"body":{"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{}}}],["hasnextpage",{"_index":1120,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationBuilder.html":{}}}],["health",{"_index":1022,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheck",{"_index":1017,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckresult",{"_index":1018,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":1019,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":403,"title":{"controllers/HealthController.html":{}},"body":{"modules/BaseModule.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["healthindicatorresult",{"_index":1020,"title":{},"body":{"controllers/HealthController.html":{}}}],["hectare",{"_index":1554,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hectarea",{"_index":1555,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["helmet",{"_index":1526,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":1646,"title":{},"body":{"index.html":{}}}],["herrold",{"_index":1671,"title":{},"body":{"properties.html":{}}}],["hidewarnings",{"_index":479,"title":{},"body":{"injectables/EmailService.html":{}}}],["history",{"_index":376,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDto.html":{}}}],["history.dto",{"_index":1422,"title":{},"body":{"classes/WorkerSalaryDto.html":{}}}],["history.dto.ts",{"_index":1181,"title":{},"body":{"classes/SalaryHistoryDto.html":{},"coverage.html":{}}}],["history.dto.ts:5",{"_index":1182,"title":{},"body":{"classes/SalaryHistoryDto.html":{}}}],["history.dto.ts:8",{"_index":1183,"title":{},"body":{"classes/SalaryHistoryDto.html":{}}}],["host",{"_index":499,"title":{},"body":{"classes/ExceptionsFilter.html":{},"miscellaneous/variables.html":{}}}],["host.gettype",{"_index":510,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["host.switchtohttp().getrequest",{"_index":523,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["http",{"_index":1023,"title":{},"body":{"controllers/HealthController.html":{},"dependencies.html":{}}}],["httpexception",{"_index":506,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httphealthindicator",{"_index":1021,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":404,"title":{},"body":{"modules/BaseModule.html":{},"modules/RestModule.html":{}}}],["https://1.1.1.1",{"_index":1027,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://docs.nestjs.com/recipes/terminus",{"_index":1014,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://getpino.io/#/docs/api?id=timestamp",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://getpino.io/#/docs/help?id=log",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/iamolegga/nestjs",{"_index":1054,"title":{},"body":{"injectables/LoggerContextMiddleware.html":{}}}],["https://github.com/pinojs/pino",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":1653,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/25421233",{"_index":1262,"title":{},"body":{"injectables/UtilService.html":{}}}],["httpstatus",{"_index":505,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":528,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["id",{"_index":28,"title":{},"body":{"interfaces/Account-1.html":{},"classes/BankInfo.html":{},"classes/CreateOwnerDto.html":{},"classes/Farm.html":{},"classes/FarmDto.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"classes/Owner.html":{},"injectables/OwnerRepository.html":{},"classes/SalaryHistory.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"controllers/WorkerController.html":{},"classes/WorkerDto.html":{},"injectables/WorkerRepository.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1443,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":743,"title":{},"body":{"classes/FarmMapperProfile.html":{},"classes/WorkerMapperProfile.html":{},"miscellaneous/variables.html":{}}}],["ignoreundefinedproperties",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["implements",{"_index":320,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"modules/CommonModule.html":{},"classes/ExceptionsFilter.html":{},"injectables/LoggerContextMiddleware.html":{},"guards/RolesGuard.html":{}}}],["import",{"_index":48,"title":{},"body":{"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/ApiResponseBuilder.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSerializer.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/BaseModel.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateOwnerDto.html":{},"injectables/EmailService.html":{},"classes/ExceptionsFilter.html":{},"classes/Farm.html":{},"controllers/FarmController.html":{},"classes/FarmDto.html":{},"classes/FarmMapperProfile.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"interfaces/Filtering.html":{},"classes/FirebaseAuthStrategy.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"classes/LinkFarmOwnerDto.html":{},"classes/LinkFarmWorkerDto.html":{},"injectables/LoggerContextMiddleware.html":{},"classes/Owner.html":{},"injectables/OwnerRepository.html":{},"classes/PaginatedResponseData.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"classes/Payload.html":{},"classes/Response.html":{},"modules/RestModule.html":{},"guards/RolesGuard.html":{},"classes/SalaryHistory.html":{},"classes/SalaryHistoryDto.html":{},"interfaces/Sorting.html":{},"classes/UnlinkFarmOwnerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerBenefitsDto.html":{},"controllers/WorkerController.html":{},"classes/WorkerDto.html":{},"classes/WorkerMapperProfile.html":{},"injectables/WorkerRepository.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDeductionsDto.html":{},"classes/WorkerSalaryDto.html":{},"injectables/WorkerService.html":{}}}],["import(`${__dirname}/envs/${process.env.node_env",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import(`${__dirname}/envs/default",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BaseModule.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"modules/RestModule.html":{}}}],["include",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Account.html":{},"interfaces/Account-1.html":{},"injectables/AccountService.html":{},"classes/ApiResponseBuilder.html":{},"controllers/AuthController.html":{},"injectables/AuthSerializer.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/BaseModel.html":{},"injectables/ConfigService.html":{},"classes/CreateOwnerDto.html":{},"injectables/EmailService.html":{},"classes/ExceptionsFilter.html":{},"classes/Farm.html":{},"controllers/FarmController.html":{},"classes/FarmDto.html":{},"classes/FarmMapperProfile.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"interfaces/Filtering.html":{},"classes/FirebaseAuthStrategy.html":{},"interfaces/FirestoreModuleOptions.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"classes/LinkFarmOwnerDto.html":{},"classes/LinkFarmWorkerDto.html":{},"injectables/LoggerContextMiddleware.html":{},"classes/Owner.html":{},"injectables/OwnerRepository.html":{},"classes/PaginatedResponseData.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"classes/Payload.html":{},"classes/Response.html":{},"guards/RolesGuard.html":{},"classes/SalaryHistory.html":{},"classes/SalaryHistoryDto.html":{},"interfaces/Sorting.html":{},"classes/UnlinkFarmOwnerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerBenefitsDto.html":{},"controllers/WorkerController.html":{},"classes/WorkerDto.html":{},"classes/WorkerMapperProfile.html":{},"injectables/WorkerRepository.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDeductionsDto.html":{},"classes/WorkerSalaryDto.html":{},"injectables/WorkerService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":1599,"title":{},"body":{"miscellaneous/functions.html":{}}}],["infer",{"_index":431,"title":{},"body":{"injectables/ConfigService.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Account.html":{},"interfaces/Account-1.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/ApiResponseBuilder.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSerializer.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/BaseModel.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateOwnerDto.html":{},"injectables/EmailService.html":{},"classes/ExceptionsFilter.html":{},"classes/Farm.html":{},"controllers/FarmController.html":{},"classes/FarmDto.html":{},"classes/FarmMapperProfile.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"interfaces/Filtering.html":{},"classes/FirebaseAuthStrategy.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"classes/LinkFarmOwnerDto.html":{},"classes/LinkFarmWorkerDto.html":{},"injectables/LoggerContextMiddleware.html":{},"classes/Owner.html":{},"injectables/OwnerRepository.html":{},"classes/PaginatedResponseData.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"classes/Payload.html":{},"classes/Response.html":{},"modules/RestModule.html":{},"guards/RolesGuard.html":{},"classes/SalaryHistory.html":{},"classes/SalaryHistoryDto.html":{},"interfaces/Sorting.html":{},"classes/UnlinkFarmOwnerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerBenefitsDto.html":{},"controllers/WorkerController.html":{},"classes/WorkerDto.html":{},"classes/WorkerMapperProfile.html":{},"injectables/WorkerRepository.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDeductionsDto.html":{},"classes/WorkerSalaryDto.html":{},"injectables/WorkerService.html":{}}}],["info.data",{"_index":1104,"title":{},"body":{"injectables/OwnerRepository.html":{},"injectables/WorkerRepository.html":{}}}],["info.dto",{"_index":1347,"title":{},"body":{"classes/WorkerDto.html":{}}}],["info.dto.ts",{"_index":385,"title":{},"body":{"classes/BankInfoDto.html":{},"coverage.html":{}}}],["info.dto.ts:11",{"_index":389,"title":{},"body":{"classes/BankInfoDto.html":{}}}],["info.dto.ts:14",{"_index":388,"title":{},"body":{"classes/BankInfoDto.html":{}}}],["info.dto.ts:17",{"_index":386,"title":{},"body":{"classes/BankInfoDto.html":{}}}],["info.dto.ts:5",{"_index":387,"title":{},"body":{"classes/BankInfoDto.html":{}}}],["info.dto.ts:8",{"_index":390,"title":{},"body":{"classes/BankInfoDto.html":{}}}],["info.exists",{"_index":1101,"title":{},"body":{"injectables/OwnerRepository.html":{},"injectables/WorkerRepository.html":{}}}],["inherited",{"_index":567,"title":{},"body":{"classes/Farm.html":{},"classes/Owner.html":{},"classes/Worker.html":{}}}],["inject",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"injectables/EmailService.html":{},"injectables/FarmRepository.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"injectables/OwnerRepository.html":{},"injectables/WorkerRepository.html":{}}}],["inject('sendgridtoken",{"_index":470,"title":{},"body":{"injectables/EmailService.html":{}}}],["inject('users",{"_index":1092,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["inject(collections.farms",{"_index":794,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["inject(collections.users",{"_index":793,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["inject(collections.workers",{"_index":792,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{}}}],["inject(request",{"_index":1093,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["injectable",{"_index":53,"title":{"injectables/AccountService.html":{},"injectables/AuthSerializer.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/EmailService.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/OwnerRepository.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{}},"body":{"injectables/AccountService.html":{},"injectables/AuthSerializer.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"injectables/ConfigService.html":{},"injectables/EmailService.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/OwnerRepository.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{},"coverage.html":{}}}],["injectables",{"_index":54,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthSerializer.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/EmailService.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/OwnerRepository.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{},"overview.html":{}}}],["injectmapper",{"_index":746,"title":{},"body":{"classes/FarmMapperProfile.html":{},"injectables/FarmRepository.html":{},"injectables/OwnerRepository.html":{},"classes/WorkerMapperProfile.html":{},"injectables/WorkerRepository.html":{}}}],["injectpinologger",{"_index":75,"title":{},"body":{"injectables/AccountService.html":{},"controllers/AuthController.html":{},"injectables/EmailService.html":{},"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"injectables/OwnerRepository.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{}}}],["injectpinologger('accountservice",{"_index":78,"title":{},"body":{"injectables/AccountService.html":{}}}],["injectpinologger('auth",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["injectpinologger(farmcontroller.name",{"_index":642,"title":{},"body":{"controllers/FarmController.html":{}}}],["injectpinologger(farmrepository.name",{"_index":791,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["injectpinologger(ownerrepository.name",{"_index":1091,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["input",{"_index":1597,"title":{},"body":{"miscellaneous/functions.html":{}}}],["installation",{"_index":1614,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1617,"title":{},"body":{"index.html":{}}}],["installsubscriptionhandlers",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instanceof",{"_index":529,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["insurance",{"_index":369,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDeductionsDto.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Account.html":{},"interfaces/Account-1.html":{},"interfaces/Filtering.html":{},"interfaces/FirestoreModuleOptions.html":{},"interfaces/Sorting.html":{}},"body":{"interfaces/Account.html":{},"interfaces/Account-1.html":{},"interfaces/Filtering.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"interfaces/Sorting.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Account.html":{},"interfaces/Account-1.html":{},"interfaces/Filtering.html":{},"interfaces/FirestoreModuleOptions.html":{},"interfaces/Sorting.html":{},"overview.html":{}}}],["intern",{"_index":358,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"miscellaneous/enumerations.html":{}}}],["invalid",{"_index":960,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["in|array",{"_index":955,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["is_emulator",{"_index":1452,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":337,"title":{},"body":{"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerDto.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{}}}],["isalphanumeric",{"_index":1031,"title":{},"body":{"classes/LinkFarmOwnerDto.html":{},"classes/LinkFarmWorkerDto.html":{},"classes/UnlinkFarmOwnerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{},"classes/WorkerDto.html":{}}}],["isalphanumeric()@isnotempty",{"_index":1029,"title":{},"body":{"classes/LinkFarmOwnerDto.html":{},"classes/LinkFarmWorkerDto.html":{},"classes/UnlinkFarmOwnerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{}}}],["isboolean",{"_index":454,"title":{},"body":{"classes/CreateOwnerDto.html":{},"classes/UserDto.html":{},"classes/WorkerDto.html":{}}}],["isboolean()@isoptional",{"_index":439,"title":{},"body":{"classes/CreateOwnerDto.html":{},"classes/UserDto.html":{}}}],["isdatestring",{"_index":1350,"title":{},"body":{"classes/WorkerDto.html":{}}}],["isemail",{"_index":1351,"title":{},"body":{"classes/WorkerDto.html":{}}}],["isenum",{"_index":722,"title":{},"body":{"classes/FarmDto.html":{}}}],["isenum(areameasurementunit",{"_index":681,"title":{},"body":{"classes/FarmDto.html":{}}}],["isenum(farmpurpose",{"_index":691,"title":{},"body":{"classes/FarmDto.html":{}}}],["isenum(milkmeasurementunit",{"_index":702,"title":{},"body":{"classes/FarmDto.html":{}}}],["isenum(weightmeasurementunit",{"_index":711,"title":{},"body":{"classes/FarmDto.html":{}}}],["isglobal",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["isnotempty",{"_index":723,"title":{},"body":{"classes/FarmDto.html":{},"classes/LinkFarmOwnerDto.html":{},"classes/LinkFarmWorkerDto.html":{},"classes/UnlinkFarmOwnerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{}}}],["isnotnull",{"_index":947,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["isnull",{"_index":946,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["isnumber",{"_index":724,"title":{},"body":{"classes/FarmDto.html":{}}}],["isobject(value",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isoptional",{"_index":399,"title":{},"body":{"classes/BaseModel.html":{},"classes/CreateOwnerDto.html":{},"classes/FarmDto.html":{},"classes/UserDto.html":{},"classes/WorkerDto.html":{}}}],["isoptional()@isstring",{"_index":446,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["isprincipal",{"_index":338,"title":{},"body":{"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{}}}],["isproduction",{"_index":1699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ispublic",{"_index":321,"title":{},"body":{"guards/AuthenticatedGuard.html":{}}}],["isregistered",{"_index":380,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerDto.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{}}}],["isstring",{"_index":400,"title":{},"body":{"classes/BaseModel.html":{},"classes/CreateOwnerDto.html":{},"classes/FarmDto.html":{},"classes/UserDto.html":{},"classes/WorkerDto.html":{}}}],["isstring()@automap",{"_index":395,"title":{},"body":{"classes/BaseModel.html":{},"classes/Farm.html":{},"classes/Worker.html":{}}}],["isstring()@isoptional",{"_index":441,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["isstring()@isoptional()@automap",{"_index":1217,"title":{},"body":{"classes/UserDto.html":{}}}],["isstring()@isoptional()@automap(undefined",{"_index":1220,"title":{},"body":{"classes/UserDto.html":{}}}],["isstring()@isurl()@isoptional",{"_index":450,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["isstring()@isuuid()@automap",{"_index":1222,"title":{},"body":{"classes/UserDto.html":{}}}],["isstring({always",{"_index":1214,"title":{},"body":{"classes/UserDto.html":{}}}],["issuer",{"_index":262,"title":{},"body":{"modules/AuthModule.html":{},"classes/FirebaseAuthStrategy.html":{}}}],["isurl",{"_index":456,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["isuuid",{"_index":1227,"title":{},"body":{"classes/UserDto.html":{}}}],["jest.mocked",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":1642,"title":{},"body":{"index.html":{}}}],["join(delimiter",{"_index":1260,"title":{},"body":{"injectables/UtilService.html":{}}}],["json.parse(json.stringify(args",{"_index":1263,"title":{},"body":{"injectables/UtilService.html":{}}}],["json.stringify",{"_index":1365,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["json.stringify(data",{"_index":1321,"title":{},"body":{"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{}}}],["json.stringify(e",{"_index":493,"title":{},"body":{"injectables/EmailService.html":{}}}],["json.stringify(farm",{"_index":838,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["json.stringify(filter",{"_index":823,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{}}}],["json.stringify(info.data",{"_index":1103,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["json.stringify(pagination",{"_index":1364,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["json.stringify(response",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{},"injectables/WorkerService.html":{}}}],["json.stringify(response[0].body",{"_index":490,"title":{},"body":{"injectables/EmailService.html":{}}}],["json.stringify(result",{"_index":828,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/FarmService.html":{}}}],["json.stringify(sort",{"_index":1379,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["json.stringify(templatedata",{"_index":484,"title":{},"body":{"injectables/EmailService.html":{}}}],["json.stringify(variables",{"_index":521,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["json.stringify(workerdata",{"_index":1389,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["jwt",{"_index":1531,"title":{},"body":{"dependencies.html":{}}}],["jwtrefreshsecret",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtsecret",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kamil",{"_index":1650,"title":{},"body":{"index.html":{}}}],["key",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kilo",{"_index":1589,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kilos",{"_index":1590,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lastdoc",{"_index":795,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{},"miscellaneous/variables.html":{}}}],["lastid",{"_index":813,"title":{},"body":{"injectables/FarmRepository.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"injectables/WorkerRepository.html":{}}}],["lastidcursor",{"_index":1121,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationBuilder.html":{}}}],["lastloggedin",{"_index":381,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerDto.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{}}}],["lastsnapshot",{"_index":1367,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["latitude",{"_index":542,"title":{},"body":{"classes/Farm.html":{},"classes/FarmDto.html":{}}}],["lechera",{"_index":1569,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["legend",{"_index":34,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RestModule.html":{},"overview.html":{}}}],["less_than",{"_index":930,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/enumerations.html":{}}}],["less_than_or_equals",{"_index":1572,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["level",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libras",{"_index":1592,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["license",{"_index":1656,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1632,"title":{},"body":{"index.html":{}}}],["limit",{"_index":796,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{},"miscellaneous/variables.html":{}}}],["limit(1",{"_index":1381,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["limit(10",{"_index":830,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["line",{"_index":155,"title":{},"body":{"classes/ApiResponseBuilder.html":{},"classes/ExceptionsFilter.html":{},"injectables/FarmRepository.html":{},"injectables/GqlAuthGuard.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/OwnerRepository.html":{},"injectables/UtilService.html":{}}}],["line(templatedata",{"_index":1243,"title":{},"body":{"injectables/UtilService.html":{}}}],["link",{"_index":107,"title":{},"body":{"injectables/AccountService.html":{},"injectables/FarmRepository.html":{}}}],["linkfarmownerdto",{"_index":601,"title":{"classes/LinkFarmOwnerDto.html":{}},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"classes/LinkFarmOwnerDto.html":{},"coverage.html":{}}}],["linkfarmworkerdto",{"_index":606,"title":{"classes/LinkFarmWorkerDto.html":{}},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"classes/LinkFarmWorkerDto.html":{},"coverage.html":{}}}],["linkowner",{"_index":578,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmService.html":{}}}],["linkowner(@body",{"_index":660,"title":{},"body":{"controllers/FarmController.html":{}}}],["linkowner(data",{"_index":600,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmService.html":{}}}],["linkownerwithfarm",{"_index":757,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["linkownerwithfarm(data",{"_index":771,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["linkworker",{"_index":579,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{}}}],["linkworker(@body",{"_index":670,"title":{},"body":{"controllers/FarmController.html":{}}}],["linkworker(data",{"_index":605,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{}}}],["literal",{"_index":1079,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["liters",{"_index":1577,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["litros",{"_index":1578,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["load",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["log",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger",{"_index":66,"title":{},"body":{"injectables/AccountService.html":{},"controllers/AuthController.html":{},"injectables/EmailService.html":{},"classes/ExceptionsFilter.html":{},"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/OwnerRepository.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{}}}],["loggercontextmiddleware",{"_index":416,"title":{"injectables/LoggerContextMiddleware.html":{}},"body":{"modules/CommonModule.html":{},"injectables/LoggerContextMiddleware.html":{},"coverage.html":{}}}],["loggererrorinterceptor",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loggermodule",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forroot(loggeroptions",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["loggeroptions",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["longitude",{"_index":543,"title":{},"body":{"classes/Farm.html":{},"classes/FarmDto.html":{}}}],["los",{"_index":849,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["maildatarequired",{"_index":468,"title":{},"body":{"injectables/EmailService.html":{}}}],["management",{"_index":1670,"title":{},"body":{"properties.html":{}}}],["manager",{"_index":378,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerDto.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{}}}],["manzana",{"_index":1557,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mapper",{"_index":737,"title":{},"body":{"classes/FarmMapperProfile.html":{},"injectables/FarmRepository.html":{},"injectables/OwnerRepository.html":{},"classes/WorkerMapperProfile.html":{},"injectables/WorkerRepository.html":{}}}],["mappers/farm.mapper",{"_index":1154,"title":{},"body":{"modules/RestModule.html":{}}}],["mappers/worker.mapper",{"_index":1156,"title":{},"body":{"modules/RestModule.html":{}}}],["master",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["masterhost",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":24,"title":{},"body":{"interfaces/Account.html":{},"interfaces/Account-1.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/ApiResponseBuilder.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSerializer.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/BaseModel.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateOwnerDto.html":{},"injectables/EmailService.html":{},"classes/ExceptionsFilter.html":{},"classes/Farm.html":{},"controllers/FarmController.html":{},"classes/FarmDto.html":{},"classes/FarmMapperProfile.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"interfaces/Filtering.html":{},"classes/FirebaseAuthStrategy.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"classes/LinkFarmOwnerDto.html":{},"classes/LinkFarmWorkerDto.html":{},"injectables/LoggerContextMiddleware.html":{},"classes/Owner.html":{},"injectables/OwnerRepository.html":{},"classes/PaginatedResponseData.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"classes/Payload.html":{},"classes/Response.html":{},"modules/RestModule.html":{},"guards/RolesGuard.html":{},"classes/SalaryHistory.html":{},"classes/SalaryHistoryDto.html":{},"interfaces/Sorting.html":{},"classes/UnlinkFarmOwnerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerBenefitsDto.html":{},"controllers/WorkerController.html":{},"classes/WorkerDto.html":{},"classes/WorkerMapperProfile.html":{},"injectables/WorkerRepository.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDeductionsDto.html":{},"classes/WorkerSalaryDto.html":{},"injectables/WorkerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(snapshot.size",{"_index":1134,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationBuilder.html":{}}}],["max",{"_index":156,"title":{},"body":{"classes/ApiResponseBuilder.html":{},"classes/FarmDto.html":{},"injectables/FarmRepository.html":{},"injectables/OwnerRepository.html":{},"miscellaneous/variables.html":{}}}],["max(180",{"_index":729,"title":{},"body":{"classes/FarmDto.html":{}}}],["max(90",{"_index":728,"title":{},"body":{"classes/FarmDto.html":{}}}],["maxdecimalplaces",{"_index":685,"title":{},"body":{"classes/FarmDto.html":{}}}],["measurement.unit",{"_index":716,"title":{},"body":{"classes/FarmDto.html":{}}}],["measurement.unit.ts",{"_index":1544,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["meatproduction",{"_index":1570,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["merge",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merge(target",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":132,"title":{},"body":{"classes/ApiResponseBuilder.html":{},"classes/FarmDto.html":{},"classes/PaginatedResponseData.html":{},"classes/Response.html":{}}}],["metadata",{"_index":1537,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":56,"title":{},"body":{"injectables/AccountService.html":{},"classes/ApiResponseBuilder.html":{},"controllers/AuthController.html":{},"injectables/AuthSerializer.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/EmailService.html":{},"classes/ExceptionsFilter.html":{},"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"classes/FirebaseAuthStrategy.html":{},"modules/FirestoreModule.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/OwnerRepository.html":{},"classes/PaginationBuilder.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{}}}],["metros",{"_index":1559,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["middleware",{"_index":417,"title":{},"body":{"modules/CommonModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["middleware(app",{"_index":1598,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["middlewareconsumer",{"_index":412,"title":{},"body":{"modules/CommonModule.html":{}}}],["migrations",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["milkmeasurement",{"_index":544,"title":{},"body":{"classes/Farm.html":{},"classes/FarmDto.html":{}}}],["milkmeasurementunit",{"_index":701,"title":{},"body":{"classes/FarmDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["milkmeasureunittyperesolver",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["min",{"_index":725,"title":{},"body":{"classes/FarmDto.html":{}}}],["miscellaneous",{"_index":1541,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1631,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1622,"title":{},"body":{"index.html":{}}}],["models/base.model",{"_index":346,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/User.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{}}}],["models/farm.model",{"_index":745,"title":{},"body":{"classes/FarmMapperProfile.html":{},"injectables/FarmRepository.html":{}}}],["models/index",{"_index":633,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmService.html":{},"injectables/OwnerRepository.html":{},"injectables/UserService.html":{}}}],["models/owner.model",{"_index":1089,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["models/user.model",{"_index":784,"title":{},"body":{"injectables/FarmRepository.html":{},"classes/Owner.html":{}}}],["models/worker.model",{"_index":785,"title":{},"body":{"injectables/FarmRepository.html":{},"classes/WorkerMapperProfile.html":{},"injectables/WorkerRepository.html":{},"classes/WorkerSalaryDto.html":{}}}],["module",{"_index":30,"title":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"modules/FirestoreModule.html":{},"modules/RestModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"modules/RestModule.html":{},"overview.html":{}}}],["modules",{"_index":32,"title":{"modules.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"modules/FirestoreModule.html":{},"modules/RestModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1645,"title":{},"body":{"index.html":{}}}],["multistream",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mysql",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["myśliwiec",{"_index":1651,"title":{},"body":{"index.html":{}}}],["n",{"_index":1256,"title":{},"body":{"injectables/UtilService.html":{}}}],["name",{"_index":11,"title":{},"body":{"interfaces/Account.html":{},"interfaces/Account-1.html":{},"injectables/AccountService.html":{},"classes/ApiResponseBuilder.html":{},"controllers/AuthController.html":{},"injectables/AuthSerializer.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/BankInfo.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateOwnerDto.html":{},"injectables/EmailService.html":{},"classes/ExceptionsFilter.html":{},"classes/Farm.html":{},"controllers/FarmController.html":{},"classes/FarmDto.html":{},"classes/FarmMapperProfile.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"classes/FirebaseAuthStrategy.html":{},"modules/FirestoreModule.html":{},"injectables/GqlAuthGuard.html":{},"injectables/LoggerContextMiddleware.html":{},"classes/Owner.html":{},"injectables/OwnerRepository.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"guards/RolesGuard.html":{},"classes/SalaryHistory.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"controllers/WorkerController.html":{},"classes/WorkerDto.html":{},"classes/WorkerMapperProfile.html":{},"injectables/WorkerRepository.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"injectables/WorkerService.html":{},"miscellaneous/functions.html":{}}}],["nanoid",{"_index":1527,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["necessary",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["need",{"_index":949,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":1612,"title":{},"body":{"index.html":{}}}],["nestconfig",{"_index":422,"title":{},"body":{"injectables/ConfigService.html":{}}}],["nestfactory.create(appmodule",{"_index":1701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestframework",{"_index":1655,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":76,"title":{},"body":{"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/EmailService.html":{},"controllers/FarmController.html":{},"classes/FarmMapperProfile.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/OwnerRepository.html":{},"controllers/WorkerController.html":{},"classes/WorkerMapperProfile.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{},"dependencies.html":{}}}],["nestjs/apollo",{"_index":1494,"title":{},"body":{"dependencies.html":{}}}],["nestjs/axios",{"_index":405,"title":{},"body":{"modules/BaseModule.html":{},"modules/RestModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":49,"title":{},"body":{"modules/AccountModule.html":{},"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSerializer.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/EmailService.html":{},"classes/ExceptionsFilter.html":{},"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"interfaces/Filtering.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/OwnerRepository.html":{},"modules/RestModule.html":{},"guards/RolesGuard.html":{},"interfaces/Sorting.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/ConfigService.html":{},"injectables/EmailService.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticatedGuard.html":{},"classes/ExceptionsFilter.html":{},"injectables/OwnerRepository.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":318,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"classes/ExceptionsFilter.html":{},"injectables/GqlAuthGuard.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"classes/Payload.html":{},"guards/RolesGuard.html":{},"classes/User.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":1499,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":1501,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":279,"title":{},"body":{"injectables/AuthSerializer.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1504,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":1505,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":1507,"title":{},"body":{"dependencies.html":{}}}],["nestjs/terminus",{"_index":407,"title":{},"body":{"modules/BaseModule.html":{},"controllers/HealthController.html":{},"modules/RestModule.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":1043,"title":{},"body":{"injectables/LoggerContextMiddleware.html":{}}}],["nestmodule",{"_index":415,"title":{},"body":{"modules/CommonModule.html":{}}}],["new",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseModel.html":{},"injectables/ConfigService.html":{},"classes/ExceptionsFilter.html":{},"classes/Farm.html":{},"injectables/FarmRepository.html":{},"interfaces/Filtering.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"injectables/OwnerRepository.html":{},"guards/RolesGuard.html":{},"interfaces/Sorting.html":{},"classes/Worker.html":{},"injectables/WorkerRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":154,"title":{},"body":{"classes/ApiResponseBuilder.html":{},"classes/ExceptionsFilter.html":{},"injectables/FarmRepository.html":{},"injectables/GqlAuthGuard.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/OwnerRepository.html":{},"injectables/UtilService.html":{}}}],["node.js",{"_index":1604,"title":{},"body":{"index.html":{}}}],["not_equals",{"_index":1574,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_in",{"_index":934,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/enumerations.html":{}}}],["notfound",{"_index":128,"title":{},"body":{"classes/ApiResponseBuilder.html":{}}}],["notfoundexception",{"_index":1090,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["notfoundexception('no",{"_index":1105,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["notifications",{"_index":532,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["npm",{"_index":1616,"title":{},"body":{"index.html":{}}}],["ntegral/nestjs",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/EmailService.html":{},"dependencies.html":{}}}],["null",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthSerializer.html":{},"injectables/EmailService.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"interfaces/Filtering.html":{},"injectables/OwnerRepository.html":{},"interfaces/Sorting.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{},"miscellaneous/variables.html":{}}}],["null,data",{"_index":277,"title":{},"body":{"injectables/AuthSerializer.html":{}}}],["null,user",{"_index":272,"title":{},"body":{"injectables/AuthSerializer.html":{}}}],["number",{"_index":135,"title":{},"body":{"classes/ApiResponseBuilder.html":{},"classes/BankInfo.html":{},"classes/Farm.html":{},"classes/FarmDto.html":{},"classes/PaginatedResponseData.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"classes/Response.html":{},"classes/SalaryHistory.html":{},"classes/SalaryHistoryDto.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerBenefitsDto.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDeductionsDto.html":{},"classes/WorkerSalaryDto.html":{}}}],["number(req.query['limit",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number.isnan(limit",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.assign(sourcevalue",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.fromentries(object.entries(argv).filter",{"_index":1264,"title":{},"body":{"injectables/UtilService.html":{}}}],["object.keys(source",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(filterrule).includes(rule",{"_index":968,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["object.values(providers",{"_index":419,"title":{},"body":{"modules/CommonModule.html":{},"miscellaneous/variables.html":{}}}],["objecttype",{"_index":1131,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"classes/Payload.html":{},"classes/User.html":{}}}],["objectype",{"_index":1677,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ok",{"_index":820,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["open",{"_index":1633,"title":{},"body":{"index.html":{}}}],["opentracking",{"_index":483,"title":{},"body":{"injectables/EmailService.html":{}}}],["operationname",{"_index":518,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["optional",{"_index":27,"title":{},"body":{"interfaces/Account-1.html":{},"injectables/AccountService.html":{},"classes/ApiResponseBuilder.html":{},"controllers/AuthController.html":{},"injectables/AuthSerializer.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/BaseModel.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateOwnerDto.html":{},"injectables/EmailService.html":{},"classes/ExceptionsFilter.html":{},"classes/Farm.html":{},"controllers/FarmController.html":{},"classes/FarmDto.html":{},"classes/FarmMapperProfile.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"classes/FirebaseAuthStrategy.html":{},"modules/FirestoreModule.html":{},"injectables/GqlAuthGuard.html":{},"injectables/LoggerContextMiddleware.html":{},"classes/Owner.html":{},"injectables/OwnerRepository.html":{},"classes/PaginatedResponseData.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"classes/Payload.html":{},"classes/Response.html":{},"guards/RolesGuard.html":{},"classes/SalaryHistory.html":{},"classes/SalaryHistoryDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerBenefitsDto.html":{},"controllers/WorkerController.html":{},"classes/WorkerDto.html":{},"classes/WorkerMapperProfile.html":{},"injectables/WorkerRepository.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDeductionsDto.html":{},"classes/WorkerSalaryDto.html":{},"injectables/WorkerService.html":{},"miscellaneous/functions.html":{}}}],["optionprovider",{"_index":992,"title":{},"body":{"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{}}}],["options",{"_index":984,"title":{},"body":{"modules/FirestoreModule.html":{},"miscellaneous/variables.html":{}}}],["options.imports",{"_index":1002,"title":{},"body":{"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{}}}],["options.inject",{"_index":994,"title":{},"body":{"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{}}}],["options.usefactory",{"_index":993,"title":{},"body":{"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{}}}],["orderby('name",{"_index":1382,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["orderby(sort.property",{"_index":831,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["orderbydirection",{"_index":1186,"title":{},"body":{"interfaces/Sorting.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":46,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RestModule.html":{},"overview.html":{}}}],["output",{"_index":1258,"title":{},"body":{"injectables/UtilService.html":{}}}],["override",{"_index":428,"title":{},"body":{"injectables/ConfigService.html":{},"classes/ExceptionsFilter.html":{},"classes/FarmMapperProfile.html":{},"classes/FirebaseAuthStrategy.html":{},"injectables/GqlAuthGuard.html":{},"classes/WorkerMapperProfile.html":{}}}],["overview",{"_index":1662,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":662,"title":{"classes/Owner.html":{}},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"classes/Owner.html":{},"injectables/OwnerRepository.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["owner.dto",{"_index":629,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"injectables/OwnerRepository.html":{},"injectables/UserService.html":{}}}],["owner.dto.ts",{"_index":436,"title":{},"body":{"classes/CreateOwnerDto.html":{},"classes/LinkFarmOwnerDto.html":{},"classes/UnlinkFarmOwnerDto.html":{},"coverage.html":{}}}],["owner.dto.ts:10",{"_index":1030,"title":{},"body":{"classes/LinkFarmOwnerDto.html":{},"classes/UnlinkFarmOwnerDto.html":{}}}],["owner.dto.ts:12",{"_index":444,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["owner.dto.ts:15",{"_index":449,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["owner.dto.ts:20",{"_index":451,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["owner.dto.ts:24",{"_index":442,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["owner.dto.ts:28",{"_index":443,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["owner.dto.ts:32",{"_index":445,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["owner.dto.ts:36",{"_index":440,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["owner.dto.ts:40",{"_index":453,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["owner.dto.ts:6",{"_index":447,"title":{},"body":{"classes/CreateOwnerDto.html":{},"classes/LinkFarmOwnerDto.html":{},"classes/UnlinkFarmOwnerDto.html":{}}}],["owner.dto.ts:9",{"_index":448,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["ownerid",{"_index":545,"title":{},"body":{"classes/Farm.html":{},"classes/LinkFarmOwnerDto.html":{},"classes/UnlinkFarmOwnerDto.html":{}}}],["ownerinfo",{"_index":1096,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["ownerrepository",{"_index":1072,"title":{"injectables/OwnerRepository.html":{}},"body":{"injectables/OwnerRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["owners",{"_index":677,"title":{},"body":{"classes/FarmDto.html":{},"injectables/FarmRepository.html":{}}}],["p",{"_index":424,"title":{},"body":{"injectables/ConfigService.html":{}}}],["package",{"_index":1489,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paginatedresponsedata",{"_index":1115,"title":{"classes/PaginatedResponseData.html":{}},"body":{"classes/PaginatedResponseData.html":{},"classes/Response.html":{},"coverage.html":{}}}],["pagination",{"_index":138,"title":{"classes/Pagination.html":{}},"body":{"classes/ApiResponseBuilder.html":{},"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"classes/PaginatedResponseData.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"classes/Response.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagination.model",{"_index":146,"title":{},"body":{"classes/ApiResponseBuilder.html":{},"injectables/FarmRepository.html":{},"classes/PaginatedResponseData.html":{},"classes/Response.html":{},"injectables/WorkerRepository.html":{}}}],["paginationbuilder",{"_index":788,"title":{"classes/PaginationBuilder.html":{}},"body":{"injectables/FarmRepository.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"injectables/WorkerRepository.html":{},"coverage.html":{}}}],["paginationbuilder().build(snapshot",{"_index":818,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{}}}],["paginationparams",{"_index":593,"title":{},"body":{"controllers/FarmController.html":{},"controllers/WorkerController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paid",{"_index":371,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDto.html":{}}}],["para",{"_index":852,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["param",{"_index":1245,"title":{},"body":{"injectables/UtilService.html":{}}}],["parameter",{"_index":943,"title":{},"body":{"interfaces/Filtering.html":{},"interfaces/Sorting.html":{},"miscellaneous/variables.html":{}}}],["parameters",{"_index":65,"title":{},"body":{"injectables/AccountService.html":{},"classes/ApiResponseBuilder.html":{},"controllers/AuthController.html":{},"injectables/AuthSerializer.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/EmailService.html":{},"classes/ExceptionsFilter.html":{},"controllers/FarmController.html":{},"classes/FarmMapperProfile.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"classes/FirebaseAuthStrategy.html":{},"modules/FirestoreModule.html":{},"injectables/GqlAuthGuard.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/OwnerRepository.html":{},"classes/PaginationBuilder.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"controllers/WorkerController.html":{},"classes/WorkerMapperProfile.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":157,"title":{},"body":{"classes/ApiResponseBuilder.html":{},"injectables/FarmRepository.html":{},"interfaces/Filtering.html":{},"injectables/OwnerRepository.html":{},"miscellaneous/variables.html":{}}}],["parcial",{"_index":351,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"miscellaneous/enumerations.html":{}}}],["part",{"_index":349,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"miscellaneous/enumerations.html":{}}}],["partial",{"_index":473,"title":{},"body":{"injectables/EmailService.html":{}}}],["passport",{"_index":258,"title":{},"body":{"modules/AuthModule.html":{},"controllers/FarmController.html":{},"classes/FirebaseAuthStrategy.html":{},"injectables/GqlAuthGuard.html":{},"controllers/WorkerController.html":{},"dependencies.html":{}}}],["passportserializer",{"_index":266,"title":{},"body":{"injectables/AuthSerializer.html":{}}}],["passurl",{"_index":1476,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["passurl.has((req).originalurl",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["password",{"_index":12,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountService.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":634,"title":{},"body":{"controllers/FarmController.html":{}}}],["patch('linkowner",{"_index":657,"title":{},"body":{"controllers/FarmController.html":{}}}],["patch('linkowner')@role(roles.owner",{"_index":602,"title":{},"body":{"controllers/FarmController.html":{}}}],["patch('linkworker",{"_index":669,"title":{},"body":{"controllers/FarmController.html":{}}}],["patch('linkworker')@role(roles.owner",{"_index":607,"title":{},"body":{"controllers/FarmController.html":{}}}],["patch('unlinkowner",{"_index":666,"title":{},"body":{"controllers/FarmController.html":{}}}],["patch('unlinkowner')@role(roles.owner",{"_index":611,"title":{},"body":{"controllers/FarmController.html":{}}}],["patch('unlinkworker",{"_index":673,"title":{},"body":{"controllers/FarmController.html":{}}}],["patch('unlinkworker')@role(roles.owner",{"_index":615,"title":{},"body":{"controllers/FarmController.html":{}}}],["path",{"_index":426,"title":{},"body":{"injectables/ConfigService.html":{}}}],["pathvalue",{"_index":427,"title":{},"body":{"injectables/ConfigService.html":{}}}],["payload",{"_index":20,"title":{"classes/Payload.html":{}},"body":{"interfaces/Account.html":{},"injectables/AccountService.html":{},"controllers/AuthController.html":{},"injectables/AuthSerializer.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthStrategy.html":{},"injectables/OwnerRepository.html":{},"classes/Payload.html":{},"coverage.html":{}}}],["paymentdate",{"_index":372,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDto.html":{}}}],["phone",{"_index":13,"title":{},"body":{"interfaces/Account.html":{},"interfaces/Account-1.html":{},"classes/BankInfo.html":{},"classes/CreateOwnerDto.html":{},"classes/Owner.html":{},"classes/SalaryHistory.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerDto.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{}}}],["phonenumber",{"_index":89,"title":{},"body":{"injectables/AccountService.html":{},"classes/Farm.html":{},"classes/FarmDto.html":{}}}],["picture",{"_index":29,"title":{},"body":{"interfaces/Account-1.html":{},"classes/CreateOwnerDto.html":{},"classes/Owner.html":{},"classes/User.html":{}}}],["pino",{"_index":77,"title":{},"body":{"injectables/AccountService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/EmailService.html":{},"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/OwnerRepository.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["pino/issues/608",{"_index":1055,"title":{},"body":{"injectables/LoggerContextMiddleware.html":{}}}],["pinohttp",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pinologger",{"_index":62,"title":{},"body":{"injectables/AccountService.html":{},"controllers/AuthController.html":{},"injectables/EmailService.html":{},"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/OwnerRepository.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{}}}],["pintas",{"_index":1584,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pints",{"_index":1583,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["playground",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["please",{"_index":1643,"title":{},"body":{"index.html":{}}}],["port",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FarmController.html":{},"controllers/WorkerController.html":{}}}],["post('register",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@public",{"_index":584,"title":{},"body":{"controllers/FarmController.html":{}}}],["post()@role(roles.admin",{"_index":1291,"title":{},"body":{"controllers/WorkerController.html":{}}}],["pounds",{"_index":1591,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["practicas",{"_index":359,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"miscellaneous/enumerations.html":{}}}],["pre",{"_index":1240,"title":{},"body":{"injectables/UtilService.html":{}}}],["pre(templatedata",{"_index":1248,"title":{},"body":{"injectables/UtilService.html":{}}}],["prefix",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FarmController.html":{},"controllers/WorkerController.html":{}}}],["pretty",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":79,"title":{},"body":{"injectables/AccountService.html":{},"controllers/AuthController.html":{},"injectables/EmailService.html":{},"classes/ExceptionsFilter.html":{},"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"controllers/HealthController.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/OwnerRepository.html":{},"guards/RolesGuard.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{},"properties.html":{}}}],["private_key",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["process",{"_index":976,"title":{},"body":{"classes/FirebaseAuthStrategy.html":{}}}],["process.env.audience",{"_index":261,"title":{},"body":{"modules/AuthModule.html":{},"classes/FirebaseAuthStrategy.html":{}}}],["process.env.client_email",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_host",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_name",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_password",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_port",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_type",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_user",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.functions_emulator",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.issuer",{"_index":263,"title":{},"body":{"modules/AuthModule.html":{},"classes/FirebaseAuthStrategy.html":{}}}],["process.env.jwt_refresh_secret",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.jwt_secret",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.private_key",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.project_id",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.sa_key",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.stderr",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.stdout",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["produccion",{"_index":1568,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["production",{"_index":1624,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":735,"title":{},"body":{"classes/FarmMapperProfile.html":{},"modules/RestModule.html":{},"classes/WorkerMapperProfile.html":{}}}],["profile.ts",{"_index":732,"title":{},"body":{"classes/FarmMapperProfile.html":{},"classes/WorkerMapperProfile.html":{},"coverage.html":{}}}],["profile.ts:11",{"_index":740,"title":{},"body":{"classes/FarmMapperProfile.html":{},"classes/WorkerMapperProfile.html":{}}}],["profile.ts:6",{"_index":738,"title":{},"body":{"classes/FarmMapperProfile.html":{},"classes/WorkerMapperProfile.html":{}}}],["progressive",{"_index":1603,"title":{},"body":{"index.html":{}}}],["project",{"_index":1634,"title":{},"body":{"index.html":{}}}],["project_id",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projectid",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["promise",{"_index":70,"title":{},"body":{"injectables/AccountService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"classes/FirebaseAuthStrategy.html":{},"controllers/HealthController.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/OwnerRepository.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["promise.reject(new",{"_index":121,"title":{},"body":{"injectables/AccountService.html":{}}}],["promise.resolve",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"injectables/WorkerRepository.html":{}}}],["promise.resolve(payload",{"_index":978,"title":{},"body":{"classes/FirebaseAuthStrategy.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/Account.html":{},"interfaces/Account-1.html":{},"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/BaseModel.html":{},"classes/CreateOwnerDto.html":{},"classes/ExceptionsFilter.html":{},"classes/Farm.html":{},"classes/FarmDto.html":{},"interfaces/Filtering.html":{},"interfaces/FirestoreModuleOptions.html":{},"classes/LinkFarmOwnerDto.html":{},"classes/LinkFarmWorkerDto.html":{},"classes/Owner.html":{},"classes/PaginatedResponseData.html":{},"classes/Pagination.html":{},"classes/Payload.html":{},"classes/Response.html":{},"classes/SalaryHistory.html":{},"classes/SalaryHistoryDto.html":{},"interfaces/Sorting.html":{},"classes/UnlinkFarmOwnerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerBenefitsDto.html":{},"classes/WorkerDto.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDeductionsDto.html":{},"classes/WorkerSalaryDto.html":{},"properties.html":{}}}],["property",{"_index":919,"title":{},"body":{"interfaces/Filtering.html":{},"interfaces/Sorting.html":{},"miscellaneous/variables.html":{}}}],["proposito",{"_index":1566,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["provide",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"guards/RolesGuard.html":{}}}],["providername",{"_index":999,"title":{},"body":{"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{}}}],["providers",{"_index":37,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"modules/RestModule.html":{},"overview.html":{}}}],["proxy",{"_index":1704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":57,"title":{},"body":{"injectables/AccountService.html":{},"controllers/AuthController.html":{},"injectables/AuthSerializer.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/BaseModel.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateOwnerDto.html":{},"classes/ExceptionsFilter.html":{},"classes/Farm.html":{},"controllers/FarmController.html":{},"classes/FarmDto.html":{},"injectables/FarmService.html":{},"controllers/HealthController.html":{},"classes/LinkFarmOwnerDto.html":{},"classes/LinkFarmWorkerDto.html":{},"injectables/LoggerContextMiddleware.html":{},"classes/Owner.html":{},"classes/PaginatedResponseData.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"classes/Payload.html":{},"classes/Response.html":{},"guards/RolesGuard.html":{},"classes/SalaryHistory.html":{},"classes/SalaryHistoryDto.html":{},"classes/UnlinkFarmOwnerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerBenefitsDto.html":{},"controllers/WorkerController.html":{},"classes/WorkerDto.html":{},"injectables/WorkerRepository.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDeductionsDto.html":{},"classes/WorkerSalaryDto.html":{},"injectables/WorkerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get('health')@healthcheck",{"_index":1015,"title":{},"body":{"controllers/HealthController.html":{}}}],["purpose",{"_index":651,"title":{},"body":{"controllers/FarmController.html":{}}}],["purpose.enum",{"_index":718,"title":{},"body":{"classes/FarmDto.html":{}}}],["purpose.enum.ts",{"_index":1548,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["put",{"_index":1306,"title":{},"body":{"controllers/WorkerController.html":{}}}],["put()@role(roles.admin",{"_index":1303,"title":{},"body":{"controllers/WorkerController.html":{}}}],["query",{"_index":797,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{}}}],["query.docs[0].data",{"_index":1385,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["query.empty",{"_index":1384,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["query.get",{"_index":807,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{}}}],["query.orderby(sort.property",{"_index":799,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{}}}],["query.startafter(lastsnapshot",{"_index":1369,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["query.startafter(startafterdoc",{"_index":806,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["query.where(filter.property",{"_index":801,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{}}}],["querydocumentsnapshot",{"_index":778,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{}}}],["queryresult",{"_index":1112,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["queryresult.data",{"_index":1114,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["querysnapshot",{"_index":779,"title":{},"body":{"injectables/FarmRepository.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"injectables/WorkerRepository.html":{}}}],["quietreqlogger",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["read",{"_index":1644,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":80,"title":{},"body":{"injectables/AccountService.html":{},"controllers/AuthController.html":{},"injectables/EmailService.html":{},"classes/ExceptionsFilter.html":{},"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/OwnerRepository.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{}}}],["real",{"_index":1673,"title":{},"body":{"properties.html":{}}}],["record",{"_index":465,"title":{},"body":{"injectables/EmailService.html":{},"injectables/UtilService.html":{},"miscellaneous/typealiases.html":{}}}],["reflect",{"_index":1536,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":307,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"guards/RolesGuard.html":{}}}],["registeruser",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["registeruser(@body",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{}}}],["registeruser(account",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{}}}],["remove",{"_index":1077,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["removeundefined",{"_index":1241,"title":{},"body":{"injectables/UtilService.html":{}}}],["removeundefined(argv",{"_index":1250,"title":{},"body":{"injectables/UtilService.html":{}}}],["replication",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reply@thefarmflow.com",{"_index":474,"title":{},"body":{"injectables/EmailService.html":{}}}],["repositories/farm.repository",{"_index":907,"title":{},"body":{"injectables/FarmService.html":{},"modules/RestModule.html":{}}}],["repositories/owner.repository",{"_index":1236,"title":{},"body":{"injectables/UserService.html":{}}}],["repositories/worker.repository",{"_index":1157,"title":{},"body":{"modules/RestModule.html":{},"injectables/WorkerService.html":{}}}],["repository",{"_index":897,"title":{},"body":{"injectables/FarmService.html":{},"injectables/UserService.html":{},"injectables/WorkerService.html":{},"index.html":{}}}],["req",{"_index":513,"title":{},"body":{"classes/ExceptionsFilter.html":{},"interfaces/Filtering.html":{},"injectables/LoggerContextMiddleware.html":{},"interfaces/Sorting.html":{},"miscellaneous/variables.html":{}}}],["req).customprops",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req).header('x",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.body",{"_index":526,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["req.customprops",{"_index":1056,"title":{},"body":{"injectables/LoggerContextMiddleware.html":{}}}],["req.header('authorization",{"_index":1045,"title":{},"body":{"injectables/LoggerContextMiddleware.html":{}}}],["req.method",{"_index":524,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["req.originalurl",{"_index":525,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["req.query['filter",{"_index":938,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["req.query['lastdoc",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.query['sort",{"_index":1188,"title":{},"body":{"interfaces/Sorting.html":{},"miscellaneous/variables.html":{}}}],["req.user",{"_index":1051,"title":{},"body":{"injectables/LoggerContextMiddleware.html":{}}}],["reqid",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":315,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"classes/ExceptionsFilter.html":{},"interfaces/Filtering.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/OwnerRepository.html":{},"guards/RolesGuard.html":{},"interfaces/Sorting.html":{},"miscellaneous/variables.html":{}}}],["request.credentials",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.headers",{"_index":1167,"title":{},"body":{"guards/RolesGuard.html":{}}}],["request.isauthenticated",{"_index":325,"title":{},"body":{"guards/AuthenticatedGuard.html":{}}}],["request.user",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requiredroles",{"_index":1164,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some((role",{"_index":1175,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requser",{"_index":1466,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":45,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RestModule.html":{},"overview.html":{}}}],["resolvers",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resp",{"_index":1173,"title":{},"body":{"guards/RolesGuard.html":{}}}],["resp.roles?.includes(role.tolowercase",{"_index":1176,"title":{},"body":{"guards/RolesGuard.html":{}}}],["response",{"_index":142,"title":{"classes/Response.html":{}},"body":{"classes/ApiResponseBuilder.html":{},"controllers/AuthController.html":{},"injectables/EmailService.html":{},"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"injectables/LoggerContextMiddleware.html":{},"classes/PaginatedResponseData.html":{},"classes/Response.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["response.builder",{"_index":790,"title":{},"body":{"injectables/FarmRepository.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{}}}],["response.builder.ts",{"_index":126,"title":{},"body":{"classes/ApiResponseBuilder.html":{},"coverage.html":{}}}],["response.builder.ts:15",{"_index":144,"title":{},"body":{"classes/ApiResponseBuilder.html":{}}}],["response.builder.ts:25",{"_index":139,"title":{},"body":{"classes/ApiResponseBuilder.html":{}}}],["response.builder.ts:6",{"_index":131,"title":{},"body":{"classes/ApiResponseBuilder.html":{}}}],["response.docs.length",{"_index":1375,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["response.docs.map((doc",{"_index":1372,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["response.docs[limit",{"_index":1376,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["response.empty",{"_index":1371,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["response.model",{"_index":147,"title":{},"body":{"classes/ApiResponseBuilder.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{}}}],["response/api",{"_index":789,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{}}}],["response[0].statuscode",{"_index":489,"title":{},"body":{"injectables/EmailService.html":{}}}],["rest",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["restmodule",{"_index":167,"title":{"modules/RestModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RestModule.html":{},"modules.html":{},"overview.html":{}}}],["result",{"_index":159,"title":{},"body":{"classes/ApiResponseBuilder.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"classes/PaginatedResponseData.html":{},"classes/Response.html":{}}}],["resultpagination",{"_index":817,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{}}}],["results",{"_index":23,"title":{},"body":{"interfaces/Account.html":{},"interfaces/Account-1.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/ApiResponseBuilder.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSerializer.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/BaseModel.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateOwnerDto.html":{},"injectables/EmailService.html":{},"classes/ExceptionsFilter.html":{},"classes/Farm.html":{},"controllers/FarmController.html":{},"classes/FarmDto.html":{},"classes/FarmMapperProfile.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"interfaces/Filtering.html":{},"classes/FirebaseAuthStrategy.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"classes/LinkFarmOwnerDto.html":{},"classes/LinkFarmWorkerDto.html":{},"injectables/LoggerContextMiddleware.html":{},"classes/Owner.html":{},"injectables/OwnerRepository.html":{},"classes/PaginatedResponseData.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"classes/Payload.html":{},"classes/Response.html":{},"modules/RestModule.html":{},"guards/RolesGuard.html":{},"classes/SalaryHistory.html":{},"classes/SalaryHistoryDto.html":{},"interfaces/Sorting.html":{},"classes/UnlinkFarmOwnerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerBenefitsDto.html":{},"controllers/WorkerController.html":{},"classes/WorkerDto.html":{},"classes/WorkerMapperProfile.html":{},"injectables/WorkerRepository.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDeductionsDto.html":{},"classes/WorkerSalaryDto.html":{},"injectables/WorkerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":114,"title":{},"body":{"injectables/AccountService.html":{},"classes/ApiResponseBuilder.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"injectables/ConfigService.html":{},"classes/ExceptionsFilter.html":{},"controllers/FarmController.html":{},"classes/FarmMapperProfile.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"interfaces/Filtering.html":{},"classes/FirebaseAuthStrategy.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"injectables/OwnerRepository.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"guards/RolesGuard.html":{},"interfaces/Sorting.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"controllers/WorkerController.html":{},"classes/WorkerMapperProfile.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":69,"title":{},"body":{"injectables/AccountService.html":{},"classes/ApiResponseBuilder.html":{},"controllers/AuthController.html":{},"injectables/AuthSerializer.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"injectables/EmailService.html":{},"classes/ExceptionsFilter.html":{},"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"classes/FirebaseAuthStrategy.html":{},"modules/FirestoreModule.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/OwnerRepository.html":{},"classes/PaginationBuilder.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":618,"title":{},"body":{"controllers/FarmController.html":{},"controllers/WorkerController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role(roles.admin",{"_index":643,"title":{},"body":{"controllers/FarmController.html":{},"controllers/WorkerController.html":{}}}],["role(roles.owner",{"_index":658,"title":{},"body":{"controllers/FarmController.html":{}}}],["roles",{"_index":14,"title":{},"body":{"interfaces/Account.html":{},"interfaces/Account-1.html":{},"injectables/AccountService.html":{},"injectables/AuthService.html":{},"classes/BankInfo.html":{},"classes/CreateOwnerDto.html":{},"controllers/FarmController.html":{},"classes/Owner.html":{},"classes/Payload.html":{},"guards/RolesGuard.html":{},"classes/SalaryHistory.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"controllers/WorkerController.html":{},"classes/WorkerDto.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["roles.admin",{"_index":659,"title":{},"body":{"controllers/FarmController.html":{}}}],["roles.admin)@useguards(rolesguard",{"_index":603,"title":{},"body":{"controllers/FarmController.html":{}}}],["roles.owner",{"_index":1310,"title":{},"body":{"controllers/WorkerController.html":{}}}],["roles.owner)@useguards(rolesguard",{"_index":1292,"title":{},"body":{"controllers/WorkerController.html":{}}}],["roles_key",{"_index":1162,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":620,"title":{"guards/RolesGuard.html":{}},"body":{"controllers/FarmController.html":{},"guards/RolesGuard.html":{},"controllers/WorkerController.html":{},"coverage.html":{}}}],["rule",{"_index":920,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["rules",{"_index":928,"title":{},"body":{"interfaces/Filtering.html":{}}}],["run",{"_index":1619,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1539,"title":{},"body":{"dependencies.html":{}}}],["sa_key",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["salary",{"_index":382,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerDto.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDeductionsDto.html":{},"classes/WorkerSalaryDto.html":{},"coverage.html":{}}}],["salary.dto",{"_index":1349,"title":{},"body":{"classes/WorkerDto.html":{}}}],["salary.dto.ts",{"_index":1411,"title":{},"body":{"classes/WorkerSalaryDto.html":{},"coverage.html":{}}}],["salary.dto.ts:12",{"_index":1419,"title":{},"body":{"classes/WorkerSalaryDto.html":{}}}],["salary.dto.ts:15",{"_index":1420,"title":{},"body":{"classes/WorkerSalaryDto.html":{}}}],["salary.dto.ts:18",{"_index":1415,"title":{},"body":{"classes/WorkerSalaryDto.html":{}}}],["salary.dto.ts:21",{"_index":1413,"title":{},"body":{"classes/WorkerSalaryDto.html":{}}}],["salary.dto.ts:24",{"_index":1417,"title":{},"body":{"classes/WorkerSalaryDto.html":{}}}],["salary.dto.ts:27",{"_index":1416,"title":{},"body":{"classes/WorkerSalaryDto.html":{}}}],["salary.dto.ts:30",{"_index":1414,"title":{},"body":{"classes/WorkerSalaryDto.html":{}}}],["salary.dto.ts:33",{"_index":1418,"title":{},"body":{"classes/WorkerSalaryDto.html":{}}}],["salary.dto.ts:9",{"_index":1412,"title":{},"body":{"classes/WorkerSalaryDto.html":{}}}],["salaryhistory",{"_index":364,"title":{"classes/SalaryHistory.html":{}},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"coverage.html":{}}}],["salaryhistorydto",{"_index":1179,"title":{"classes/SalaryHistoryDto.html":{}},"body":{"classes/SalaryHistoryDto.html":{},"classes/WorkerSalaryDto.html":{},"coverage.html":{}}}],["scalable",{"_index":1608,"title":{},"body":{"index.html":{}}}],["sendgrid",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/EmailService.html":{},"dependencies.html":{}}}],["sendgrid/mail",{"_index":469,"title":{},"body":{"injectables/EmailService.html":{},"dependencies.html":{}}}],["sendgridmodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["sendgridmodule.forrootasync",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["sendgridservice",{"_index":461,"title":{},"body":{"injectables/EmailService.html":{}}}],["sending",{"_index":492,"title":{},"body":{"injectables/EmailService.html":{}}}],["sendverificationemail",{"_index":459,"title":{},"body":{"injectables/EmailService.html":{}}}],["sendverificationemail(email",{"_index":463,"title":{},"body":{"injectables/EmailService.html":{}}}],["sent",{"_index":940,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["serializeuser",{"_index":268,"title":{},"body":{"injectables/AuthSerializer.html":{}}}],["serializeuser(user",{"_index":276,"title":{},"body":{"injectables/AuthSerializer.html":{}}}],["server",{"_index":1609,"title":{},"body":{"index.html":{}}}],["service",{"_index":1309,"title":{},"body":{"controllers/WorkerController.html":{}}}],["serviceaccount",{"_index":1453,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["services",{"_index":418,"title":{},"body":{"modules/CommonModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["services/farm.service",{"_index":637,"title":{},"body":{"controllers/FarmController.html":{},"modules/RestModule.html":{}}}],["services/worker.service",{"_index":1158,"title":{},"body":{"modules/RestModule.html":{},"controllers/WorkerController.html":{}}}],["session",{"_index":1518,"title":{},"body":{"dependencies.html":{}}}],["set(['/health",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata('ispublic",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(roles_key",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":991,"title":{},"body":{"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["share",{"_index":1060,"title":{},"body":{"injectables/LoggerContextMiddleware.html":{}}}],["shared/user",{"_index":255,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["side",{"_index":1610,"title":{},"body":{"index.html":{}}}],["sido",{"_index":870,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["singleline",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["size",{"_index":1122,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"miscellaneous/variables.html":{}}}],["slavehost",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slaves",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snapshot",{"_index":808,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/OwnerRepository.html":{},"classes/PaginationBuilder.html":{},"injectables/WorkerRepository.html":{}}}],["snapshot.docs.foreach((worker",{"_index":1110,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["snapshot.docs.map((doc",{"_index":834,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["snapshot.empty",{"_index":833,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/OwnerRepository.html":{}}}],["snapshot.size",{"_index":1133,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationBuilder.html":{}}}],["sort",{"_index":587,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"interfaces/Sorting.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{},"miscellaneous/variables.html":{}}}],["sort.direction",{"_index":800,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{}}}],["sort.match(sortpattern",{"_index":1193,"title":{},"body":{"interfaces/Sorting.html":{},"miscellaneous/variables.html":{}}}],["sort.split",{"_index":1195,"title":{},"body":{"interfaces/Sorting.html":{},"miscellaneous/variables.html":{}}}],["sorting",{"_index":588,"title":{"interfaces/Sorting.html":{}},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"interfaces/Sorting.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sortingparams",{"_index":625,"title":{},"body":{"controllers/FarmController.html":{},"interfaces/Sorting.html":{},"controllers/WorkerController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sortingparams(['name",{"_index":645,"title":{},"body":{"controllers/FarmController.html":{},"controllers/WorkerController.html":{}}}],["sortingparams(['ownerid",{"_index":650,"title":{},"body":{"controllers/FarmController.html":{}}}],["sortoptions",{"_index":1194,"title":{},"body":{"interfaces/Sorting.html":{},"miscellaneous/variables.html":{}}}],["sortoptions[0",{"_index":1196,"title":{},"body":{"interfaces/Sorting.html":{},"miscellaneous/variables.html":{}}}],["sortoptions[1",{"_index":1197,"title":{},"body":{"interfaces/Sorting.html":{},"miscellaneous/variables.html":{}}}],["sortpattern",{"_index":1191,"title":{},"body":{"interfaces/Sorting.html":{},"miscellaneous/variables.html":{}}}],["sortschema",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Account.html":{},"interfaces/Account-1.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"classes/ApiResponseBuilder.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSerializer.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/BaseModel.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateOwnerDto.html":{},"injectables/EmailService.html":{},"classes/ExceptionsFilter.html":{},"classes/Farm.html":{},"controllers/FarmController.html":{},"classes/FarmDto.html":{},"classes/FarmMapperProfile.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"interfaces/Filtering.html":{},"classes/FirebaseAuthStrategy.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"injectables/GqlAuthGuard.html":{},"controllers/HealthController.html":{},"classes/LinkFarmOwnerDto.html":{},"classes/LinkFarmWorkerDto.html":{},"injectables/LoggerContextMiddleware.html":{},"classes/Owner.html":{},"injectables/OwnerRepository.html":{},"classes/PaginatedResponseData.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"classes/Payload.html":{},"classes/Response.html":{},"modules/RestModule.html":{},"guards/RolesGuard.html":{},"classes/SalaryHistory.html":{},"classes/SalaryHistoryDto.html":{},"interfaces/Sorting.html":{},"classes/UnlinkFarmOwnerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerBenefitsDto.html":{},"controllers/WorkerController.html":{},"classes/WorkerDto.html":{},"classes/WorkerMapperProfile.html":{},"injectables/WorkerRepository.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDeductionsDto.html":{},"classes/WorkerSalaryDto.html":{},"injectables/WorkerService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["source[key",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sourcevalue",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sponsors",{"_index":1637,"title":{},"body":{"index.html":{}}}],["squaremeters",{"_index":1558,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../app.middleware.ts",{"_index":1595,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../app.ts",{"_index":1680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../area",{"_index":1543,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../collections.ts",{"_index":1545,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../common.module.ts",{"_index":1693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../config.interface.ts",{"_index":1676,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../configuration.ts",{"_index":1685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../default.ts",{"_index":1681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../development.ts",{"_index":1682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../farm",{"_index":1547,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../filtering.decorator.ts",{"_index":1549,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../firestore.provider.ts",{"_index":1687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logger.config.ts",{"_index":1688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../milk",{"_index":1550,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../pagination.decorator.ts",{"_index":1689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../production.ts",{"_index":1683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../public.decorator.ts",{"_index":1690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../req",{"_index":1691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.decorator.ts",{"_index":1692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.ts",{"_index":1551,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../sorting.decorator.ts",{"_index":1694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../string.utils.ts",{"_index":1594,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../swagger.ts",{"_index":1593,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../test.ts",{"_index":1684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../util.service.ts",{"_index":1678,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../weight",{"_index":1552,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../worker.model.ts",{"_index":1546,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.middleware.ts",{"_index":1445,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.ts",{"_index":1447,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.interface.ts",{"_index":6,"title":{},"body":{"interfaces/Account.html":{},"coverage.html":{}}}],["src/auth/auth.module.ts",{"_index":247,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.serializer.ts",{"_index":264,"title":{},"body":{"injectables/AuthSerializer.html":{},"coverage.html":{}}}],["src/auth/auth.serializer.ts:12",{"_index":274,"title":{},"body":{"injectables/AuthSerializer.html":{}}}],["src/auth/auth.serializer.ts:8",{"_index":278,"title":{},"body":{"injectables/AuthSerializer.html":{}}}],["src/auth/auth.service.ts",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:11",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:15",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:8",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/guards/authenticated.guard.ts",{"_index":303,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"coverage.html":{}}}],["src/auth/guards/authenticated.guard.ts:10",{"_index":311,"title":{},"body":{"guards/AuthenticatedGuard.html":{}}}],["src/auth/guards/authenticated.guard.ts:18",{"_index":314,"title":{},"body":{"guards/AuthenticatedGuard.html":{}}}],["src/auth/guards/authenticated.guard.ts:7",{"_index":308,"title":{},"body":{"guards/AuthenticatedGuard.html":{}}}],["src/auth/strategies/firebase",{"_index":969,"title":{},"body":{"classes/FirebaseAuthStrategy.html":{},"coverage.html":{}}}],["src/base/base.module.ts",{"_index":402,"title":{},"body":{"modules/BaseModule.html":{}}}],["src/base/controllers/auth.controller.ts",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/base/controllers/auth.controller.ts:14",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/base/controllers/health.controller.ts",{"_index":1012,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/base/controllers/health.controller.ts:25",{"_index":1016,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/base/roles.ts",{"_index":1585,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/common.module.ts",{"_index":409,"title":{},"body":{"modules/CommonModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/common.module.ts:14",{"_index":413,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/common/db/firestore.module.ts",{"_index":979,"title":{},"body":{"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"coverage.html":{}}}],["src/common/db/firestore.module.ts:18",{"_index":983,"title":{},"body":{"modules/FirestoreModule.html":{}}}],["src/common/db/firestore.provider.ts",{"_index":1461,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/filtering.decorator.ts",{"_index":918,"title":{},"body":{"interfaces/Filtering.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/gql",{"_index":1004,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"coverage.html":{}}}],["src/common/decorators/pagination.decorator.ts",{"_index":1462,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/public.decorator.ts",{"_index":1463,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/req",{"_index":1464,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/role.decorator.ts",{"_index":1467,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/sorting.decorator.ts",{"_index":1184,"title":{},"body":{"interfaces/Sorting.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/filters/exceptions.filter.ts",{"_index":494,"title":{},"body":{"classes/ExceptionsFilter.html":{},"coverage.html":{}}}],["src/common/filters/exceptions.filter.ts:10",{"_index":501,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["src/common/filters/exceptions.filter.ts:39",{"_index":504,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["src/common/filters/exceptions.filter.ts:8",{"_index":497,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["src/common/guards/roles.guard.ts",{"_index":1159,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/common/guards/roles.guard.ts:15",{"_index":1161,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/guards/roles.guard.ts:9",{"_index":1160,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/middleware/logger",{"_index":1036,"title":{},"body":{"injectables/LoggerContextMiddleware.html":{},"coverage.html":{}}}],["src/common/providers/config.service.ts",{"_index":421,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["src/common/providers/config.service.ts:8",{"_index":425,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/common/providers/util.service.ts",{"_index":1239,"title":{},"body":{"injectables/UtilService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/providers/util.service.ts:24",{"_index":1249,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/common/providers/util.service.ts:28",{"_index":1247,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/common/providers/util.service.ts:32",{"_index":1251,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/common/providers/util.service.ts:8",{"_index":1255,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/common/utils/string.utils.ts",{"_index":1468,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/config/config.interface.ts",{"_index":1679,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/config/configuration.ts",{"_index":1469,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/envs/default.ts",{"_index":1471,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/envs/development.ts",{"_index":1472,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/envs/production.ts",{"_index":1473,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/envs/test.ts",{"_index":1474,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/logger.config.ts",{"_index":1475,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/dto/bank",{"_index":384,"title":{},"body":{"classes/BankInfoDto.html":{},"coverage.html":{}}}],["src/core/dto/create",{"_index":435,"title":{},"body":{"classes/CreateOwnerDto.html":{},"coverage.html":{}}}],["src/core/dto/farm.dto.ts",{"_index":676,"title":{},"body":{"classes/FarmDto.html":{},"coverage.html":{}}}],["src/core/dto/farm.dto.ts:14",{"_index":707,"title":{},"body":{"classes/FarmDto.html":{}}}],["src/core/dto/farm.dto.ts:19",{"_index":693,"title":{},"body":{"classes/FarmDto.html":{}}}],["src/core/dto/farm.dto.ts:24",{"_index":705,"title":{},"body":{"classes/FarmDto.html":{}}}],["src/core/dto/farm.dto.ts:28",{"_index":679,"title":{},"body":{"classes/FarmDto.html":{}}}],["src/core/dto/farm.dto.ts:32",{"_index":709,"title":{},"body":{"classes/FarmDto.html":{}}}],["src/core/dto/farm.dto.ts:36",{"_index":687,"title":{},"body":{"classes/FarmDto.html":{}}}],["src/core/dto/farm.dto.ts:41",{"_index":682,"title":{},"body":{"classes/FarmDto.html":{}}}],["src/core/dto/farm.dto.ts:46",{"_index":703,"title":{},"body":{"classes/FarmDto.html":{}}}],["src/core/dto/farm.dto.ts:51",{"_index":712,"title":{},"body":{"classes/FarmDto.html":{}}}],["src/core/dto/farm.dto.ts:56",{"_index":692,"title":{},"body":{"classes/FarmDto.html":{}}}],["src/core/dto/farm.dto.ts:61",{"_index":689,"title":{},"body":{"classes/FarmDto.html":{}}}],["src/core/dto/farm.dto.ts:66",{"_index":688,"title":{},"body":{"classes/FarmDto.html":{}}}],["src/core/dto/farm.dto.ts:71",{"_index":690,"title":{},"body":{"classes/FarmDto.html":{}}}],["src/core/dto/farm.dto.ts:76",{"_index":708,"title":{},"body":{"classes/FarmDto.html":{}}}],["src/core/dto/farm.dto.ts:83",{"_index":697,"title":{},"body":{"classes/FarmDto.html":{}}}],["src/core/dto/farm.dto.ts:90",{"_index":700,"title":{},"body":{"classes/FarmDto.html":{}}}],["src/core/dto/link",{"_index":1028,"title":{},"body":{"classes/LinkFarmOwnerDto.html":{},"classes/LinkFarmWorkerDto.html":{},"coverage.html":{}}}],["src/core/dto/salary",{"_index":1180,"title":{},"body":{"classes/SalaryHistoryDto.html":{},"coverage.html":{}}}],["src/core/dto/ublink",{"_index":1199,"title":{},"body":{"classes/UnlinkFarmOwnerDto.html":{},"coverage.html":{}}}],["src/core/dto/unlink",{"_index":1200,"title":{},"body":{"classes/UnlinkFarmWorkerDto.html":{},"coverage.html":{}}}],["src/core/dto/user.dto.ts",{"_index":1212,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/core/dto/user.dto.ts:12",{"_index":1224,"title":{},"body":{"classes/UserDto.html":{}}}],["src/core/dto/user.dto.ts:16",{"_index":1219,"title":{},"body":{"classes/UserDto.html":{}}}],["src/core/dto/user.dto.ts:20",{"_index":1225,"title":{},"body":{"classes/UserDto.html":{}}}],["src/core/dto/user.dto.ts:24",{"_index":1216,"title":{},"body":{"classes/UserDto.html":{}}}],["src/core/dto/user.dto.ts:29",{"_index":1218,"title":{},"body":{"classes/UserDto.html":{}}}],["src/core/dto/user.dto.ts:34",{"_index":1221,"title":{},"body":{"classes/UserDto.html":{}}}],["src/core/dto/user.dto.ts:38",{"_index":1213,"title":{},"body":{"classes/UserDto.html":{}}}],["src/core/dto/user.dto.ts:42",{"_index":1226,"title":{},"body":{"classes/UserDto.html":{}}}],["src/core/dto/user.dto.ts:8",{"_index":1223,"title":{},"body":{"classes/UserDto.html":{}}}],["src/core/dto/worker",{"_index":1280,"title":{},"body":{"classes/WorkerBenefitsDto.html":{},"classes/WorkerSalaryDeductionsDto.html":{},"classes/WorkerSalaryDto.html":{},"coverage.html":{}}}],["src/core/dto/worker.dto.ts",{"_index":1323,"title":{},"body":{"classes/WorkerDto.html":{},"coverage.html":{}}}],["src/core/dto/worker.dto.ts:14",{"_index":1340,"title":{},"body":{"classes/WorkerDto.html":{}}}],["src/core/dto/worker.dto.ts:19",{"_index":1341,"title":{},"body":{"classes/WorkerDto.html":{}}}],["src/core/dto/worker.dto.ts:24",{"_index":1328,"title":{},"body":{"classes/WorkerDto.html":{}}}],["src/core/dto/worker.dto.ts:29",{"_index":1338,"title":{},"body":{"classes/WorkerDto.html":{}}}],["src/core/dto/worker.dto.ts:34",{"_index":1330,"title":{},"body":{"classes/WorkerDto.html":{}}}],["src/core/dto/worker.dto.ts:38",{"_index":1343,"title":{},"body":{"classes/WorkerDto.html":{}}}],["src/core/dto/worker.dto.ts:43",{"_index":1326,"title":{},"body":{"classes/WorkerDto.html":{}}}],["src/core/dto/worker.dto.ts:48",{"_index":1333,"title":{},"body":{"classes/WorkerDto.html":{}}}],["src/core/dto/worker.dto.ts:53",{"_index":1334,"title":{},"body":{"classes/WorkerDto.html":{}}}],["src/core/dto/worker.dto.ts:58",{"_index":1336,"title":{},"body":{"classes/WorkerDto.html":{}}}],["src/core/dto/worker.dto.ts:61",{"_index":1345,"title":{},"body":{"classes/WorkerDto.html":{}}}],["src/core/dto/worker.dto.ts:64",{"_index":1324,"title":{},"body":{"classes/WorkerDto.html":{}}}],["src/core/dto/worker.dto.ts:9",{"_index":1332,"title":{},"body":{"classes/WorkerDto.html":{}}}],["src/core/email.service.ts",{"_index":458,"title":{},"body":{"injectables/EmailService.html":{},"coverage.html":{}}}],["src/core/email.service.ts:15",{"_index":467,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/core/email.service.ts:8",{"_index":462,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/core/enums/area",{"_index":1553,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/enums/collections.ts",{"_index":1561,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/enums/farm",{"_index":1563,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/enums/milk",{"_index":1576,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/enums/weight",{"_index":1588,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/mappers/farm.mapper",{"_index":731,"title":{},"body":{"classes/FarmMapperProfile.html":{},"coverage.html":{}}}],["src/core/mappers/worker.mapper",{"_index":1352,"title":{},"body":{"classes/WorkerMapperProfile.html":{},"coverage.html":{}}}],["src/core/models/base.model.ts",{"_index":391,"title":{},"body":{"classes/BaseModel.html":{},"coverage.html":{}}}],["src/core/models/base.model.ts:12",{"_index":398,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/core/models/base.model.ts:7",{"_index":396,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/core/models/farm.model.ts",{"_index":536,"title":{},"body":{"classes/Farm.html":{},"coverage.html":{}}}],["src/core/models/farm.model.ts:10",{"_index":556,"title":{},"body":{"classes/Farm.html":{}}}],["src/core/models/farm.model.ts:13",{"_index":560,"title":{},"body":{"classes/Farm.html":{}}}],["src/core/models/farm.model.ts:16",{"_index":549,"title":{},"body":{"classes/Farm.html":{}}}],["src/core/models/farm.model.ts:19",{"_index":563,"title":{},"body":{"classes/Farm.html":{}}}],["src/core/models/farm.model.ts:22",{"_index":551,"title":{},"body":{"classes/Farm.html":{}}}],["src/core/models/farm.model.ts:25",{"_index":550,"title":{},"body":{"classes/Farm.html":{}}}],["src/core/models/farm.model.ts:28",{"_index":559,"title":{},"body":{"classes/Farm.html":{}}}],["src/core/models/farm.model.ts:31",{"_index":564,"title":{},"body":{"classes/Farm.html":{}}}],["src/core/models/farm.model.ts:34",{"_index":555,"title":{},"body":{"classes/Farm.html":{}}}],["src/core/models/farm.model.ts:37",{"_index":553,"title":{},"body":{"classes/Farm.html":{}}}],["src/core/models/farm.model.ts:40",{"_index":552,"title":{},"body":{"classes/Farm.html":{}}}],["src/core/models/farm.model.ts:43",{"_index":554,"title":{},"body":{"classes/Farm.html":{}}}],["src/core/models/farm.model.ts:46",{"_index":562,"title":{},"body":{"classes/Farm.html":{}}}],["src/core/models/farm.model.ts:49",{"_index":566,"title":{},"body":{"classes/Farm.html":{}}}],["src/core/models/farm.model.ts:52",{"_index":557,"title":{},"body":{"classes/Farm.html":{}}}],["src/core/models/farm.model.ts:55",{"_index":558,"title":{},"body":{"classes/Farm.html":{}}}],["src/core/models/farm.model.ts:7",{"_index":561,"title":{},"body":{"classes/Farm.html":{}}}],["src/core/models/owner.model.ts",{"_index":1062,"title":{},"body":{"classes/Owner.html":{},"coverage.html":{}}}],["src/core/models/payload.model.ts",{"_index":1137,"title":{},"body":{"classes/Payload.html":{},"coverage.html":{}}}],["src/core/models/payload.model.ts:5",{"_index":1141,"title":{},"body":{"classes/Payload.html":{}}}],["src/core/models/payload.model.ts:6",{"_index":1142,"title":{},"body":{"classes/Payload.html":{}}}],["src/core/models/payload.model.ts:7",{"_index":1139,"title":{},"body":{"classes/Payload.html":{}}}],["src/core/models/payload.model.ts:8",{"_index":1140,"title":{},"body":{"classes/Payload.html":{}}}],["src/core/models/user.model.ts",{"_index":1201,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/core/models/user.model.ts:11",{"_index":1207,"title":{},"body":{"classes/User.html":{}}}],["src/core/models/user.model.ts:14",{"_index":1204,"title":{},"body":{"classes/User.html":{}}}],["src/core/models/user.model.ts:17",{"_index":1205,"title":{},"body":{"classes/User.html":{}}}],["src/core/models/user.model.ts:20",{"_index":1209,"title":{},"body":{"classes/User.html":{}}}],["src/core/models/user.model.ts:23",{"_index":1208,"title":{},"body":{"classes/User.html":{}}}],["src/core/models/user.model.ts:26",{"_index":1203,"title":{},"body":{"classes/User.html":{}}}],["src/core/models/user.model.ts:29",{"_index":1202,"title":{},"body":{"classes/User.html":{}}}],["src/core/models/user.model.ts:32",{"_index":1210,"title":{},"body":{"classes/User.html":{}}}],["src/core/models/user.model.ts:8",{"_index":1206,"title":{},"body":{"classes/User.html":{}}}],["src/core/models/worker.model.ts",{"_index":333,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/core/models/worker.model.ts:101",{"_index":1276,"title":{},"body":{"classes/Worker.html":{}}}],["src/core/models/worker.model.ts:104",{"_index":1266,"title":{},"body":{"classes/Worker.html":{}}}],["src/core/models/worker.model.ts:107",{"_index":1270,"title":{},"body":{"classes/Worker.html":{}}}],["src/core/models/worker.model.ts:110",{"_index":1271,"title":{},"body":{"classes/Worker.html":{}}}],["src/core/models/worker.model.ts:113",{"_index":1272,"title":{},"body":{"classes/Worker.html":{}}}],["src/core/models/worker.model.ts:116",{"_index":1277,"title":{},"body":{"classes/Worker.html":{}}}],["src/core/models/worker.model.ts:119",{"_index":1265,"title":{},"body":{"classes/Worker.html":{}}}],["src/core/models/worker.model.ts:16",{"_index":1278,"title":{},"body":{"classes/WorkerBenefits.html":{}}}],["src/core/models/worker.model.ts:21",{"_index":1177,"title":{},"body":{"classes/SalaryHistory.html":{}}}],["src/core/models/worker.model.ts:24",{"_index":1178,"title":{},"body":{"classes/SalaryHistory.html":{}}}],["src/core/models/worker.model.ts:29",{"_index":1406,"title":{},"body":{"classes/WorkerSalaryDeduction.html":{}}}],["src/core/models/worker.model.ts:32",{"_index":1405,"title":{},"body":{"classes/WorkerSalaryDeduction.html":{}}}],["src/core/models/worker.model.ts:37",{"_index":1396,"title":{},"body":{"classes/WorkerSalary.html":{}}}],["src/core/models/worker.model.ts:40",{"_index":1403,"title":{},"body":{"classes/WorkerSalary.html":{}}}],["src/core/models/worker.model.ts:43",{"_index":1404,"title":{},"body":{"classes/WorkerSalary.html":{}}}],["src/core/models/worker.model.ts:46",{"_index":1399,"title":{},"body":{"classes/WorkerSalary.html":{}}}],["src/core/models/worker.model.ts:49",{"_index":1397,"title":{},"body":{"classes/WorkerSalary.html":{}}}],["src/core/models/worker.model.ts:52",{"_index":1401,"title":{},"body":{"classes/WorkerSalary.html":{}}}],["src/core/models/worker.model.ts:55",{"_index":1400,"title":{},"body":{"classes/WorkerSalary.html":{}}}],["src/core/models/worker.model.ts:58",{"_index":1398,"title":{},"body":{"classes/WorkerSalary.html":{}}}],["src/core/models/worker.model.ts:61",{"_index":1402,"title":{},"body":{"classes/WorkerSalary.html":{}}}],["src/core/models/worker.model.ts:66",{"_index":341,"title":{},"body":{"classes/BankInfo.html":{}}}],["src/core/models/worker.model.ts:69",{"_index":344,"title":{},"body":{"classes/BankInfo.html":{}}}],["src/core/models/worker.model.ts:72",{"_index":343,"title":{},"body":{"classes/BankInfo.html":{}}}],["src/core/models/worker.model.ts:75",{"_index":342,"title":{},"body":{"classes/BankInfo.html":{}}}],["src/core/models/worker.model.ts:78",{"_index":340,"title":{},"body":{"classes/BankInfo.html":{}}}],["src/core/models/worker.model.ts:83",{"_index":1269,"title":{},"body":{"classes/Worker.html":{}}}],["src/core/models/worker.model.ts:86",{"_index":1274,"title":{},"body":{"classes/Worker.html":{}}}],["src/core/models/worker.model.ts:89",{"_index":1275,"title":{},"body":{"classes/Worker.html":{}}}],["src/core/models/worker.model.ts:92",{"_index":1267,"title":{},"body":{"classes/Worker.html":{}}}],["src/core/models/worker.model.ts:95",{"_index":1273,"title":{},"body":{"classes/Worker.html":{}}}],["src/core/models/worker.model.ts:98",{"_index":1268,"title":{},"body":{"classes/Worker.html":{}}}],["src/core/pagination.model.ts",{"_index":1119,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"coverage.html":{}}}],["src/core/pagination.model.ts:11",{"_index":1128,"title":{},"body":{"classes/Pagination.html":{}}}],["src/core/pagination.model.ts:14",{"_index":1130,"title":{},"body":{"classes/Pagination.html":{}}}],["src/core/pagination.model.ts:17",{"_index":1127,"title":{},"body":{"classes/Pagination.html":{}}}],["src/core/pagination.model.ts:20",{"_index":1126,"title":{},"body":{"classes/Pagination.html":{}}}],["src/core/pagination.model.ts:24",{"_index":1136,"title":{},"body":{"classes/PaginationBuilder.html":{}}}],["src/core/pagination.model.ts:8",{"_index":1129,"title":{},"body":{"classes/Pagination.html":{}}}],["src/core/repositories/farm.repository.ts",{"_index":753,"title":{},"body":{"injectables/FarmRepository.html":{},"coverage.html":{}}}],["src/core/repositories/farm.repository.ts:106",{"_index":772,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["src/core/repositories/farm.repository.ts:130",{"_index":774,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["src/core/repositories/farm.repository.ts:152",{"_index":773,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["src/core/repositories/farm.repository.ts:171",{"_index":775,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["src/core/repositories/farm.repository.ts:26",{"_index":762,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["src/core/repositories/farm.repository.ts:36",{"_index":765,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["src/core/repositories/farm.repository.ts:59",{"_index":768,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["src/core/repositories/farm.repository.ts:71",{"_index":770,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["src/core/repositories/farm.repository.ts:87",{"_index":763,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["src/core/repositories/owner.repository.ts",{"_index":1073,"title":{},"body":{"injectables/OwnerRepository.html":{},"coverage.html":{}}}],["src/core/repositories/owner.repository.ts:14",{"_index":1080,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["src/core/repositories/owner.repository.ts:23",{"_index":1082,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["src/core/repositories/owner.repository.ts:44",{"_index":1083,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["src/core/repositories/owner.repository.ts:56",{"_index":1085,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["src/core/repositories/owner.repository.ts:61",{"_index":1087,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["src/core/repositories/owner.repository.ts:65",{"_index":1086,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["src/core/repositories/worker.repository.ts",{"_index":1353,"title":{},"body":{"injectables/WorkerRepository.html":{},"coverage.html":{}}}],["src/core/repositories/worker.repository.ts:116",{"_index":1357,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["src/core/repositories/worker.repository.ts:141",{"_index":1363,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["src/core/repositories/worker.repository.ts:19",{"_index":1356,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["src/core/repositories/worker.repository.ts:26",{"_index":1360,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["src/core/repositories/worker.repository.ts:62",{"_index":1359,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["src/core/repositories/worker.repository.ts:97",{"_index":1361,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["src/core/response.model.ts",{"_index":1116,"title":{},"body":{"classes/PaginatedResponseData.html":{},"classes/Response.html":{},"coverage.html":{}}}],["src/core/response.model.ts:10",{"_index":1146,"title":{},"body":{"classes/Response.html":{}}}],["src/core/response.model.ts:11",{"_index":1145,"title":{},"body":{"classes/Response.html":{}}}],["src/core/response.model.ts:12",{"_index":1144,"title":{},"body":{"classes/Response.html":{}}}],["src/core/response.model.ts:13",{"_index":1143,"title":{},"body":{"classes/Response.html":{}}}],["src/core/response.model.ts:5",{"_index":1117,"title":{},"body":{"classes/PaginatedResponseData.html":{}}}],["src/core/response.model.ts:6",{"_index":1118,"title":{},"body":{"classes/PaginatedResponseData.html":{}}}],["src/core/response/api",{"_index":125,"title":{},"body":{"classes/ApiResponseBuilder.html":{},"coverage.html":{}}}],["src/core/services/farm.service.ts",{"_index":896,"title":{},"body":{"injectables/FarmService.html":{},"coverage.html":{}}}],["src/core/services/farm.service.ts:17",{"_index":898,"title":{},"body":{"injectables/FarmService.html":{}}}],["src/core/services/farm.service.ts:23",{"_index":900,"title":{},"body":{"injectables/FarmService.html":{}}}],["src/core/services/farm.service.ts:31",{"_index":901,"title":{},"body":{"injectables/FarmService.html":{}}}],["src/core/services/farm.service.ts:39",{"_index":902,"title":{},"body":{"injectables/FarmService.html":{}}}],["src/core/services/farm.service.ts:47",{"_index":899,"title":{},"body":{"injectables/FarmService.html":{}}}],["src/core/services/farm.service.ts:51",{"_index":903,"title":{},"body":{"injectables/FarmService.html":{}}}],["src/core/services/farm.service.ts:55",{"_index":905,"title":{},"body":{"injectables/FarmService.html":{}}}],["src/core/services/farm.service.ts:59",{"_index":904,"title":{},"body":{"injectables/FarmService.html":{}}}],["src/core/services/farm.service.ts:63",{"_index":906,"title":{},"body":{"injectables/FarmService.html":{}}}],["src/core/services/user.service.ts",{"_index":1230,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/core/services/user.service.ts:10",{"_index":1235,"title":{},"body":{"injectables/UserService.html":{}}}],["src/core/services/user.service.ts:7",{"_index":1233,"title":{},"body":{"injectables/UserService.html":{}}}],["src/core/services/worker.service.ts",{"_index":1425,"title":{},"body":{"injectables/WorkerService.html":{},"coverage.html":{}}}],["src/core/services/worker.service.ts:12",{"_index":1427,"title":{},"body":{"injectables/WorkerService.html":{}}}],["src/core/services/worker.service.ts:18",{"_index":1430,"title":{},"body":{"injectables/WorkerService.html":{}}}],["src/core/services/worker.service.ts:27",{"_index":1432,"title":{},"body":{"injectables/WorkerService.html":{}}}],["src/core/services/worker.service.ts:35",{"_index":1433,"title":{},"body":{"injectables/WorkerService.html":{}}}],["src/core/services/worker.service.ts:39",{"_index":1428,"title":{},"body":{"injectables/WorkerService.html":{}}}],["src/core/services/worker.service.ts:43",{"_index":1434,"title":{},"body":{"injectables/WorkerService.html":{}}}],["src/rest/controllers/farm.controller.ts",{"_index":573,"title":{},"body":{"controllers/FarmController.html":{},"coverage.html":{}}}],["src/rest/controllers/farm.controller.ts:31",{"_index":592,"title":{},"body":{"controllers/FarmController.html":{}}}],["src/rest/controllers/farm.controller.ts:40",{"_index":596,"title":{},"body":{"controllers/FarmController.html":{}}}],["src/rest/controllers/farm.controller.ts:45",{"_index":599,"title":{},"body":{"controllers/FarmController.html":{}}}],["src/rest/controllers/farm.controller.ts:54",{"_index":585,"title":{},"body":{"controllers/FarmController.html":{}}}],["src/rest/controllers/farm.controller.ts:62",{"_index":604,"title":{},"body":{"controllers/FarmController.html":{}}}],["src/rest/controllers/farm.controller.ts:70",{"_index":612,"title":{},"body":{"controllers/FarmController.html":{}}}],["src/rest/controllers/farm.controller.ts:77",{"_index":608,"title":{},"body":{"controllers/FarmController.html":{}}}],["src/rest/controllers/farm.controller.ts:85",{"_index":616,"title":{},"body":{"controllers/FarmController.html":{}}}],["src/rest/controllers/worker.controller.ts",{"_index":1283,"title":{},"body":{"controllers/WorkerController.html":{},"coverage.html":{}}}],["src/rest/controllers/worker.controller.ts:27",{"_index":1296,"title":{},"body":{"controllers/WorkerController.html":{}}}],["src/rest/controllers/worker.controller.ts:39",{"_index":1299,"title":{},"body":{"controllers/WorkerController.html":{}}}],["src/rest/controllers/worker.controller.ts:51",{"_index":1301,"title":{},"body":{"controllers/WorkerController.html":{}}}],["src/rest/controllers/worker.controller.ts:59",{"_index":1293,"title":{},"body":{"controllers/WorkerController.html":{}}}],["src/rest/controllers/worker.controller.ts:66",{"_index":1304,"title":{},"body":{"controllers/WorkerController.html":{}}}],["src/rest/rest.module.ts",{"_index":1152,"title":{},"body":{"modules/RestModule.html":{}}}],["src/shared/user/account.interface.ts",{"_index":26,"title":{},"body":{"interfaces/Account-1.html":{},"coverage.html":{}}}],["src/shared/user/account.module.ts",{"_index":47,"title":{},"body":{"modules/AccountModule.html":{}}}],["src/shared/user/account.service.ts",{"_index":55,"title":{},"body":{"injectables/AccountService.html":{},"coverage.html":{}}}],["src/shared/user/account.service.ts:15",{"_index":68,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/shared/user/account.service.ts:9",{"_index":64,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/swagger.ts",{"_index":1485,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":1620,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1623,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1625,"title":{},"body":{"index.html":{}}}],["startafterdoc",{"_index":804,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["started",{"_index":1602,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1613,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1444,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":127,"title":{},"body":{"classes/ApiResponseBuilder.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"dependencies.html":{}}}],["status",{"_index":134,"title":{},"body":{"classes/ApiResponseBuilder.html":{},"classes/ExceptionsFilter.html":{},"classes/PaginatedResponseData.html":{},"classes/Response.html":{}}}],["stay",{"_index":1647,"title":{},"body":{"index.html":{}}}],["stdtimefunctions.isotime",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategyinitializer",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["stream",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["streams",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":18,"title":{},"body":{"interfaces/Account.html":{},"interfaces/Account-1.html":{},"classes/ApiResponseBuilder.html":{},"injectables/AuthService.html":{},"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/BaseModel.html":{},"classes/CreateOwnerDto.html":{},"injectables/EmailService.html":{},"classes/Farm.html":{},"classes/FarmDto.html":{},"interfaces/Filtering.html":{},"classes/LinkFarmOwnerDto.html":{},"classes/LinkFarmWorkerDto.html":{},"injectables/LoggerContextMiddleware.html":{},"classes/Owner.html":{},"injectables/OwnerRepository.html":{},"classes/PaginatedResponseData.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"classes/Payload.html":{},"classes/Response.html":{},"classes/SalaryHistory.html":{},"classes/SalaryHistoryDto.html":{},"interfaces/Sorting.html":{},"classes/UnlinkFarmOwnerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UtilService.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerDto.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":475,"title":{},"body":{"injectables/EmailService.html":{}}}],["subscribers",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subscriptions",{"_index":1524,"title":{},"body":{"dependencies.html":{}}}],["success",{"_index":129,"title":{},"body":{"classes/ApiResponseBuilder.html":{},"classes/PaginatedResponseData.html":{},"classes/Response.html":{}}}],["success(status",{"_index":136,"title":{},"body":{"classes/ApiResponseBuilder.html":{}}}],["super",{"_index":977,"title":{},"body":{"classes/FirebaseAuthStrategy.html":{}}}],["super(mapper",{"_index":748,"title":{},"body":{"classes/FarmMapperProfile.html":{},"classes/WorkerMapperProfile.html":{}}}],["super.catch(exception",{"_index":522,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["super.get(path",{"_index":430,"title":{},"body":{"injectables/ConfigService.html":{}}}],["support",{"_index":1638,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1658,"title":{},"body":{"modules.html":{}}}],["sync",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":137,"title":{},"body":{"classes/ApiResponseBuilder.html":{},"classes/PaginatedResponseData.html":{},"classes/Response.html":{},"injectables/UtilService.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":1488,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1487,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target[key",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["targetvalue",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taxes",{"_index":368,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDeductionsDto.html":{}}}],["template",{"_index":1242,"title":{},"body":{"injectables/UtilService.html":{}}}],["template(templatedata",{"_index":1253,"title":{},"body":{"injectables/UtilService.html":{}}}],["templatedata",{"_index":464,"title":{},"body":{"injectables/EmailService.html":{},"injectables/UtilService.html":{}}}],["templateid",{"_index":476,"title":{},"body":{"injectables/EmailService.html":{}}}],["templateparameter",{"_index":1246,"title":{},"body":{"injectables/UtilService.html":{},"miscellaneous/typealiases.html":{}}}],["templatestringsarray",{"_index":1244,"title":{},"body":{"injectables/UtilService.html":{}}}],["temporal",{"_index":357,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"miscellaneous/enumerations.html":{}}}],["temporary",{"_index":356,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"miscellaneous/enumerations.html":{}}}],["terminusmodule",{"_index":406,"title":{},"body":{"modules/BaseModule.html":{},"modules/RestModule.html":{}}}],["tests",{"_index":1627,"title":{},"body":{"index.html":{}}}],["tests/.../farm.test.ts",{"_index":1686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests/repositories/farm.test.ts",{"_index":1486,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tests:covsupport",{"_index":1630,"title":{},"body":{"index.html":{}}}],["tests:e2e",{"_index":1629,"title":{},"body":{"index.html":{}}}],["text.replace(/^\\s+/gm",{"_index":1259,"title":{},"body":{"injectables/UtilService.html":{}}}],["thanks",{"_index":1636,"title":{},"body":{"index.html":{}}}],["this.auth.createaccount(account",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.auth.getpayload(token",{"_index":1049,"title":{},"body":{"injectables/LoggerContextMiddleware.html":{}}}],["this.authservice.getpayload(authtoken",{"_index":1174,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.configservice.get('verification_template_id",{"_index":477,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.emailservice.send(data",{"_index":485,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.emailservice.sendverificationemail(account.email",{"_index":108,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.farmcollection",{"_index":829,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["this.farmcollection.doc(data.farmid",{"_index":856,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["this.farmcollection.doc(farmid",{"_index":841,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["this.farmcollection.doc(farmid).get",{"_index":844,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["this.farmcollection.doc(filter.value).get",{"_index":825,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["this.farmcollection.doc(lastdoc).get",{"_index":805,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["this.farmcollection.get",{"_index":809,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["this.farmcollection.limit(limit",{"_index":798,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["this.farmservice.createfarm(data",{"_index":656,"title":{},"body":{"controllers/FarmController.html":{}}}],["this.farmservice.getallfarms(paginationparams",{"_index":647,"title":{},"body":{"controllers/FarmController.html":{}}}],["this.farmservice.getfarmbyid(filter",{"_index":649,"title":{},"body":{"controllers/FarmController.html":{}}}],["this.farmservice.getfarmbyownerid(sort",{"_index":653,"title":{},"body":{"controllers/FarmController.html":{}}}],["this.farmservice.linkowner(data",{"_index":665,"title":{},"body":{"controllers/FarmController.html":{}}}],["this.farmservice.linkworker(data",{"_index":672,"title":{},"body":{"controllers/FarmController.html":{}}}],["this.farmservice.unlinkowner(data",{"_index":668,"title":{},"body":{"controllers/FarmController.html":{}}}],["this.farmservice.unlinkworker(data",{"_index":675,"title":{},"body":{"controllers/FarmController.html":{}}}],["this.gethttpstatus(exception",{"_index":527,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["this.getrequest(context",{"_index":324,"title":{},"body":{"guards/AuthenticatedGuard.html":{}}}],["this.health.check",{"_index":1025,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck('dns",{"_index":1026,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.isobject(sourcevalue",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.isobject(targetvalue",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.logger.assign(req.customprops",{"_index":1061,"title":{},"body":{"injectables/LoggerContextMiddleware.html":{}}}],["this.logger.error",{"_index":530,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["this.logger.error('unhandledexception",{"_index":533,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["this.logger.error(`error",{"_index":491,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.logger.info",{"_index":486,"title":{},"body":{"injectables/EmailService.html":{},"injectables/FarmService.html":{},"controllers/WorkerController.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{}}}],["this.logger.info('create",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{},"injectables/OwnerRepository.html":{}}}],["this.logger.info('createaccount",{"_index":81,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.logger.info('creating",{"_index":655,"title":{},"body":{"controllers/FarmController.html":{}}}],["this.logger.info('farm",{"_index":877,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["this.logger.info('farmid",{"_index":884,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["this.logger.info('get",{"_index":1311,"title":{},"body":{"controllers/WorkerController.html":{}}}],["this.logger.info('owner",{"_index":1102,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["this.logger.info('ownerid",{"_index":880,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["this.logger.info('send",{"_index":471,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.logger.info('user",{"_index":93,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.logger.info(`[farm",{"_index":835,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["this.logger.info(`[workers",{"_index":1436,"title":{},"body":{"injectables/WorkerService.html":{}}}],["this.logger.info(`create",{"_index":837,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["this.logger.info(`farm",{"_index":827,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/FarmService.html":{}}}],["this.logger.info(`farms",{"_index":912,"title":{},"body":{"injectables/FarmService.html":{}}}],["this.logger.info(`filtering",{"_index":1377,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["this.logger.info(`get",{"_index":822,"title":{},"body":{"injectables/FarmRepository.html":{},"controllers/WorkerController.html":{}}}],["this.logger.info(`link",{"_index":855,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["this.logger.info(`linking",{"_index":661,"title":{},"body":{"controllers/FarmController.html":{}}}],["this.logger.info(`pagination",{"_index":909,"title":{},"body":{"injectables/FarmService.html":{},"injectables/WorkerRepository.html":{}}}],["this.logger.info(`set",{"_index":100,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.logger.info(`sorting",{"_index":1378,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["this.logger.info(`unlink",{"_index":876,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["this.logger.info(`user",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{},"injectables/OwnerRepository.html":{}}}],["this.logger.info(`verification",{"_index":106,"title":{},"body":{"injectables/AccountService.html":{},"injectables/EmailService.html":{}}}],["this.logger.info(`worker",{"_index":1387,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["this.logger.info(json.stringify(data",{"_index":1395,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["this.mapper.map(data",{"_index":836,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/OwnerRepository.html":{},"injectables/WorkerRepository.html":{}}}],["this.mapper.map(worker",{"_index":1386,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["this.mapper.maparray(workers",{"_index":1374,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["this.merge(targetvalue",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.reflector.get('ispublic",{"_index":322,"title":{},"body":{"guards/AuthenticatedGuard.html":{}}}],["this.reflector.getallandoverride(roles_key",{"_index":1165,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.repository.createfarm(data",{"_index":913,"title":{},"body":{"injectables/FarmService.html":{}}}],["this.repository.createowner(data",{"_index":1237,"title":{},"body":{"injectables/UserService.html":{}}}],["this.repository.createworker(data",{"_index":1439,"title":{},"body":{"injectables/WorkerService.html":{}}}],["this.repository.getallfarms(pagination",{"_index":908,"title":{},"body":{"injectables/FarmService.html":{}}}],["this.repository.getallworkerbyfarmid(pagination",{"_index":1437,"title":{},"body":{"injectables/WorkerService.html":{}}}],["this.repository.getallworkers(pagination",{"_index":1435,"title":{},"body":{"injectables/WorkerService.html":{}}}],["this.repository.getfarm(filter",{"_index":910,"title":{},"body":{"injectables/FarmService.html":{}}}],["this.repository.getfarmbyowner(sort",{"_index":911,"title":{},"body":{"injectables/FarmService.html":{}}}],["this.repository.getworker(filter",{"_index":1438,"title":{},"body":{"injectables/WorkerService.html":{}}}],["this.repository.linkownerwithfarm(data",{"_index":914,"title":{},"body":{"injectables/FarmService.html":{}}}],["this.repository.linkworker(data",{"_index":916,"title":{},"body":{"injectables/FarmService.html":{}}}],["this.repository.unlinkowner(data",{"_index":915,"title":{},"body":{"injectables/FarmService.html":{}}}],["this.repository.unlinkworker(data",{"_index":917,"title":{},"body":{"injectables/FarmService.html":{}}}],["this.repository.updateworkinfo(data",{"_index":1440,"title":{},"body":{"injectables/WorkerService.html":{}}}],["this.request.user.farmid).get",{"_index":1109,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["this.service.createworker(data",{"_index":1319,"title":{},"body":{"controllers/WorkerController.html":{}}}],["this.service.getall(pagination",{"_index":1312,"title":{},"body":{"controllers/WorkerController.html":{}}}],["this.service.getallworkerbyfarm(pagination",{"_index":1315,"title":{},"body":{"controllers/WorkerController.html":{}}}],["this.service.getworker(filter",{"_index":1317,"title":{},"body":{"controllers/WorkerController.html":{}}}],["this.service.updateworkinfo(data",{"_index":1322,"title":{},"body":{"controllers/WorkerController.html":{}}}],["this.template(templatedata",{"_index":1261,"title":{},"body":{"injectables/UtilService.html":{}}}],["this.user.createaccount(account",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usercollection.doc(data.ownerid",{"_index":858,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["this.usercollection.doc(id).get",{"_index":1113,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["this.usercollection.doc(useraccount.uid",{"_index":1098,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["this.usercollection.where('farmid",{"_index":1108,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["this.workercollection",{"_index":1380,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["this.workercollection.doc(data.workerid",{"_index":887,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["this.workercollection.doc(lastdoc).get",{"_index":1368,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["this.workercollection.doc(workerid).get",{"_index":1392,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["this.workercollection.doc(workerid).set(workerinfo",{"_index":1391,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["this.workercollection.get",{"_index":1370,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["this.workercollection.limit(limit",{"_index":1366,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["throw",{"_index":432,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/Filtering.html":{},"injectables/OwnerRepository.html":{},"guards/RolesGuard.html":{},"interfaces/Sorting.html":{},"miscellaneous/variables.html":{}}}],["tiempo",{"_index":350,"title":{},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"miscellaneous/enumerations.html":{}}}],["time",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timestamp",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timonmasberg/automapper",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"classes/FarmMapperProfile.html":{},"injectables/FarmRepository.html":{},"injectables/OwnerRepository.html":{},"classes/WorkerMapperProfile.html":{},"injectables/WorkerRepository.html":{},"dependencies.html":{}}}],["todos",{"_index":848,"title":{},"body":{"injectables/FarmRepository.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoggerContextMiddleware.html":{},"guards/RolesGuard.html":{}}}],["tood",{"_index":846,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["total",{"_index":1123,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationBuilder.html":{}}}],["totalpages",{"_index":1124,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationBuilder.html":{}}}],["totalpropertyarea",{"_index":546,"title":{},"body":{"classes/Farm.html":{},"classes/FarmDto.html":{}}}],["touch",{"_index":1648,"title":{},"body":{"index.html":{}}}],["trabajador",{"_index":892,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["transform",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"classes/FarmDto.html":{},"miscellaneous/variables.html":{}}}],["transformer",{"_index":721,"title":{},"body":{"classes/FarmDto.html":{},"dependencies.html":{}}}],["transport",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trim",{"_index":1172,"title":{},"body":{"guards/RolesGuard.html":{},"injectables/UtilService.html":{}}}],["true",{"_index":158,"title":{},"body":{"classes/ApiResponseBuilder.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"injectables/ConfigService.html":{},"classes/CreateOwnerDto.html":{},"injectables/EmailService.html":{},"injectables/FarmRepository.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"classes/UserDto.html":{},"classes/WorkerDto.html":{},"miscellaneous/variables.html":{}}}],["true})@automap",{"_index":1215,"title":{},"body":{"classes/UserDto.html":{}}}],["try",{"_index":82,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthSerializer.html":{},"injectables/EmailService.html":{},"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{}}}],["ts",{"_index":1008,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"injectables/LoggerContextMiddleware.html":{}}}],["twitter",{"_index":1654,"title":{},"body":{"index.html":{}}}],["type",{"_index":16,"title":{},"body":{"interfaces/Account.html":{},"interfaces/Account-1.html":{},"injectables/AccountService.html":{},"classes/ApiResponseBuilder.html":{},"controllers/AuthController.html":{},"injectables/AuthSerializer.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/BaseModel.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"classes/CreateOwnerDto.html":{},"injectables/EmailService.html":{},"classes/ExceptionsFilter.html":{},"classes/Farm.html":{},"controllers/FarmController.html":{},"classes/FarmDto.html":{},"classes/FarmMapperProfile.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"interfaces/Filtering.html":{},"classes/FirebaseAuthStrategy.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{},"injectables/GqlAuthGuard.html":{},"classes/LinkFarmOwnerDto.html":{},"classes/LinkFarmWorkerDto.html":{},"injectables/LoggerContextMiddleware.html":{},"classes/Owner.html":{},"injectables/OwnerRepository.html":{},"classes/PaginatedResponseData.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"classes/Payload.html":{},"classes/Response.html":{},"guards/RolesGuard.html":{},"classes/SalaryHistory.html":{},"classes/SalaryHistoryDto.html":{},"interfaces/Sorting.html":{},"classes/UnlinkFarmOwnerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"injectables/UtilService.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerBenefitsDto.html":{},"controllers/WorkerController.html":{},"classes/WorkerDto.html":{},"classes/WorkerMapperProfile.html":{},"injectables/WorkerRepository.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"classes/WorkerSalaryDeductionsDto.html":{},"classes/WorkerSalaryDto.html":{},"injectables/WorkerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1674,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types",{"_index":924,"title":{},"body":{"interfaces/Filtering.html":{},"interfaces/Sorting.html":{},"dependencies.html":{}}}],["typescript",{"_index":514,"title":{},"body":{"classes/ExceptionsFilter.html":{},"injectables/FarmRepository.html":{},"injectables/GqlAuthGuard.html":{},"injectables/LoggerContextMiddleware.html":{},"injectables/UtilService.html":{},"index.html":{}}}],["u",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uid",{"_index":21,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountService.html":{},"injectables/LoggerContextMiddleware.html":{}}}],["unauthorizedexception",{"_index":1163,"title":{},"body":{"guards/RolesGuard.html":{}}}],["unauthorizedexception('please",{"_index":1169,"title":{},"body":{"guards/RolesGuard.html":{}}}],["undefined",{"_index":22,"title":{},"body":{"interfaces/Account.html":{},"classes/ApiResponseBuilder.html":{},"injectables/ConfigService.html":{},"injectables/FarmRepository.html":{},"injectables/LoggerContextMiddleware.html":{},"classes/Pagination.html":{},"classes/PaginationBuilder.html":{},"interfaces/Sorting.html":{},"injectables/UtilService.html":{},"injectables/WorkerRepository.html":{}}}],["unit",{"_index":1626,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":283,"title":{},"body":{"injectables/AuthSerializer.html":{},"classes/ExceptionsFilter.html":{},"injectables/UtilService.html":{},"miscellaneous/variables.html":{}}}],["unlink",{"_index":851,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["unlinkfarmownerdto",{"_index":610,"title":{"classes/UnlinkFarmOwnerDto.html":{}},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"classes/UnlinkFarmOwnerDto.html":{},"coverage.html":{}}}],["unlinkfarmworkerdto",{"_index":614,"title":{"classes/UnlinkFarmWorkerDto.html":{}},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{},"classes/UnlinkFarmWorkerDto.html":{},"coverage.html":{}}}],["unlinkowner",{"_index":580,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{}}}],["unlinkowner(@body",{"_index":667,"title":{},"body":{"controllers/FarmController.html":{}}}],["unlinkowner(data",{"_index":609,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{}}}],["unlinkworker",{"_index":581,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{}}}],["unlinkworker(@body",{"_index":674,"title":{},"body":{"controllers/FarmController.html":{}}}],["unlinkworker(data",{"_index":613,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{}}}],["unnecessary",{"_index":1052,"title":{},"body":{"injectables/LoggerContextMiddleware.html":{}}}],["unsafe",{"_index":516,"title":{},"body":{"classes/ExceptionsFilter.html":{},"injectables/FarmRepository.html":{},"injectables/GqlAuthGuard.html":{}}}],["update",{"_index":1078,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["updatedat",{"_index":393,"title":{},"body":{"classes/BaseModel.html":{},"classes/Farm.html":{},"classes/Worker.html":{}}}],["updateworkerinfo",{"_index":1288,"title":{},"body":{"controllers/WorkerController.html":{}}}],["updateworkerinfo(@body",{"_index":1320,"title":{},"body":{"controllers/WorkerController.html":{}}}],["updateworkerinfo(data",{"_index":1302,"title":{},"body":{"controllers/WorkerController.html":{}}}],["updateworkinfo",{"_index":1355,"title":{},"body":{"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{}}}],["updateworkinfo(data",{"_index":1362,"title":{},"body":{"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{}}}],["use",{"_index":1038,"title":{},"body":{"injectables/LoggerContextMiddleware.html":{}}}],["use(req",{"_index":1040,"title":{},"body":{"injectables/LoggerContextMiddleware.html":{}}}],["useclass",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"modules/FirestoreModule.html":{},"interfaces/FirestoreModuleOptions.html":{}}}],["useguards",{"_index":635,"title":{},"body":{"controllers/FarmController.html":{},"controllers/WorkerController.html":{}}}],["useguards(firebaseauthguard",{"_index":641,"title":{},"body":{"controllers/FarmController.html":{},"controllers/WorkerController.html":{}}}],["useguards(rolesguard",{"_index":644,"title":{},"body":{"controllers/FarmController.html":{},"controllers/WorkerController.html":{}}}],["user",{"_index":103,"title":{"classes/User.html":{}},"body":{"injectables/AccountService.html":{},"injectables/AuthSerializer.html":{},"injectables/AuthService.html":{},"injectables/FarmRepository.html":{},"injectables/LoggerContextMiddleware.html":{},"classes/Owner.html":{},"injectables/OwnerRepository.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.customclaims?.['roles",{"_index":116,"title":{},"body":{"injectables/AccountService.html":{}}}],["user.decorator.ts",{"_index":1465,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.displayname",{"_index":118,"title":{},"body":{"injectables/AccountService.html":{}}}],["user.email",{"_index":117,"title":{},"body":{"injectables/AccountService.html":{}}}],["user.exists",{"_index":862,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["user.uid",{"_index":115,"title":{},"body":{"injectables/AccountService.html":{}}}],["user:11",{"_index":1068,"title":{},"body":{"classes/Owner.html":{}}}],["user:14",{"_index":1065,"title":{},"body":{"classes/Owner.html":{}}}],["user:17",{"_index":1066,"title":{},"body":{"classes/Owner.html":{}}}],["user:20",{"_index":1070,"title":{},"body":{"classes/Owner.html":{}}}],["user:23",{"_index":1069,"title":{},"body":{"classes/Owner.html":{}}}],["user:26",{"_index":1064,"title":{},"body":{"classes/Owner.html":{}}}],["user:29",{"_index":1063,"title":{},"body":{"classes/Owner.html":{}}}],["user:32",{"_index":1071,"title":{},"body":{"classes/Owner.html":{}}}],["user:8",{"_index":1067,"title":{},"body":{"classes/Owner.html":{}}}],["user_name",{"_index":109,"title":{},"body":{"injectables/AccountService.html":{}}}],["useraccount",{"_index":84,"title":{},"body":{"injectables/AccountService.html":{},"injectables/OwnerRepository.html":{}}}],["useraccount.displayname",{"_index":110,"title":{},"body":{"injectables/AccountService.html":{}}}],["useraccount.uid",{"_index":96,"title":{},"body":{"injectables/AccountService.html":{},"injectables/OwnerRepository.html":{}}}],["usercollection",{"_index":760,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/OwnerRepository.html":{}}}],["userdto",{"_index":1211,"title":{"classes/UserDto.html":{}},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["userid",{"_index":95,"title":{},"body":{"injectables/AccountService.html":{},"classes/Payload.html":{}}}],["username",{"_index":1138,"title":{},"body":{"classes/Payload.html":{},"miscellaneous/variables.html":{}}}],["userref",{"_index":857,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["userref.get",{"_index":861,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["userref.update",{"_index":865,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["users",{"_index":1562,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":1229,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["usevalue",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["usuario",{"_index":868,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["util",{"_index":1470,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["util.merge(config",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utilservice",{"_index":1238,"title":{"injectables/UtilService.html":{}},"body":{"injectables/UtilService.html":{},"coverage.html":{}}}],["valid",{"_index":927,"title":{},"body":{"interfaces/Filtering.html":{},"miscellaneous/variables.html":{}}}],["validate",{"_index":944,"title":{},"body":{"interfaces/Filtering.html":{},"classes/FirebaseAuthStrategy.html":{},"miscellaneous/variables.html":{}}}],["validate(payload",{"_index":973,"title":{},"body":{"classes/FirebaseAuthStrategy.html":{}}}],["validationpipe",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":401,"title":{},"body":{"classes/BaseModel.html":{},"classes/CreateOwnerDto.html":{},"classes/FarmDto.html":{},"classes/LinkFarmOwnerDto.html":{},"classes/LinkFarmWorkerDto.html":{},"classes/UnlinkFarmOwnerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{},"classes/UserDto.html":{},"classes/WorkerDto.html":{},"dependencies.html":{}}}],["validparams.includes(property",{"_index":1198,"title":{},"body":{"interfaces/Sorting.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":141,"title":{},"body":{"classes/ApiResponseBuilder.html":{},"classes/BankInfo.html":{},"classes/BankInfoDto.html":{},"classes/BaseModel.html":{},"injectables/ConfigService.html":{},"injectables/EmailService.html":{},"classes/ExceptionsFilter.html":{},"classes/Farm.html":{},"classes/FarmDto.html":{},"interfaces/Filtering.html":{},"classes/Owner.html":{},"classes/PaginationBuilder.html":{},"classes/Payload.html":{},"classes/User.html":{},"injectables/UtilService.html":{},"classes/Worker.html":{},"classes/WorkerDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1448,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":519,"title":{"miscellaneous/variables.html":{}},"body":{"classes/ExceptionsFilter.html":{},"miscellaneous/variables.html":{}}}],["verificar",{"_index":847,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["verification",{"_index":472,"title":{},"body":{"injectables/EmailService.html":{}}}],["verification_link",{"_index":111,"title":{},"body":{"injectables/AccountService.html":{}}}],["version",{"_index":1667,"title":{},"body":{"properties.html":{}}}],["versioningtype.uri",{"_index":1707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vet",{"_index":1586,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["veterinarian",{"_index":1587,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["vinculado",{"_index":871,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["void",{"_index":273,"title":{},"body":{"injectables/AuthSerializer.html":{},"modules/CommonModule.html":{},"classes/ExceptionsFilter.html":{},"injectables/LoggerContextMiddleware.html":{}}}],["watch",{"_index":1621,"title":{},"body":{"index.html":{}}}],["website",{"_index":1652,"title":{},"body":{"index.html":{}}}],["weightmeasurement",{"_index":547,"title":{},"body":{"classes/Farm.html":{},"classes/FarmDto.html":{}}}],["weightmeasurementunit",{"_index":710,"title":{},"body":{"classes/FarmDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["weightmeasurementunitresolver",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["where(filter.property",{"_index":832,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{}}}],["wherefilterop",{"_index":922,"title":{},"body":{"interfaces/Filtering.html":{}}}],["whitecloak/nestjs",{"_index":257,"title":{},"body":{"modules/AuthModule.html":{},"controllers/FarmController.html":{},"classes/FirebaseAuthStrategy.html":{},"injectables/GqlAuthGuard.html":{},"controllers/WorkerController.html":{},"dependencies.html":{}}}],["whitelist",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["witherror",{"_index":130,"title":{},"body":{"classes/ApiResponseBuilder.html":{}}}],["witherror(code",{"_index":143,"title":{},"body":{"classes/ApiResponseBuilder.html":{}}}],["worker",{"_index":377,"title":{"classes/Worker.html":{}},"body":{"classes/BankInfo.html":{},"injectables/FarmRepository.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"controllers/WorkerController.html":{},"classes/WorkerMapperProfile.html":{},"injectables/WorkerRepository.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["worker.dto",{"_index":630,"title":{},"body":{"controllers/FarmController.html":{},"injectables/FarmRepository.html":{},"injectables/FarmService.html":{}}}],["worker.dto.ts",{"_index":1032,"title":{},"body":{"classes/LinkFarmWorkerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{},"coverage.html":{}}}],["worker.dto.ts:10",{"_index":1034,"title":{},"body":{"classes/LinkFarmWorkerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{}}}],["worker.dto.ts:6",{"_index":1035,"title":{},"body":{"classes/LinkFarmWorkerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{}}}],["worker.exists",{"_index":889,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["workerbenefits",{"_index":362,"title":{"classes/WorkerBenefits.html":{}},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"coverage.html":{}}}],["workerbenefitsdto",{"_index":1279,"title":{"classes/WorkerBenefitsDto.html":{}},"body":{"classes/WorkerBenefitsDto.html":{},"classes/WorkerSalaryDto.html":{},"coverage.html":{}}}],["workercollection",{"_index":758,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{}}}],["workercontroller",{"_index":1153,"title":{"controllers/WorkerController.html":{}},"body":{"modules/RestModule.html":{},"controllers/WorkerController.html":{},"coverage.html":{}}}],["workerdata",{"_index":1388,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["workerdto",{"_index":1290,"title":{"classes/WorkerDto.html":{}},"body":{"controllers/WorkerController.html":{},"classes/WorkerDto.html":{},"classes/WorkerMapperProfile.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{},"coverage.html":{}}}],["workerid",{"_index":1033,"title":{},"body":{"classes/LinkFarmWorkerDto.html":{},"classes/UnlinkFarmWorkerDto.html":{},"injectables/WorkerRepository.html":{}}}],["workerinfo",{"_index":1390,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["workermapperprofile",{"_index":1155,"title":{"classes/WorkerMapperProfile.html":{}},"body":{"modules/RestModule.html":{},"classes/WorkerMapperProfile.html":{},"coverage.html":{}}}],["workerref",{"_index":886,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["workerref.get",{"_index":888,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["workerref.update",{"_index":891,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["workerrepository",{"_index":1151,"title":{"injectables/WorkerRepository.html":{}},"body":{"modules/RestModule.html":{},"injectables/WorkerRepository.html":{},"injectables/WorkerService.html":{},"coverage.html":{},"overview.html":{}}}],["workers",{"_index":548,"title":{},"body":{"classes/Farm.html":{},"injectables/FarmRepository.html":{},"injectables/OwnerRepository.html":{},"injectables/WorkerRepository.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["workers.push(worker.data",{"_index":1111,"title":{},"body":{"injectables/OwnerRepository.html":{}}}],["workersalary",{"_index":370,"title":{"classes/WorkerSalary.html":{}},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"coverage.html":{}}}],["workersalarydeduction",{"_index":367,"title":{"classes/WorkerSalaryDeduction.html":{}},"body":{"classes/BankInfo.html":{},"classes/SalaryHistory.html":{},"classes/Worker.html":{},"classes/WorkerBenefits.html":{},"classes/WorkerSalary.html":{},"classes/WorkerSalaryDeduction.html":{},"coverage.html":{}}}],["workersalarydeductionsdto",{"_index":1407,"title":{"classes/WorkerSalaryDeductionsDto.html":{}},"body":{"classes/WorkerSalaryDeductionsDto.html":{},"classes/WorkerSalaryDto.html":{},"coverage.html":{}}}],["workersalarydto",{"_index":1344,"title":{"classes/WorkerSalaryDto.html":{}},"body":{"classes/WorkerDto.html":{},"classes/WorkerSalaryDto.html":{},"coverage.html":{}}}],["workersdto",{"_index":1373,"title":{},"body":{"injectables/WorkerRepository.html":{}}}],["workerservice",{"_index":1150,"title":{"injectables/WorkerService.html":{}},"body":{"modules/RestModule.html":{},"controllers/WorkerController.html":{},"injectables/WorkerService.html":{},"coverage.html":{},"overview.html":{}}}],["y",{"_index":850,"title":{},"body":{"injectables/FarmRepository.html":{}}}],["yes",{"_index":766,"title":{},"body":{"injectables/FarmRepository.html":{},"injectables/WorkerRepository.html":{}}}],["you'd",{"_index":1641,"title":{},"body":{"index.html":{}}}],["z0",{"_index":952,"title":{},"body":{"interfaces/Filtering.html":{},"interfaces/Sorting.html":{},"miscellaneous/variables.html":{}}}],["za",{"_index":951,"title":{},"body":{"interfaces/Filtering.html":{},"interfaces/Sorting.html":{},"miscellaneous/variables.html":{}}}],["zoom",{"_index":44,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RestModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Account.html":{"url":"interfaces/Account.html","title":"interface - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            blackListed\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blackListed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blackListed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Account {\n  email: string;\n  blackListed: boolean;\n  name: string;\n  roles: string[];\n  password: string;\n  phone: string;\n}\n\nexport interface Payload {\n  uid: string;\n  email: string;\n  name: string;\n  roles: string[] | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Account-1.html":{"url":"interfaces/Account-1.html","title":"interface - Account-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/user/account.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phone\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Account {\n  id: string;\n  name?: string;\n  email?: string;\n  phone?: string;\n  picture?: string;\n  roles: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountModule.html":{"url":"modules/AccountModule.html","title":"module - AccountModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_providers\n\n\n\ncluster_AccountModule_exports\n\n\n\n\nAccountService \n\nAccountService \n\n\n\nEmailService \n\nEmailService \n\n\n\nAccountModule\n\nAccountModule\n\nAccountService  -->\n\nAccountModule->AccountService \n\n\n\nEmailService  -->\n\nAccountModule->EmailService \n\n\n\n\n\nAccountService\n\nAccountService\n\nAccountModule -->\n\nAccountService->AccountModule\n\n\n\n\n\nEmailService\n\nEmailService\n\nAccountModule -->\n\nEmailService->AccountModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/user/account.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountService\n                        \n                        \n                            EmailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccountService\n                        \n                        \n                            EmailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { AccountService } from './account.service';\nimport { EmailService } from '../../core/email.service';\n\n@Module({\n  providers: [AccountService, EmailService],\n  exports: [AccountService, EmailService],\n})\nexport class AccountModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountService.html":{"url":"injectables/AccountService.html","title":"injectable - AccountService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/user/account.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createAccount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: PinoLogger, emailService: EmailService)\n                    \n                \n                        \n                            \n                                Defined in src/shared/user/account.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    PinoLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                        EmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAccount(account: Account)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/user/account.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                account\n                                            \n                                                            Account\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Account, Payload } from '@auth/auth.interface';\nimport { Injectable } from '@nestjs/common';\nimport { auth } from 'firebase-admin';\nimport { InjectPinoLogger, PinoLogger } from 'nestjs-pino';\n\nimport { EmailService } from '../../core/email.service';\n\n@Injectable()\nexport class AccountService {\n  constructor(\n    @InjectPinoLogger('AccountService') private readonly logger: PinoLogger,\n    private readonly emailService: EmailService,\n  ) {}\n\n  public async createAccount(account: Account): Promise {\n    this.logger.info('createAccount()');\n    try {\n      const userAccount = await auth().createUser({\n        password: account.password,\n        email: account.email,\n        phoneNumber: account.phone,\n        displayName: account.name,\n      });\n      this.logger.info('User created');\n\n      const userId = userAccount.uid;\n      await auth().setCustomUserClaims(userId, {\n        blackListed: account.blackListed,\n        roles: account.roles,\n      });\n      this.logger.info(`Set custom claims to user ${userId}`);\n\n      const emailLink = await auth().generateEmailVerificationLink(userAccount.email ?? '');\n      this.logger.info(`Verification Link => ${emailLink}`);\n      await this.emailService.sendVerificationEmail(account.email, {\n        user_name: userAccount.displayName,\n        verification_link: emailLink,\n      });\n\n      const user: auth.UserRecord = await auth().getUser(userId);\n      return {\n        uid: user.uid,\n        roles: user.customClaims?.['roles'],\n        name: user.email ?? user.displayName ?? '',\n        email: user.email ?? '',\n      };\n    } catch (e: any) {\n      return Promise.reject(new Error(e.message));\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiResponseBuilder.html":{"url":"classes/ApiResponseBuilder.html","title":"class - ApiResponseBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiResponseBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/response/api-response.builder.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                notFound\n                            \n                            \n                                    Static\n                                success\n                            \n                            \n                                    Static\n                                withError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        notFound\n                        \n                    \n                \n            \n            \n                \n                        \n                    notFound()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/response/api-response.builder.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { message: string; data: any; status: number; success: boolean; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        success\n                        \n                    \n                \n            \n            \n                \n                        \n                    success(status: number, message: string, data: T | undefined, pagination: Pagination | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/response/api-response.builder.ts:25\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                data\n                                            \n                                                        T | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                pagination\n                                            \n                                                            Pagination | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Response\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        withError\n                        \n                    \n                \n            \n            \n                \n                        \n                    withError(code: number, message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/response/api-response.builder.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { message: string; data: any; success: boolean; status: number; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Pagination } from '../pagination.model';\nimport { Response } from '../response.model';\n\nexport class ApiResponseBuilder {\n  static notFound() {\n    return {\n      message: 'Datos no encontrados',\n      data: undefined,\n      status: 404,\n      success: false,\n    };\n  }\n\n  static withError(code: number, message: string) {\n    return {\n      message,\n      data: undefined,\n      success: false,\n      status: code,\n    };\n  }\n\n  // eslint-disable-next-line max-params\n  static success(\n    status: number,\n    message: string,\n    data: T | undefined,\n    pagination: Pagination | undefined = undefined,\n  ): Response {\n    return {\n      success: true,\n      status,\n      message,\n      data: {\n        pagination,\n        result: data,\n      },\n    };\n  }\n  // eslint-disable-next-line max-params\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBaseModule\n\nBaseModule\n\nAppModule -->\n\nBaseModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nFirestoreModule\n\nFirestoreModule\n\nAppModule -->\n\nFirestoreModule->AppModule\n\n\n\n\n\nRestModule\n\nRestModule\n\nAppModule -->\n\nRestModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            BaseModule\n                        \n                        \n                            CommonModule\n                        \n                        \n                            FirestoreModule\n                        \n                        \n                            RestModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { classes } from '@automapper/classes';\nimport { FirestoreModule } from '@common/db/firestore.module';\nimport { Module, ValidationPipe } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { APP_FILTER, APP_PIPE } from '@nestjs/core';\nimport { SendGridModule } from '@ntegral/nestjs-sendgrid';\nimport { AutomapperModule } from '@timonmasberg/automapper-nestjs';\nimport { LoggerModule } from 'nestjs-pino';\n\nimport { AuthModule } from './auth';\nimport { BaseModule } from './base';\nimport { CommonModule, ExceptionsFilter } from './common';\nimport { configuration, loggerOptions } from './config';\nimport { RestModule } from './rest';\n\n@Module({\n  imports: [\n    LoggerModule.forRoot(loggerOptions),\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [configuration],\n    }),\n    SendGridModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (cfg: ConfigService) =>\n        Promise.resolve({\n          apiKey: cfg.get('MAIL_API_KEY') ?? '',\n        }),\n      inject: [ConfigService],\n    }),\n    FirestoreModule.forRoot({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        ignoreUndefinedProperties: true,\n        projectId: configService.get('PROJECT_ID'),\n        credentials: {\n          private_key: configService.get('PRIVATE_KEY'),\n          client_email: configService.get('CLIENT_EMAIL'),\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    AutomapperModule.forRoot({\n      strategyInitializer: classes(),\n    }),\n    AuthModule,\n    CommonModule,\n    BaseModule,\n    RestModule,\n  ],\n  providers: [\n    { provide: APP_FILTER, useClass: ExceptionsFilter },\n    {\n      provide: APP_PIPE,\n      useValue: new ValidationPipe({\n        transform: true,\n        whitelist: true,\n      }),\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/controllers/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Async\n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Async\n                        registerUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerUser(account: Account)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/base/controllers/auth.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                account\n                                            \n                                                            Account\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body } from '@nestjs/common';\nimport { InjectPinoLogger, PinoLogger } from 'nestjs-pino';\n\nimport { Account, AuthService, Payload } from '../../auth';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    @InjectPinoLogger('Auth') private readonly logger: PinoLogger,\n    private auth: AuthService,\n  ) {}\n\n  @Post('register')\n  public async registerUser(@Body() account: Account): Promise {\n    this.logger.info('Create account');\n    const response = await this.auth.createAccount(account);\n    this.logger.info(`User account created => ${JSON.stringify(response, null, 2)}`);\n    return response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAccountModule\n\nAccountModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAccountModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthSerializer\n\nAuthSerializer\n\nAuthModule -->\n\nAuthSerializer->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthSerializer\n                        \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccountModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AuthSerializer } from '@auth/auth.serializer';\nimport { AuthService } from '@auth/auth.service';\nimport { FirebaseAuthStrategy } from '@auth/strategies/firebase-auth.strategy';\nimport { configuration } from '@config/configuration';\nimport { Global, Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { SendGridModule } from '@ntegral/nestjs-sendgrid';\nimport { AccountModule } from '@shared/user';\nimport { FirebaseAuthModule } from '@whitecloak/nestjs-passport-firebase';\n\n@Global()\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [configuration],\n    }),\n    FirebaseAuthModule.register({\n      audience: process.env.AUDIENCE,\n      issuer: process.env.ISSUER,\n    }),\n    SendGridModule,\n    AccountModule,\n  ],\n  providers: [AuthService, AuthSerializer, FirebaseAuthStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthSerializer.html":{"url":"injectables/AuthSerializer.html","title":"injectable - AuthSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.serializer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deserializeUser\n                            \n                            \n                                    Public\n                                serializeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deserializeUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deserializeUser(data: Payload, done: (error: Error | null,user: Payload) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.serializer.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Payload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                done\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        serializeUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    serializeUser(user: Payload, done: (error: Error | null,data: Payload) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.serializer.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Payload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                done\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportSerializer } from '@nestjs/passport';\n\nimport type { Payload } from './auth.interface';\n\n@Injectable()\nexport class AuthSerializer extends PassportSerializer {\n  public serializeUser(user: Payload, done: (error: Error | null, data?: Payload) => void): void {\n    done(null, user);\n  }\n\n  public deserializeUser(data: Payload, done: (error: Error | null, user?: Payload) => void): void {\n    try {\n      // const user = await fetchMore();\n      done(null, data);\n    } catch (error: unknown) {\n      done(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createAccount\n                            \n                            \n                                    Public\n                                    Async\n                                getPayload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(user: AccountService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAccount(account: Account)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                account\n                                            \n                                                            Account\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getPayload\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPayload(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AccountService } from '@shared/user';\nimport { auth } from 'firebase-admin';\n\nimport type { Account, Payload } from './auth.interface';\n\n@Injectable()\nexport class AuthService {\n  constructor(private user: AccountService) {}\n\n  public async createAccount(account: Account): Promise {\n    return this.user.createAccount(account);\n  }\n\n  public async getPayload(token: string): Promise {\n    const decodedToken = await auth().verifyIdToken(token, true);\n    return {\n      ...decodedToken,\n      roles: decodedToken['roles'],\n      name: decodedToken['name'],\n      email: decodedToken.email ?? '',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticatedGuard.html":{"url":"guards/AuthenticatedGuard.html","title":"guard - AuthenticatedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticatedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/authenticated.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canActivate\n                            \n                            \n                                    Public\n                                getRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/authenticated.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/authenticated.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRequest(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/authenticated.guard.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Request\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { GqlContextType, GqlExecutionContext } from '@nestjs/graphql';\nimport type { Request } from 'express';\n\n@Injectable()\nexport class AuthenticatedGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  public canActivate(context: ExecutionContext): boolean {\n    const isPublic = this.reflector.get('isPublic', context.getHandler());\n    if (isPublic) return true;\n\n    const request: Request = this.getRequest(context);\n    return request.isAuthenticated();\n  }\n\n  public getRequest(context: ExecutionContext): Request {\n    if (context.getType() === 'graphql') {\n      const ctx = GqlExecutionContext.create(context).getContext();\n      return ctx.req;\n    }\n\n    return context.switchToHttp().getRequest();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BankInfo.html":{"url":"classes/BankInfo.html","title":"class - BankInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BankInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/models/worker.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                accountNumber\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                bankName\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                hasDebitCardAvailable\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                isActive\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                isPrincipal\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        accountNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        bankName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        hasDebitCardAvailable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        isPrincipal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AutoMap } from '@automapper/classes';\nimport { BaseModel } from '@models/base.model';\n\nexport enum EmployeeStatus {\n  PART = 'Tiempo parcial',\n  FULL = 'Tiempo completo',\n  CONTRACTOR = 'Contratista',\n  TEMPORARY = 'Temporal',\n  INTERN = 'Practicas',\n  ASSOCIATE = 'Asociado',\n}\n\nexport class WorkerBenefits {\n  @AutoMap()\n  public bonus?: number;\n}\n\nexport class SalaryHistory {\n  @AutoMap()\n  public amount?: number;\n\n  @AutoMap()\n  public date?: string;\n}\n\nexport class WorkerSalaryDeduction {\n  @AutoMap()\n  public taxes?: number;\n\n  @AutoMap()\n  public insurance?: number;\n}\n\nexport class WorkerSalary {\n  @AutoMap()\n  public amount?: number;\n\n  @AutoMap()\n  public paid?: boolean;\n\n  @AutoMap()\n  public paymentDate?: string;\n\n  @AutoMap()\n  public currency?: string;\n\n  @AutoMap()\n  public bankInfo?: string;\n\n  @AutoMap()\n  public employeeStatus?: EmployeeStatus;\n\n  @AutoMap(() => WorkerSalaryDeduction)\n  public deductions?: WorkerSalaryDeduction;\n\n  @AutoMap(() => WorkerBenefits)\n  public benefits?: WorkerBenefits;\n\n  @AutoMap(() => [SalaryHistory])\n  public history?: SalaryHistory[];\n}\n\nexport class BankInfo {\n  @AutoMap()\n  public bankName?: string;\n\n  @AutoMap()\n  public isPrincipal?: boolean = false;\n\n  @AutoMap()\n  public isActive?: boolean;\n\n  @AutoMap()\n  public hasDebitCardAvailable?: boolean;\n\n  @AutoMap()\n  public accountNumber?: string;\n}\n\nexport class Worker extends BaseModel {\n  @AutoMap()\n  public id?: string;\n\n  @AutoMap()\n  public name?: string;\n\n  @AutoMap()\n  public phone?: string;\n\n  @AutoMap()\n  public email?: string;\n\n  @AutoMap()\n  public manager?: string;\n\n  @AutoMap()\n  public farmId?: string;\n\n  @AutoMap()\n  public roles!: string[];\n\n  @AutoMap()\n  public blackListed?: boolean = false;\n\n  @AutoMap()\n  public isActive?: boolean;\n\n  @AutoMap()\n  public isRegistered?: boolean = false;\n\n  @AutoMap()\n  public lastLoggedIn?: string;\n\n  @AutoMap(() => WorkerSalary)\n  public salary?: WorkerSalary;\n\n  @AutoMap(() => [BankInfo])\n  public bankInfo?: BankInfo[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BankInfoDto.html":{"url":"classes/BankInfoDto.html","title":"class - BankInfoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BankInfoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/dto/bank-info.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                accountNumber\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                bankName\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                hasDebitCardAvailable\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                isActive\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                isPrincipal\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        accountNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/bank-info.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        bankName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/bank-info.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        hasDebitCardAvailable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/bank-info.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/bank-info.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        isPrincipal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/bank-info.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AutoMap } from '@automapper/classes';\n\nexport class BankInfoDto {\n  @AutoMap()\n  public bankName?: string;\n\n  @AutoMap()\n  public isPrincipal?: boolean = false;\n\n  @AutoMap()\n  public isActive?: boolean;\n\n  @AutoMap()\n  public hasDebitCardAvailable?: boolean;\n\n  @AutoMap()\n  public accountNumber?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseModel.html":{"url":"classes/BaseModel.html","title":"class - BaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/models/base.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : new Date().toISOString()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/base.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/base.model.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AutoMap } from '@automapper/classes';\nimport { IsOptional, IsString } from 'class-validator';\n\nexport class BaseModel {\n  @IsString()\n  @AutoMap()\n  public createdAt: string = new Date().toISOString();\n\n  @AutoMap()\n  @IsString()\n  @IsOptional()\n  public updatedAt?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BaseModule.html":{"url":"modules/BaseModule.html","title":"module - BaseModule","body":"\n                   \n\n\n\n\n    Modules\n    BaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/base/base.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\n\nimport { AuthController, HealthController } from './controllers';\n\n@Module({\n  imports: [TerminusModule, HttpModule], // Authentication\n  controllers: [AuthController, HealthController],\n})\nexport class BaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/common.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configure\n                        \n                    \n                \n            \n            \n                \n                        \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/common.module.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Global, MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\n\nimport { LoggerContextMiddleware } from './middleware';\nimport * as providers from './providers';\n\nconst services = Object.values(providers);\n\n@Global()\n@Module({\n  providers: services,\n  exports: services,\n})\nexport class CommonModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer): void {\n    consumer.apply(LoggerContextMiddleware).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/providers/config.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            NestConfig\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(path: P)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/providers/config.service.ts:8\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    P\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                        P\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PathValue\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService as NestConfig, Path, PathValue } from '@nestjs/config';\n\nimport type { Config } from '../../config';\n\n@Injectable()\nexport class ConfigService extends NestConfig {\n  public override get>(path: P): PathValue {\n    const value = super.get(path, { infer: true });\n\n    if (value === undefined) {\n      throw new Error(`NotFoundConfig: ${path}`);\n    }\n\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOwnerDto.html":{"url":"classes/CreateOwnerDto.html","title":"class - CreateOwnerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOwnerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/dto/create-owner.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                blackListed\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                country\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                countryCode\n                            \n                            \n                                    \n                                    Public\n                                email\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                farmId\n                            \n                            \n                                    \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    Public\n                                phone\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                picture\n                            \n                            \n                                    \n                                    \n                                    Public\n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        blackListed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/create-owner.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/create-owner.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        countryCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/create-owner.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/create-owner.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        farmId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/create-owner.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/create-owner.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/create-owner.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/create-owner.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        picture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsUrl()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/create-owner.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ArrayNotEmpty()@IsString({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/create-owner.dto.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsBoolean, ArrayNotEmpty, IsOptional, IsUrl } from 'class-validator';\n\nexport class CreateOwnerDto {\n  @IsOptional()\n  @IsString()\n  public id!: string;\n\n  @IsString()\n  public name!: string;\n\n  @IsString()\n  public email!: string;\n\n  @IsString()\n  public phone!: string;\n\n  @IsString()\n  @IsUrl()\n  @IsOptional()\n  public picture?: string;\n\n  @IsString()\n  @IsOptional()\n  public country?: string;\n\n  @IsString()\n  @IsOptional()\n  public countryCode?: string;\n\n  @IsString()\n  @IsOptional()\n  public farmId?: string;\n\n  @IsBoolean()\n  @IsOptional()\n  public blackListed?: boolean;\n\n  @ArrayNotEmpty()\n  @IsString({ each: true })\n  public roles!: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailService.html":{"url":"injectables/EmailService.html","title":"injectable - EmailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/email.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendVerificationEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(emailService: SendGridService, configService: ConfigService, logger: PinoLogger)\n                    \n                \n                        \n                            \n                                Defined in src/core/email.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                    SendGridService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    PinoLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendVerificationEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendVerificationEmail(email: string, templateData: Record, enableTracking)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/email.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                templateData\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                enableTracking\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { SendGridService } from '@ntegral/nestjs-sendgrid';\nimport { MailDataRequired } from '@sendgrid/mail';\nimport { InjectPinoLogger, PinoLogger } from 'nestjs-pino';\n\n@Injectable()\nexport class EmailService {\n  constructor(\n    @Inject('SendGridToken') private readonly emailService: SendGridService,\n    private readonly configService: ConfigService,\n    @InjectPinoLogger() private readonly logger: PinoLogger,\n  ) {}\n\n  async sendVerificationEmail(email: string, templateData: Record, enableTracking = true): Promise {\n    try {\n      this.logger.info('Send Verification Email');\n      const data: Partial = {\n        from: 'no-reply@thefarmflow.com',\n        to: email,\n        subject: 'Verification Email',\n        templateId: this.configService.get('VERIFICATION_TEMPLATE_ID'),\n        dynamicTemplateData: templateData,\n        hideWarnings: true,\n      };\n\n      if (enableTracking) {\n        data.trackingSettings = {\n          clickTracking: {\n            enable: true,\n          },\n          openTracking: {\n            enable: true,\n          },\n        };\n      }\n      this.logger.info(`Verification Email data => ${JSON.stringify(templateData, null, 2)}`);\n\n      const response = await this.emailService.send(data, false);\n\n      this.logger.info(\n        `Enviado correctamente -> ${response[0].statusCode} --- ${JSON.stringify(response[0].body, null, 2)}`,\n      );\n    } catch (e: any) {\n      this.logger.error(`Error sending email => ${JSON.stringify(e, null, 2)}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExceptionsFilter.html":{"url":"classes/ExceptionsFilter.html","title":"class - ExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/exceptions.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        GqlExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                catch\n                            \n                            \n                                    Private\n                                getHttpStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger()\n                    \n                \n                    \n                        \n                                Defined in src/common/filters/exceptions.filter.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        catch\n                        \n                    \n                \n            \n            \n                \n                        \n                    catch(exception, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/filters/exceptions.filter.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHttpStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHttpStatus(exception)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/filters/exceptions.filter.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HttpStatus\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, HttpException, HttpStatus, Logger } from '@nestjs/common';\nimport { BaseExceptionFilter } from '@nestjs/core';\nimport { GqlArgumentsHost, GqlContextType, GqlExceptionFilter } from '@nestjs/graphql';\nimport type { Request } from 'express';\n\n@Catch()\nexport class ExceptionsFilter extends BaseExceptionFilter implements GqlExceptionFilter {\n  private readonly logger: Logger = new Logger();\n\n  public override catch(exception: unknown, host: ArgumentsHost): void {\n    let args: unknown;\n    if (host.getType() === 'graphql') {\n      const gqlHost = GqlArgumentsHost.create(host);\n      const {\n        req: {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          body: { operationName, variables },\n        },\n      } = gqlHost.getContext();\n      args = `${operationName} ${JSON.stringify(variables)}`;\n    } else {\n      super.catch(exception, host);\n      // const req = host.switchToHttp().getRequest();\n      // req.method, req.originalUrl...\n      // args = req.body;\n    }\n\n    const status = this.getHttpStatus(exception);\n    if (status === HttpStatus.INTERNAL_SERVER_ERROR) {\n      if (exception instanceof Error) {\n        this.logger.error({ err: exception, args });\n      } else {\n        // Error Notifications\n        this.logger.error('UnhandledException', exception);\n      }\n    }\n  }\n\n  private getHttpStatus(exception: unknown): HttpStatus {\n    return exception instanceof HttpException ? exception.getStatus() : HttpStatus.INTERNAL_SERVER_ERROR;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Farm.html":{"url":"classes/Farm.html","title":"class - Farm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Farm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/models/farm.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                abbreviation\n                            \n                            \n                                    \n                                    Public\n                                areaMeasurementUnit\n                            \n                            \n                                    \n                                    Public\n                                cattleFarmingArea\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                country\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                countryCode\n                            \n                            \n                                    \n                                    Public\n                                farmPurpose\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                latitude\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                longitude\n                            \n                            \n                                    \n                                    Public\n                                milkMeasurement\n                            \n                            \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                ownerId\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                    Public\n                                totalPropertyArea\n                            \n                            \n                                    \n                                    Public\n                                weightMeasurement\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                workers\n                            \n                            \n                                    \n                                    \n                                    Public\n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        abbreviation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/farm.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        areaMeasurementUnit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/farm.model.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        cattleFarmingArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/farm.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/farm.model.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/farm.model.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        countryCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/farm.model.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        farmPurpose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/farm.model.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/farm.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/farm.model.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/farm.model.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        milkMeasurement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/farm.model.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/farm.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/farm.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/farm.model.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        totalPropertyArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/farm.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        weightMeasurement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/farm.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        workers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/farm.model.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : new Date().toISOString()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@AutoMap()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseModel\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseModel:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@IsString()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseModel\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseModel:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AutoMap } from '@automapper/classes';\n\nimport { BaseModel } from './base.model';\n\nexport class Farm extends BaseModel {\n  @AutoMap()\n  public ownerId?: string;\n\n  @AutoMap()\n  public id?: string;\n\n  @AutoMap()\n  public name!: string;\n\n  @AutoMap()\n  public abbreviation?: string;\n\n  @AutoMap()\n  public totalPropertyArea!: number;\n\n  @AutoMap()\n  public cattleFarmingArea!: number;\n\n  @AutoMap()\n  public areaMeasurementUnit!: string;\n\n  @AutoMap()\n  public milkMeasurement!: string;\n\n  @AutoMap()\n  public weightMeasurement!: string;\n\n  @AutoMap()\n  public farmPurpose!: string;\n\n  @AutoMap()\n  public country?: string;\n\n  @AutoMap()\n  public city?: string;\n\n  @AutoMap()\n  public countryCode?: string;\n\n  @AutoMap()\n  public phoneNumber?: string;\n\n  @AutoMap(() => Array)\n  public workers?: string[];\n\n  @AutoMap()\n  public latitude?: number;\n\n  @AutoMap()\n  public longitude?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FarmController.html":{"url":"controllers/FarmController.html","title":"controller - FarmController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FarmController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rest/controllers/farm.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                farm\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createFarm\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                getAll\n                            \n                            \n                                    \n                                    Async\n                                getFarmById\n                            \n                            \n                                    \n                                    Async\n                                getFarmByOwnerId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                linkOwner\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                linkWorker\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                unlinkOwner\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                unlinkWorker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createFarm\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFarm(data: FarmDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/rest/controllers/farm.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            FarmDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(paginationParams: Pagination, sort: Sorting, filter: Filtering)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Role(Roles.ADMIN)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/rest/controllers/farm.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginationParams\n                                            \n                                                            Pagination\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sort\n                                            \n                                                            Sorting\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filter\n                                            \n                                                            Filtering\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getFarmById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFarmById(filter: Filtering)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getById')\n                \n            \n\n                    \n                        \n                            Defined in src/rest/controllers/farm.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            Filtering\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getFarmByOwnerId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFarmByOwnerId(sort: Sorting, filter: Filtering)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getByOwner')\n                \n            \n\n                    \n                        \n                            Defined in src/rest/controllers/farm.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sort\n                                            \n                                                            Sorting\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filter\n                                            \n                                                            Filtering\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        linkOwner\n                        \n                    \n                \n            \n            \n                \n                        \n                    linkOwner(data: LinkFarmOwnerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('linkOwner')@Role(Roles.OWNER, Roles.ADMIN)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/rest/controllers/farm.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LinkFarmOwnerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        linkWorker\n                        \n                    \n                \n            \n            \n                \n                        \n                    linkWorker(data: LinkFarmWorkerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('linkWorker')@Role(Roles.OWNER, Roles.ADMIN)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/rest/controllers/farm.controller.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LinkFarmWorkerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        unlinkOwner\n                        \n                    \n                \n            \n            \n                \n                        \n                    unlinkOwner(data: UnlinkFarmOwnerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('unlinkOwner')@Role(Roles.OWNER, Roles.ADMIN)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/rest/controllers/farm.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UnlinkFarmOwnerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        unlinkWorker\n                        \n                    \n                \n            \n            \n                \n                        \n                    unlinkWorker(data: UnlinkFarmWorkerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('unlinkWorker')@Role(Roles.OWNER, Roles.ADMIN)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/rest/controllers/farm.controller.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UnlinkFarmWorkerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Roles } from '@base/roles';\nimport { Public, Role } from '@common/decorators';\nimport { RolesGuard } from '@common/guards';\nimport { Filtering, FilteringParams } from '@decorators/filtering.decorator';\nimport { Pagination, PaginationParams } from '@decorators/pagination.decorator';\nimport { Sorting, SortingParams } from '@decorators/sorting.decorator';\nimport { FarmDto } from '@dtos/farm.dto';\nimport { LinkFarmOwnerDto } from '@dtos/link-farm-owner.dto';\nimport { LinkFarmWorkerDto } from '@dtos/link-farm-worker.dto';\nimport { UnlinkFarmOwnerDto } from '@dtos/ublink-farm-owner.dto';\nimport { UnlinkFarmWorkerDto } from '@dtos/unlink-farm-worker.dto';\nimport { Farm } from '@models/index';\nimport { Body, Controller, Get, Patch, Post, UseGuards } from '@nestjs/common';\nimport { FarmService } from '@services/farm.service';\nimport { FirebaseAuthGuard } from '@whitecloak/nestjs-passport-firebase';\nimport { InjectPinoLogger, PinoLogger } from 'nestjs-pino';\n\nimport { Response } from '../../core/response.model';\n\n@Controller('farm')\n@UseGuards(FirebaseAuthGuard)\nexport class FarmController {\n  constructor(\n    @InjectPinoLogger(FarmController.name) private readonly logger: PinoLogger,\n    private farmService: FarmService,\n  ) {}\n\n  @Get()\n  @Role(Roles.ADMIN)\n  @UseGuards(RolesGuard)\n  public async getAll(\n    @PaginationParams() paginationParams: Pagination,\n    @SortingParams(['name']) sort: Sorting,\n    @FilteringParams(['name']) filter: Filtering,\n  ): Promise> {\n    return this.farmService.getAllFarms(paginationParams, sort, filter);\n  }\n\n  @Get('getById')\n  async getFarmById(@FilteringParams(['id']) filter: Filtering): Promise> {\n    return this.farmService.getFarmById(filter);\n  }\n\n  @Get('getByOwner')\n  async getFarmByOwnerId(\n    @SortingParams(['ownerId', 'purpose']) sort: Sorting,\n    @FilteringParams(['ownerId']) filter: Filtering,\n  ): Promise> {\n    return this.farmService.getFarmByOwnerId(sort, filter);\n  }\n\n  @Post()\n  @Public()\n  async createFarm(@Body() data: FarmDto): Promise> {\n    this.logger.info('Creating farm');\n    return this.farmService.createFarm(data);\n  }\n\n  @Patch('linkOwner')\n  @Role(Roles.OWNER, Roles.ADMIN)\n  @UseGuards(RolesGuard)\n  async linkOwner(@Body() data: LinkFarmOwnerDto): Promise> {\n    this.logger.info(`Linking owner ${data.ownerId} with farm ${data.farmId}`);\n    return this.farmService.linkOwner(data);\n  }\n\n  @Patch('unlinkOwner')\n  @Role(Roles.OWNER, Roles.ADMIN)\n  @UseGuards(RolesGuard)\n  async unlinkOwner(@Body() data: UnlinkFarmOwnerDto): Promise> {\n    return this.farmService.unlinkOwner(data);\n  }\n\n  @Patch('linkWorker')\n  @Role(Roles.OWNER, Roles.ADMIN)\n  @UseGuards(RolesGuard)\n  async linkWorker(@Body() data: LinkFarmWorkerDto): Promise> {\n    this.logger.info(`Linking owner ${data.workerId} with farm ${data.farmId}`);\n    return this.farmService.linkWorker(data);\n  }\n\n  @Patch('unlinkWorker')\n  @Role(Roles.OWNER, Roles.ADMIN)\n  @UseGuards(RolesGuard)\n  async unlinkWorker(@Body() data: UnlinkFarmWorkerDto): Promise> {\n    this.logger.info(`Linking owner ${data.workerId} with farm ${data.farmId}`);\n    return this.farmService.unlinkWorker(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FarmDto.html":{"url":"classes/FarmDto.html","title":"class - FarmDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FarmDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/dto/farm.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                abbreviation\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                areaMeasurementUnit\n                            \n                            \n                                    \n                                    \n                                    Public\n                                cattleFarmingArea\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                country\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                countryCode\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                farmPurpose\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                latitude\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                longitude\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                milkMeasurement\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                owners\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    Public\n                                totalPropertyArea\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                weightMeasurement\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        abbreviation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/farm.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        areaMeasurementUnit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AreaMeasurementUnit\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@Transform( => )@IsEnum(AreaMeasurementUnit)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/farm.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        cattleFarmingArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@IsNumber({allowNaN: false, allowInfinity: false, maxDecimalPlaces: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/farm.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/farm.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/farm.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        countryCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/farm.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        farmPurpose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FarmPurpose\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@Transform( => )@IsEnum(FarmPurpose)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/farm.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/farm.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@IsNumber()@IsOptional()@Min(undefined, {message: 'Latitude must be at least -90'})@Max(90, {message: 'Latitude must be at most 90'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/farm.dto.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@IsNumber()@IsOptional()@Min(undefined, {message: 'Longitude must be at least -180'})@Max(180, {message: 'Longitude must be at most 180'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/farm.dto.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        milkMeasurement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MilkMeasurementUnit\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@Transform( => )@IsEnum(MilkMeasurementUnit)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/farm.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/farm.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        owners\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@IsOptional()@AutoMap(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/farm.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/farm.dto.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        totalPropertyArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@IsNumber({allowNaN: false, allowInfinity: false, maxDecimalPlaces: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/farm.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        weightMeasurement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WeightMeasurementUnit\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@Transform( => )@IsEnum(WeightMeasurementUnit)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/farm.dto.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AutoMap } from '@automapper/classes';\nimport { capitalize } from '@common/utils/string.utils';\nimport { AreaMeasurementUnit } from '@enums/area-measurement.unit';\nimport { FarmPurpose } from '@enums/farm-purpose.enum';\nimport { MilkMeasurementUnit } from '@enums/milk-measurement.unit';\nimport { WeightMeasurementUnit } from '@enums/weight-measurement.unit';\nimport { Transform } from 'class-transformer';\nimport { IsEnum, IsNotEmpty, IsNumber, IsOptional, IsString, Max, Min } from 'class-validator';\n\nexport class FarmDto {\n  @AutoMap()\n  @IsOptional()\n  @AutoMap(() => Array)\n  public owners?: string[];\n\n  @AutoMap()\n  @IsString()\n  @IsOptional()\n  public id?: string;\n\n  @AutoMap()\n  @IsString()\n  @IsNotEmpty()\n  public name!: string;\n\n  @AutoMap()\n  @IsString()\n  public abbreviation?: string;\n\n  @AutoMap()\n  @IsNumber({ allowNaN: false, allowInfinity: false, maxDecimalPlaces: 0 })\n  public totalPropertyArea!: number;\n\n  @AutoMap()\n  @IsNumber({ allowNaN: false, allowInfinity: false, maxDecimalPlaces: 0 })\n  public cattleFarmingArea!: number;\n\n  @AutoMap()\n  @Transform(({ value }) => capitalize(`${value}`))\n  @IsEnum(AreaMeasurementUnit)\n  public areaMeasurementUnit!: AreaMeasurementUnit;\n\n  @AutoMap()\n  @Transform(({ value }) => capitalize(`${value}`))\n  @IsEnum(MilkMeasurementUnit)\n  public milkMeasurement!: MilkMeasurementUnit;\n\n  @AutoMap()\n  @Transform(({ value }) => capitalize(`${value}`))\n  @IsEnum(WeightMeasurementUnit)\n  public weightMeasurement!: WeightMeasurementUnit;\n\n  @AutoMap()\n  @Transform(({ value }) => capitalize(`${value}`))\n  @IsEnum(FarmPurpose)\n  public farmPurpose!: FarmPurpose;\n\n  @AutoMap()\n  @IsString()\n  @IsOptional()\n  public country?: string;\n\n  @AutoMap()\n  @IsString()\n  @IsOptional()\n  public city?: string;\n\n  @AutoMap()\n  @IsString()\n  @IsOptional()\n  public countryCode?: string;\n\n  @AutoMap()\n  @IsString()\n  @IsOptional()\n  public phoneNumber?: string;\n\n  @AutoMap()\n  @IsNumber()\n  @IsOptional()\n  @Min(-90, { message: 'Latitude must be at least -90' })\n  @Max(90, { message: 'Latitude must be at most 90' })\n  public latitude?: number;\n\n  @AutoMap()\n  @IsNumber()\n  @IsOptional()\n  @Min(-180, { message: 'Longitude must be at least -180' })\n  @Max(180, { message: 'Longitude must be at most 180' })\n  public longitude?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FarmMapperProfile.html":{"url":"classes/FarmMapperProfile.html","title":"class - FarmMapperProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FarmMapperProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/mappers/farm.mapper-profile.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AutomapperProfile\n            \n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    profile\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mapper: Mapper)\n                    \n                \n                        \n                            \n                                Defined in src/core/mappers/farm.mapper-profile.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapper\n                                                  \n                                                        \n                                                                    Mapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        profile\n                    \n                \n\n                \n                    \n                        getprofile()\n                    \n                \n                            \n                                \n                                    Defined in src/core/mappers/farm.mapper-profile.ts:11\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { createMap, forMember, ignore, Mapper } from '@automapper/core';\nimport { FarmDto } from '@dtos/farm.dto';\nimport { Farm } from '@models/farm.model';\nimport { AutomapperProfile, InjectMapper } from '@timonmasberg/automapper-nestjs';\n\nexport class FarmMapperProfile extends AutomapperProfile {\n  constructor(@InjectMapper() mapper: Mapper) {\n    super(mapper);\n  }\n\n  override get profile() {\n    return (mapper: Mapper) => {\n      createMap(\n        mapper,\n        FarmDto,\n        Farm,\n        forMember((dest: Farm) => dest.id, ignore()),\n      );\n      createMap(mapper, Farm, FarmDto);\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FarmRepository.html":{"url":"injectables/FarmRepository.html","title":"injectable - FarmRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FarmRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/repositories/farm.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createFarm\n                            \n                            \n                                    Async\n                                getAllFarms\n                            \n                            \n                                    Async\n                                getFarm\n                            \n                            \n                                    Async\n                                getFarmByOwner\n                            \n                            \n                                    Async\n                                linkOwnerWithFarm\n                            \n                            \n                                    Async\n                                linkWorker\n                            \n                            \n                                    Async\n                                unlinkOwner\n                            \n                            \n                                    Async\n                                unlinkWorker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: PinoLogger, mapper: Mapper, workerCollection: CollectionReference, userCollection: CollectionReference, farmCollection: CollectionReference)\n                    \n                \n                        \n                            \n                                Defined in src/core/repositories/farm.repository.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    PinoLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapper\n                                                  \n                                                        \n                                                                    Mapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        workerCollection\n                                                  \n                                                        \n                                                                        CollectionReference\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userCollection\n                                                  \n                                                        \n                                                                        CollectionReference\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        farmCollection\n                                                  \n                                                        \n                                                                        CollectionReference\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createFarm\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFarm(data: FarmDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/repositories/farm.repository.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            FarmDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllFarms\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllFarms(pagination: Pagination, sort?: Sorting, filter?: Filtering)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/repositories/farm.repository.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pagination\n                                            \n                                                            Pagination\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sort\n                                            \n                                                            Sorting\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                filter\n                                            \n                                                            Filtering\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getFarm\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFarm(filter: Filtering)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/repositories/farm.repository.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            Filtering\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getFarmByOwner\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFarmByOwner(sort: Sorting, filter: Filtering)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/repositories/farm.repository.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sort\n                                            \n                                                            Sorting\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filter\n                                            \n                                                            Filtering\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        linkOwnerWithFarm\n                        \n                    \n                \n            \n            \n                \n                        \n                    linkOwnerWithFarm(data: LinkFarmOwnerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/repositories/farm.repository.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LinkFarmOwnerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        linkWorker\n                        \n                    \n                \n            \n            \n                \n                        \n                    linkWorker(data: LinkFarmWorkerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/repositories/farm.repository.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LinkFarmWorkerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        unlinkOwner\n                        \n                    \n                \n            \n            \n                \n                        \n                    unlinkOwner(data: UnlinkFarmOwnerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/repositories/farm.repository.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UnlinkFarmOwnerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        unlinkWorker\n                        \n                    \n                \n            \n            \n                \n                        \n                    unlinkWorker(data: UnlinkFarmWorkerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/repositories/farm.repository.ts:171\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UnlinkFarmWorkerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Mapper } from '@automapper/core';\nimport { Filtering } from '@decorators/filtering.decorator';\nimport { Pagination } from '@decorators/pagination.decorator';\nimport { Sorting } from '@decorators/sorting.decorator';\nimport { FarmDto } from '@dtos/farm.dto';\nimport { LinkFarmOwnerDto } from '@dtos/link-farm-owner.dto';\nimport { LinkFarmWorkerDto } from '@dtos/link-farm-worker.dto';\nimport { UnlinkFarmOwnerDto } from '@dtos/ublink-farm-owner.dto';\nimport { UnlinkFarmWorkerDto } from '@dtos/unlink-farm-worker.dto';\nimport { Collections } from '@enums/collections';\nimport { CollectionReference, QueryDocumentSnapshot, QuerySnapshot } from '@google-cloud/firestore';\nimport { autoId } from '@google-cloud/firestore/build/src/util';\nimport { Farm } from '@models/farm.model';\nimport { User } from '@models/user.model';\nimport { Worker } from '@models/worker.model';\nimport { Inject, Injectable } from '@nestjs/common';\nimport { InjectMapper } from '@timonmasberg/automapper-nestjs';\nimport { FieldValue } from 'firebase-admin/firestore';\nimport { InjectPinoLogger, PinoLogger } from 'nestjs-pino';\n\nimport { PaginationBuilder } from '../pagination.model';\nimport { ApiResponseBuilder } from '../response/api-response.builder';\nimport { Response } from '../response.model';\n\n@Injectable()\nexport class FarmRepository {\n  // eslint-disable-next-line max-params\n  constructor(\n    @InjectPinoLogger(FarmRepository.name) private readonly logger: PinoLogger,\n    @InjectMapper() private readonly mapper: Mapper,\n    @Inject(Collections.WORKERS) private workerCollection: CollectionReference,\n    @Inject(Collections.USERS) private userCollection: CollectionReference,\n    @Inject(Collections.FARMS) private farmCollection: CollectionReference,\n  ) {}\n\n  async getAllFarms(pagination: Pagination, sort?: Sorting, filter?: Filtering): Promise> {\n    const { lastDoc, limit } = pagination;\n    let query = this.farmCollection.limit(limit);\n\n    if (sort) query.orderBy(sort.property, sort.direction);\n    if (filter) query = query.where(filter.property, filter.rule, filter.value);\n    if (lastDoc) {\n      const startAfterDoc = await this.farmCollection.doc(lastDoc).get();\n      query = query.startAfter(startAfterDoc);\n    }\n\n    const data: QuerySnapshot = await query.get();\n    const snapshot: QuerySnapshot = await this.farmCollection.get();\n    if (!data.empty) {\n      const result = data.docs.map((doc: QueryDocumentSnapshot) => doc.data());\n      const lastId = data.docs.length === limit ? data.docs[limit - 1].id : undefined;\n      const resultPagination = new PaginationBuilder().build(snapshot, limit, lastId);\n\n      return ApiResponseBuilder.success(200, 'Ok', result, resultPagination);\n    }\n    return ApiResponseBuilder.notFound();\n  }\n\n  async getFarm(filter: Filtering): Promise> {\n    this.logger.info(`Get  ${JSON.stringify(filter, null, 2)}`);\n    const doc = await this.farmCollection.doc(filter.value).get();\n    if (doc.exists) {\n      const result = doc.data();\n      this.logger.info(`Farm => ${JSON.stringify(result, null, 2)}`);\n\n      return ApiResponseBuilder.success(200, 'Ok', result);\n    }\n    return ApiResponseBuilder.notFound();\n  }\n\n  async getFarmByOwner(sort: Sorting, filter: Filtering): Promise> {\n    this.logger.info(`Get  ${JSON.stringify(filter, null, 2)}`);\n    const snapshot = await this.farmCollection\n      .limit(10)\n      .orderBy(sort.property, sort.direction)\n      .where(filter.property, filter.rule, filter.value)\n      .get();\n    if (!snapshot.empty) {\n      const result = snapshot.docs.map((doc: QueryDocumentSnapshot) => doc.data());\n      this.logger.info(`[Farm] => ${JSON.stringify(result, null, 2)}`);\n\n      return ApiResponseBuilder.success(200, 'Ok', result);\n    }\n    return ApiResponseBuilder.notFound();\n  }\n\n  async createFarm(data: FarmDto): Promise> {\n    const farm = this.mapper.map(data, FarmDto, Farm);\n    this.logger.info(`Create farm with data ${JSON.stringify(farm, null, 2)}`);\n\n    const farmId = autoId();\n    const farmInfo: Farm = {\n      ...farm,\n      id: farmId,\n      createdAt: new Date().toISOString(),\n    };\n    const farmRef = this.farmCollection.doc(farmId);\n    await farmRef.set(farmInfo);\n\n    const farmData = await this.farmCollection.doc(farmId).get();\n    return ApiResponseBuilder.success(200, 'Ok', farmData.data());\n  }\n\n  // TOOD: Verificar todos los link y unlink para distintos worker, farms and owners\n\n  async linkOwnerWithFarm(data: LinkFarmOwnerDto): Promise> {\n    this.logger.info(`Link owner ${data.ownerId} with farm ${data.farmId}`);\n\n    const farmRef = this.farmCollection.doc(data.farmId);\n    const userRef = this.userCollection.doc(data.ownerId);\n\n    const farm = await farmRef.get();\n    if (farm.exists) {\n      const user = await userRef.get();\n      if (user.exists) {\n        try {\n          await farmRef.update({ owners: FieldValue.arrayUnion(data.ownerId) });\n          await userRef.update({ farms: FieldValue.arrayUnion(data.farmId) });\n          return ApiResponseBuilder.success(200, `El usuario ${data.ownerId} ha sido vinculado exitosamente`, true);\n        } catch (e: any) {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          return ApiResponseBuilder.withError(404, e.message);\n        }\n      }\n      return ApiResponseBuilder.notFound();\n    }\n    return ApiResponseBuilder.notFound();\n  }\n\n  async unlinkOwner(data: UnlinkFarmOwnerDto): Promise> {\n    this.logger.info(`Unlink owner ${data.ownerId} with farm ${data.farmId}`);\n\n    const farmRef = this.farmCollection.doc(data.farmId);\n    const userRef = this.userCollection.doc(data.ownerId);\n    const farm = await farmRef.get();\n    const user = await userRef.get();\n    if (farm.exists && user.exists) {\n      this.logger.info('Farm and Owner to unlink exists');\n      try {\n        await farmRef.update({ owners: FieldValue.arrayRemove(data.ownerId) });\n        this.logger.info('OwnerID Field is deleted');\n        await userRef.update({ farms: FieldValue.arrayRemove(data.farmId) });\n        this.logger.info('FarmID Field is deleted');\n        return ApiResponseBuilder.success(200, `El usuario ${data.ownerId} ha sido desvinculado exitosamente`, true);\n      } catch (e: any) {\n        return ApiResponseBuilder.withError(404, e.message);\n      }\n    }\n    return ApiResponseBuilder.notFound();\n  }\n\n  async linkWorker(data: LinkFarmWorkerDto): Promise> {\n    this.logger.info(`Link worker ${data.workerId} with farm ${data.farmId}`);\n\n    const farmRef = this.farmCollection.doc(data.farmId);\n    const workerRef = this.workerCollection.doc(data.workerId);\n    const farm = await farmRef.get();\n    const worker = await workerRef.get();\n    if (farm.exists && worker.exists) {\n      try {\n        await farmRef.update({ workers: FieldValue.arrayUnion(data.workerId) });\n        await workerRef.update({ farms: FieldValue.arrayUnion(data.farmId) });\n        return ApiResponseBuilder.success(200, `El trabajador ${data.workerId} ha sido vinculado exitosamente`, true);\n      } catch (e: any) {\n        return ApiResponseBuilder.withError(404, e.message);\n      }\n    }\n    return ApiResponseBuilder.notFound();\n  }\n\n  async unlinkWorker(data: UnlinkFarmWorkerDto): Promise> {\n    this.logger.info(`Unlink worker ${data.workerId} with farm ${data.farmId}`);\n\n    const farmRef = this.farmCollection.doc(data.farmId);\n    const workerRef = this.workerCollection.doc(data.workerId);\n    const farm = await farmRef.get();\n    const worker = await workerRef.get();\n    if (farm.exists && worker.exists) {\n      try {\n        await farmRef.update({ workers: FieldValue.arrayRemove(data.workerId) });\n        await workerRef.update({ farms: FieldValue.arrayRemove(data.farmId) });\n        return ApiResponseBuilder.success(\n          200,\n          `El trabajador ${data.workerId} ha sido desvinculado exitosamente`,\n          true,\n        );\n      } catch (e: any) {\n        return ApiResponseBuilder.withError(404, e.message);\n      }\n    }\n    return ApiResponseBuilder.notFound();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FarmService.html":{"url":"injectables/FarmService.html","title":"injectable - FarmService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FarmService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/services/farm.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createFarm\n                            \n                            \n                                    Public\n                                    Async\n                                getAllFarms\n                            \n                            \n                                    Public\n                                    Async\n                                getFarmById\n                            \n                            \n                                    Public\n                                    Async\n                                getFarmByOwnerId\n                            \n                            \n                                    Public\n                                    Async\n                                linkOwner\n                            \n                            \n                                    Public\n                                    Async\n                                linkWorker\n                            \n                            \n                                    Public\n                                    Async\n                                unlinkOwner\n                            \n                            \n                                    Public\n                                    Async\n                                unlinkWorker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: PinoLogger, repository: FarmRepository)\n                    \n                \n                        \n                            \n                                Defined in src/core/services/farm.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    PinoLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        FarmRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createFarm\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFarm(data: FarmDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/services/farm.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            FarmDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getAllFarms\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllFarms(pagination: Pagination, sort: Sorting, filter: Filtering)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/services/farm.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pagination\n                                            \n                                                            Pagination\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sort\n                                            \n                                                            Sorting\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filter\n                                            \n                                                            Filtering\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getFarmById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFarmById(filter: Filtering)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/services/farm.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            Filtering\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getFarmByOwnerId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFarmByOwnerId(sort: Sorting, filter: Filtering)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/services/farm.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sort\n                                            \n                                                            Sorting\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filter\n                                            \n                                                            Filtering\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        linkOwner\n                        \n                    \n                \n            \n            \n                \n                        \n                    linkOwner(data: LinkFarmOwnerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/services/farm.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LinkFarmOwnerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        linkWorker\n                        \n                    \n                \n            \n            \n                \n                        \n                    linkWorker(data: LinkFarmWorkerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/services/farm.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LinkFarmWorkerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        unlinkOwner\n                        \n                    \n                \n            \n            \n                \n                        \n                    unlinkOwner(data: UnlinkFarmOwnerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/services/farm.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UnlinkFarmOwnerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        unlinkWorker\n                        \n                    \n                \n            \n            \n                \n                        \n                    unlinkWorker(data: UnlinkFarmWorkerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/services/farm.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UnlinkFarmWorkerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Filtering } from '@decorators/filtering.decorator';\nimport { Pagination } from '@decorators/pagination.decorator';\nimport { Sorting } from '@decorators/sorting.decorator';\nimport { FarmDto } from '@dtos/farm.dto';\nimport { LinkFarmOwnerDto } from '@dtos/link-farm-owner.dto';\nimport { LinkFarmWorkerDto } from '@dtos/link-farm-worker.dto';\nimport { UnlinkFarmOwnerDto } from '@dtos/ublink-farm-owner.dto';\nimport { UnlinkFarmWorkerDto } from '@dtos/unlink-farm-worker.dto';\nimport { Farm } from '@models/index';\nimport { Injectable } from '@nestjs/common';\nimport { FarmRepository } from '@repositories/farm.repository';\nimport { InjectPinoLogger, PinoLogger } from 'nestjs-pino';\n\nimport { Response } from '../response.model';\n\n@Injectable()\nexport class FarmService {\n  constructor(\n    @InjectPinoLogger() private readonly logger: PinoLogger,\n    private readonly repository: FarmRepository,\n  ) {}\n\n  public async getAllFarms(pagination: Pagination, sort: Sorting, filter: Filtering): Promise> {\n    const result = this.repository.getAllFarms(pagination, sort, filter);\n    this.logger.info(``);\n    this.logger.info(`Pagination => ${JSON.stringify(result, null, 2)}`);\n    this.logger.info(``);\n    return result;\n  }\n\n  public async getFarmById(filter: Filtering): Promise> {\n    const result = this.repository.getFarm(filter);\n    this.logger.info(``);\n    this.logger.info(`Farm => ${JSON.stringify(result, null, 2)}`);\n    this.logger.info(``);\n    return result;\n  }\n\n  public async getFarmByOwnerId(sort: Sorting, filter: Filtering): Promise> {\n    const result = this.repository.getFarmByOwner(sort, filter);\n    this.logger.info(``);\n    this.logger.info(`Farms by Owner ID (${filter.value})=> ${JSON.stringify(result, null, 2)}`);\n    this.logger.info(``);\n    return result;\n  }\n\n  public async createFarm(data: FarmDto): Promise> {\n    return this.repository.createFarm(data);\n  }\n\n  public async linkOwner(data: LinkFarmOwnerDto): Promise> {\n    return this.repository.linkOwnerWithFarm(data);\n  }\n\n  public async unlinkOwner(data: UnlinkFarmOwnerDto): Promise> {\n    return this.repository.unlinkOwner(data);\n  }\n\n  public async linkWorker(data: LinkFarmWorkerDto): Promise> {\n    return this.repository.linkWorker(data);\n  }\n\n  public async unlinkWorker(data: UnlinkFarmWorkerDto): Promise> {\n    return this.repository.unlinkWorker(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Filtering.html":{"url":"interfaces/Filtering.html","title":"interface - Filtering","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Filtering\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/decorators/filtering.decorator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            property\n                                        \n                                \n                                \n                                        \n                                            rule\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property:     string | FieldPath\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | FieldPath\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rule\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rule:     WhereFilterOp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     WhereFilterOp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FieldPath, WhereFilterOp } from '@firebase/firestore-types';\nimport { BadRequestException, createParamDecorator, ExecutionContext } from '@nestjs/common';\nimport { Request } from 'express';\n\nexport interface Filtering {\n  property: string | FieldPath;\n  rule: WhereFilterOp;\n  value: string;\n}\n\n// valid filter rules\nexport enum FilterRule {\n  LESS_THAN = '=',\n  GREATER_THAN = '>',\n  ARRAY_CONTAINS = 'array-contains',\n  IN = 'in',\n  NOT_IN = 'not-in',\n  ARRAY_CONTAINS_ANY = 'array-contains-any',\n}\n\nexport const FilteringParams = createParamDecorator((data: string[], ctx: ExecutionContext) => {\n  const req: Request = ctx.switchToHttp().getRequest();\n  const filter = req.query['filter'];\n  if (!filter) return null;\n\n  // check if the valid params sent is an array\n  if (!Array.isArray(data)) throw new BadRequestException('Filter parameter must be a Array');\n\n  // validate the format of the filter, if the rule is 'isnull' or 'isnotnull' it don't need to have a value\n  if (\n    !filter.match(/^[a-zA-Z0-9_]+:(=|>|array-contains|in|not-in|array-contains-any):[a-zA-Z0-9_,]+$/) &&\n    !filter.match(/^[a-zA-Z0-9_]+:(isnull|isnotnull)$/)\n  ) {\n    throw new BadRequestException('Pattern of filter are invalid');\n  }\n\n  const filters = filter.split(':');\n  const property = filters[0];\n  const rule = filters[1];\n  const value = filters[2];\n\n  if (!data.includes(property)) throw new BadRequestException(`Invalid filter property: ${property}`);\n  if (!Object.values(FilterRule).includes(rule))\n    throw new BadRequestException(`Invalid filter rule: ${rule}`);\n\n  const filtering: Filtering = {\n    property,\n    rule,\n    value,\n  };\n  return filtering;\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirebaseAuthStrategy.html":{"url":"classes/FirebaseAuthStrategy.html","title":"class - FirebaseAuthStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseAuthStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/firebase-auth.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FirebaseStrategy\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/firebase-auth.strategy.ts:4\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: DecodedIdToken)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/firebase-auth.strategy.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        DecodedIdToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DecodedIdToken, FirebaseStrategy } from '@whitecloak/nestjs-passport-firebase';\nimport * as process from 'process';\n\nexport class FirebaseAuthStrategy extends FirebaseStrategy {\n  constructor() {\n    super({\n      audience: process.env.AUDIENCE,\n      issuer: process.env.ISSUER,\n    });\n  }\n\n  override async validate(payload: DecodedIdToken): Promise {\n    return Promise.resolve(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FirestoreModule.html":{"url":"modules/FirestoreModule.html","title":"module - FirestoreModule","body":"\n                   \n\n\n\n\n    Modules\n    FirestoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/db/firestore.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: FirestoreModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/db/firestore.module.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            FirestoreModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  FirestoreDatabaseProvider,\n  FirestoreOptionsProvider,\n  FirestoreCollectionProviders,\n} from '@common/db/firestore.provider';\nimport { Firestore, Settings } from '@google-cloud/firestore';\nimport { Module, DynamicModule } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\ninterface FirestoreModuleOptions {\n  imports: any[];\n  inject: any[];\n  useFactory: (...args: any[]) => Settings;\n}\n\n@Module({})\nexport class FirestoreModule {\n  static forRoot(options: FirestoreModuleOptions): DynamicModule {\n    const optionProvider = {\n      provide: FirestoreOptionsProvider,\n      useFactory: options.useFactory,\n      inject: options.inject,\n    };\n    const dbProvider = {\n      provide: FirestoreDatabaseProvider,\n      useFactory: (config: ConfigService) => new Firestore(config),\n      inject: [FirestoreOptionsProvider],\n    };\n    const collectionProviders = FirestoreCollectionProviders.map((providerName) => ({\n      provide: providerName,\n      useFactory: (db: Firestore) => db.collection(providerName),\n      inject: [FirestoreDatabaseProvider],\n    }));\n\n    return {\n      global: true,\n      module: FirestoreModule,\n      imports: options.imports,\n      providers: [optionProvider, dbProvider, ...collectionProviders],\n      exports: [dbProvider, ...collectionProviders],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirestoreModuleOptions.html":{"url":"interfaces/FirestoreModuleOptions.html","title":"interface - FirestoreModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirestoreModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/db/firestore.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            imports\n                                        \n                                \n                                \n                                        \n                                            inject\n                                        \n                                \n                                \n                                        \n                                            useFactory\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        imports\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imports:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  FirestoreDatabaseProvider,\n  FirestoreOptionsProvider,\n  FirestoreCollectionProviders,\n} from '@common/db/firestore.provider';\nimport { Firestore, Settings } from '@google-cloud/firestore';\nimport { Module, DynamicModule } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\ninterface FirestoreModuleOptions {\n  imports: any[];\n  inject: any[];\n  useFactory: (...args: any[]) => Settings;\n}\n\n@Module({})\nexport class FirestoreModule {\n  static forRoot(options: FirestoreModuleOptions): DynamicModule {\n    const optionProvider = {\n      provide: FirestoreOptionsProvider,\n      useFactory: options.useFactory,\n      inject: options.inject,\n    };\n    const dbProvider = {\n      provide: FirestoreDatabaseProvider,\n      useFactory: (config: ConfigService) => new Firestore(config),\n      inject: [FirestoreOptionsProvider],\n    };\n    const collectionProviders = FirestoreCollectionProviders.map((providerName) => ({\n      provide: providerName,\n      useFactory: (db: Firestore) => db.collection(providerName),\n      inject: [FirestoreDatabaseProvider],\n    }));\n\n    return {\n      global: true,\n      module: FirestoreModule,\n      imports: options.imports,\n      providers: [optionProvider, dbProvider, ...collectionProviders],\n      exports: [dbProvider, ...collectionProviders],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GqlAuthGuard.html":{"url":"injectables/GqlAuthGuard.html","title":"injectable - GqlAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GqlAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/decorators/gql-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FirebaseAuthGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRequest(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/decorators/gql-auth.guard.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { GqlExecutionContext } from '@nestjs/graphql';\nimport { FirebaseAuthGuard } from '@whitecloak/nestjs-passport-firebase';\n\n@Injectable()\nexport class GqlAuthGuard extends FirebaseAuthGuard {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\n  override getRequest(context: ExecutionContext) {\n    const ctx = GqlExecutionContext.create(context);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return ctx.getContext().req;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/controllers/health.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                https://docs.nestjs.com/recipes/terminus\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('health')@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/base/controllers/health.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport {\n  HealthCheck,\n  HealthCheckResult,\n  HealthCheckService,\n  HealthIndicatorResult,\n  HttpHealthIndicator,\n} from '@nestjs/terminus';\n\nimport { Public } from '../../common';\n\n/**\n * https://docs.nestjs.com/recipes/terminus\n */\n@Controller()\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n  ) {}\n\n  @Public()\n  @Get('health')\n  @HealthCheck()\n  public async check(): Promise {\n    return this.health.check([\n      async (): Promise => this.http.pingCheck('dns', 'https://1.1.1.1'),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LinkFarmOwnerDto.html":{"url":"classes/LinkFarmOwnerDto.html","title":"class - LinkFarmOwnerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LinkFarmOwnerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/dto/link-farm-owner.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                farmId\n                            \n                            \n                                    \n                                    \n                                    Public\n                                ownerId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        farmId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlphanumeric()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/link-farm-owner.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlphanumeric()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/link-farm-owner.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlphanumeric, IsNotEmpty } from 'class-validator';\n\nexport class LinkFarmOwnerDto {\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  public ownerId!: string;\n\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  public farmId!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LinkFarmWorkerDto.html":{"url":"classes/LinkFarmWorkerDto.html","title":"class - LinkFarmWorkerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LinkFarmWorkerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/dto/link-farm-worker.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                farmId\n                            \n                            \n                                    \n                                    \n                                    Public\n                                workerId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        farmId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlphanumeric()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/link-farm-worker.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        workerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlphanumeric()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/link-farm-worker.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlphanumeric, IsNotEmpty } from 'class-validator';\n\nexport class LinkFarmWorkerDto {\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  public workerId!: string;\n\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  public farmId!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerContextMiddleware.html":{"url":"injectables/LoggerContextMiddleware.html","title":"injectable - LoggerContextMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerContextMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middleware/logger-context.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: PinoLogger, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/common/middleware/logger-context.middleware.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    PinoLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                        \n                    use(req: Request, _res: Response, next: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/middleware/logger-context.middleware.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport type { Request, Response } from 'express';\nimport { auth as Auth } from 'firebase-admin';\nimport { PinoLogger } from 'nestjs-pino';\n\nimport { AuthService } from '../../auth';\n\n@Injectable()\nexport class LoggerContextMiddleware implements NestMiddleware {\n  constructor(\n    private readonly logger: PinoLogger,\n    private auth: AuthService,\n  ) {}\n\n  public async use(req: Request, _res: Response, next: () => void): Promise {\n    const authorization: string | undefined = req.header('authorization');\n\n    let user: Auth.DecodedIdToken;\n    if (authorization?.startsWith('Bearer')) {\n      const token = authorization.split(' ')[1];\n      user = await this.auth.getPayload(token);\n    } else {\n      // @ts-expect-error\n      user = req.user;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (user) {\n      const { uid } = user;\n      // for https://github.com/iamolegga/nestjs-pino/issues/608\n      req.customProps = { uid };\n      // Add extra fields to share in logger context\n      this.logger.assign(req.customProps);\n    }\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Owner.html":{"url":"classes/Owner.html","title":"class - Owner","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Owner\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/models/owner.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            User\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                blackListed\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                country\n                            \n                            \n                                    \n                                    Public\n                                email\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                farms\n                            \n                            \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    Public\n                                phone\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                picture\n                            \n                            \n                                    \n                                    Public\n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        blackListed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        farms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        picture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         User\n\n                            \n                        \n                    \n                        \n                                Defined in         User:32\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '@models/user.model';\n\nexport class Owner extends User {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OwnerRepository.html":{"url":"injectables/OwnerRepository.html","title":"injectable - OwnerRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OwnerRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/repositories/owner.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOwner\n                            \n                            \n                                    Async\n                                findAllWorker\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: PinoLogger, mapper: Mapper, userCollection: CollectionReference, request: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/core/repositories/owner.repository.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    PinoLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapper\n                                                  \n                                                        \n                                                                    Mapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userCollection\n                                                  \n                                                        \n                                                                        CollectionReference\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOwner\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOwner(data: CreateOwnerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/repositories/owner.repository.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreateOwnerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllWorker\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWorker()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/repositories/owner.repository.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/repositories/owner.repository.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/repositories/owner.repository.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/repositories/owner.repository.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Mapper } from '@automapper/core';\nimport { CreateOwnerDto } from '@dtos/create-owner.dto';\nimport { CollectionReference } from '@google-cloud/firestore';\nimport { Owner } from '@models/owner.model';\nimport { Inject, Injectable, NotFoundException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { InjectMapper } from '@timonmasberg/automapper-nestjs';\nimport { auth } from 'firebase-admin';\nimport { InjectPinoLogger, PinoLogger } from 'nestjs-pino';\n\nimport { Payload, User } from '../models/index';\n\n@Injectable()\nexport class OwnerRepository {\n  // eslint-disable-next-line max-params\n  constructor(\n    @InjectPinoLogger(OwnerRepository.name) private readonly logger: PinoLogger,\n    @InjectMapper() private readonly mapper: Mapper,\n    @Inject('users') private userCollection: CollectionReference,\n    @Inject(REQUEST) private readonly request: { user: Payload },\n  ) {}\n\n  async createOwner(data: CreateOwnerDto): Promise {\n    this.logger.info('create owner');\n    const userAccount = await auth().getUserByEmail(data.email);\n    data.id = userAccount.uid;\n    const owner = this.mapper.map(data, CreateOwnerDto, Owner);\n    const ownerInfo: Owner = {\n      ...owner,\n      createdAt: new Date().toISOString(),\n    };\n    const docRef = this.userCollection.doc(userAccount.uid);\n    this.logger.info(`User Id => ${userAccount.uid}`);\n    await docRef.set(ownerInfo);\n\n    const info = await docRef.get();\n    if (info.exists) {\n      this.logger.info('Owner data => ', JSON.stringify(info.data(), null, 2));\n      return info.data();\n    }\n    throw new NotFoundException('No owner found with given id');\n  }\n\n  async findAllWorker(): Promise {\n    const snapshot = await this.userCollection.where('farmId', '==', this.request.user.farmId).get();\n\n    if (snapshot.empty) return [];\n    const workers: User[] = [];\n    snapshot.docs.forEach((worker) => {\n      workers.push(worker.data());\n    });\n\n    return workers;\n  }\n\n  async findOne(id: string): Promise {\n    const queryResult = await this.userCollection.doc(id).get();\n    return queryResult.data();\n  }\n\n  update() {\n    return null;\n  }\n\n  remove() {\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedResponseData.html":{"url":"classes/PaginatedResponseData.html","title":"class - PaginatedResponseData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedResponseData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/response.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                pagination\n                            \n                            \n                                    Optional\n                                result\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        pagination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pagination\n\n                    \n                \n                    \n                        \n                                Defined in src/core/response.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/core/response.model.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Pagination } from './pagination.model';\n\nclass PaginatedResponseData {\n  pagination?: Pagination;\n  result?: T;\n}\n\nexport class Response {\n  public success!: boolean;\n  public status!: number;\n  public message!: string;\n  public data?: PaginatedResponseData;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pagination.html":{"url":"classes/Pagination.html","title":"class - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/pagination.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                hasNextPage\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                lastIdCursor\n                            \n                            \n                                    \n                                    Public\n                                size\n                            \n                            \n                                    \n                                    Public\n                                total\n                            \n                            \n                                    \n                                    Public\n                                totalPages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        hasNextPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({name: 'hasNextPage'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/pagination.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        lastIdCursor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({name: 'lastIdCursor'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/pagination.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({name: 'size'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/pagination.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({name: 'total'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/pagination.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({name: 'totalPages'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/pagination.model.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { QuerySnapshot } from '@google-cloud/firestore';\nimport { Field, ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\nexport class Pagination {\n  @Field({ name: 'total' })\n  public total!: number;\n\n  @Field({ name: 'size' })\n  public size!: number;\n\n  @Field({ name: 'totalPages' })\n  public totalPages!: number;\n\n  @Field({ name: 'lastIdCursor' })\n  public lastIdCursor?: string;\n\n  @Field({ name: 'hasNextPage' })\n  public hasNextPage!: boolean;\n}\n\nexport class PaginationBuilder {\n  public build(snapshot: QuerySnapshot, size: number, lastId: string | undefined = undefined): Pagination {\n    return {\n      total: snapshot.size,\n      size,\n      lastIdCursor: lastId,\n      totalPages: Math.ceil(snapshot.size / size),\n      hasNextPage: snapshot.size > size,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationBuilder.html":{"url":"classes/PaginationBuilder.html","title":"class - PaginationBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/pagination.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                build\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        build\n                        \n                    \n                \n            \n            \n                \n                        \n                    build(snapshot: QuerySnapshot, size: number, lastId: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/pagination.model.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                snapshot\n                                            \n                                                        QuerySnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                lastId\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Pagination\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { QuerySnapshot } from '@google-cloud/firestore';\nimport { Field, ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\nexport class Pagination {\n  @Field({ name: 'total' })\n  public total!: number;\n\n  @Field({ name: 'size' })\n  public size!: number;\n\n  @Field({ name: 'totalPages' })\n  public totalPages!: number;\n\n  @Field({ name: 'lastIdCursor' })\n  public lastIdCursor?: string;\n\n  @Field({ name: 'hasNextPage' })\n  public hasNextPage!: boolean;\n}\n\nexport class PaginationBuilder {\n  public build(snapshot: QuerySnapshot, size: number, lastId: string | undefined = undefined): Pagination {\n    return {\n      total: snapshot.size,\n      size,\n      lastIdCursor: lastId,\n      totalPages: Math.ceil(snapshot.size / size),\n      hasNextPage: snapshot.size > size,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Payload.html":{"url":"classes/Payload.html","title":"class - Payload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/models/payload.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                farmId\n                            \n                            \n                                    Public\n                                roles\n                            \n                            \n                                    Public\n                                userId\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        farmId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/core/models/payload.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/core/models/payload.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/core/models/payload.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/core/models/payload.model.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\nexport class Payload {\n  public userId!: string;\n  public username!: string;\n  public farmId?: string;\n  public roles: string[] = [];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Response.html":{"url":"classes/Response.html","title":"class - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/response.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                data\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Public\n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PaginatedResponseData\n\n                    \n                \n                    \n                        \n                                Defined in src/core/response.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/core/response.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/core/response.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        success\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/core/response.model.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Pagination } from './pagination.model';\n\nclass PaginatedResponseData {\n  pagination?: Pagination;\n  result?: T;\n}\n\nexport class Response {\n  public success!: boolean;\n  public status!: number;\n  public message!: string;\n  public data?: PaginatedResponseData;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RestModule.html":{"url":"modules/RestModule.html","title":"module - RestModule","body":"\n                   \n\n\n\n\n    Modules\n    RestModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RestModule\n\n\n\ncluster_RestModule_exports\n\n\n\ncluster_RestModule_providers\n\n\n\n\nFarmService \n\nFarmService \n\n\n\nWorkerService \n\nWorkerService \n\n\n\nRestModule\n\nRestModule\n\nFarmService  -->\n\nRestModule->FarmService \n\n\n\nWorkerService  -->\n\nRestModule->WorkerService \n\n\n\n\n\nFarmRepository\n\nFarmRepository\n\nRestModule -->\n\nFarmRepository->RestModule\n\n\n\n\n\nFarmService\n\nFarmService\n\nRestModule -->\n\nFarmService->RestModule\n\n\n\n\n\nWorkerRepository\n\nWorkerRepository\n\nRestModule -->\n\nWorkerRepository->RestModule\n\n\n\n\n\nWorkerService\n\nWorkerService\n\nRestModule -->\n\nWorkerService->RestModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/rest/rest.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FarmRepository\n                        \n                        \n                            FarmService\n                        \n                        \n                            WorkerRepository\n                        \n                        \n                            WorkerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FarmController\n                        \n                        \n                            WorkerController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FarmService\n                        \n                        \n                            WorkerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { FarmMapperProfile } from '@mappers/farm.mapper-profile';\nimport { WorkerMapperProfile } from '@mappers/worker.mapper-profile';\nimport { HttpModule } from '@nestjs/axios';\nimport { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { FarmRepository } from '@repositories/farm.repository';\nimport { WorkerRepository } from '@repositories/worker.repository';\nimport { FarmService } from '@services/farm.service';\nimport { WorkerService } from '@services/worker.service';\n\nimport { FarmController, WorkerController } from './controllers';\n\n@Module({\n  imports: [TerminusModule, HttpModule],\n  providers: [FarmService, FarmRepository, WorkerService, WorkerRepository, WorkerMapperProfile, FarmMapperProfile],\n  exports: [FarmService, WorkerService],\n  controllers: [FarmController, WorkerController],\n})\nexport class RestModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/roles.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/guards/roles.guard.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { AuthService } from '@auth/auth.service';\nimport { Roles } from '@base/roles';\nimport { ROLES_KEY } from '@common/decorators';\nimport { CanActivate, ExecutionContext, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { GqlExecutionContext } from '@nestjs/graphql';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(\n    private reflector: Reflector,\n    private readonly authService: AuthService,\n  ) {}\n\n  public async canActivate(context: ExecutionContext): Promise {\n    const requiredRoles = this.reflector.getAllAndOverride(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    const ctx = GqlExecutionContext.create(context);\n\n    const request = ctx.getContext().req;\n    const { authorization } = request.headers;\n    if (!authorization || authorization.trim() === '') {\n      throw new UnauthorizedException('Please provide a token');\n    }\n    const authToken = authorization.replace(/bearer/gim, '').trim();\n    const resp = await this.authService.getPayload(authToken);\n\n    return requiredRoles.some((role) => resp.roles?.includes(role.toLowerCase()));\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SalaryHistory.html":{"url":"classes/SalaryHistory.html","title":"class - SalaryHistory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SalaryHistory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/models/worker.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                amount\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                date\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AutoMap } from '@automapper/classes';\nimport { BaseModel } from '@models/base.model';\n\nexport enum EmployeeStatus {\n  PART = 'Tiempo parcial',\n  FULL = 'Tiempo completo',\n  CONTRACTOR = 'Contratista',\n  TEMPORARY = 'Temporal',\n  INTERN = 'Practicas',\n  ASSOCIATE = 'Asociado',\n}\n\nexport class WorkerBenefits {\n  @AutoMap()\n  public bonus?: number;\n}\n\nexport class SalaryHistory {\n  @AutoMap()\n  public amount?: number;\n\n  @AutoMap()\n  public date?: string;\n}\n\nexport class WorkerSalaryDeduction {\n  @AutoMap()\n  public taxes?: number;\n\n  @AutoMap()\n  public insurance?: number;\n}\n\nexport class WorkerSalary {\n  @AutoMap()\n  public amount?: number;\n\n  @AutoMap()\n  public paid?: boolean;\n\n  @AutoMap()\n  public paymentDate?: string;\n\n  @AutoMap()\n  public currency?: string;\n\n  @AutoMap()\n  public bankInfo?: string;\n\n  @AutoMap()\n  public employeeStatus?: EmployeeStatus;\n\n  @AutoMap(() => WorkerSalaryDeduction)\n  public deductions?: WorkerSalaryDeduction;\n\n  @AutoMap(() => WorkerBenefits)\n  public benefits?: WorkerBenefits;\n\n  @AutoMap(() => [SalaryHistory])\n  public history?: SalaryHistory[];\n}\n\nexport class BankInfo {\n  @AutoMap()\n  public bankName?: string;\n\n  @AutoMap()\n  public isPrincipal?: boolean = false;\n\n  @AutoMap()\n  public isActive?: boolean;\n\n  @AutoMap()\n  public hasDebitCardAvailable?: boolean;\n\n  @AutoMap()\n  public accountNumber?: string;\n}\n\nexport class Worker extends BaseModel {\n  @AutoMap()\n  public id?: string;\n\n  @AutoMap()\n  public name?: string;\n\n  @AutoMap()\n  public phone?: string;\n\n  @AutoMap()\n  public email?: string;\n\n  @AutoMap()\n  public manager?: string;\n\n  @AutoMap()\n  public farmId?: string;\n\n  @AutoMap()\n  public roles!: string[];\n\n  @AutoMap()\n  public blackListed?: boolean = false;\n\n  @AutoMap()\n  public isActive?: boolean;\n\n  @AutoMap()\n  public isRegistered?: boolean = false;\n\n  @AutoMap()\n  public lastLoggedIn?: string;\n\n  @AutoMap(() => WorkerSalary)\n  public salary?: WorkerSalary;\n\n  @AutoMap(() => [BankInfo])\n  public bankInfo?: BankInfo[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SalaryHistoryDto.html":{"url":"classes/SalaryHistoryDto.html","title":"class - SalaryHistoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SalaryHistoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/dto/salary-history.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                amount\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                date\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/salary-history.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/salary-history.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AutoMap } from '@automapper/classes';\n\nexport class SalaryHistoryDto {\n  @AutoMap()\n  public amount?: number;\n\n  @AutoMap()\n  public date?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Sorting.html":{"url":"interfaces/Sorting.html","title":"interface - Sorting","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Sorting\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/decorators/sorting.decorator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            direction\n                                        \n                                \n                                \n                                        \n                                            property\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direction:     OrderByDirection | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OrderByDirection | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property:     string | FieldPath\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | FieldPath\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FieldPath, OrderByDirection } from '@firebase/firestore-types';\nimport { BadRequestException, createParamDecorator, ExecutionContext } from '@nestjs/common';\nimport { Request } from 'express';\n\nexport interface Sorting {\n  property: string | FieldPath;\n  direction: OrderByDirection | undefined;\n}\n\nexport const SortingParams = createParamDecorator((validParams, ctx: ExecutionContext): Sorting | null => {\n  const req: Request = ctx.switchToHttp().getRequest();\n  const sort = req.query['sort'];\n\n  if (!sort) return null;\n  if (!Array.isArray(validParams)) throw new BadRequestException('Invalid sort parameter');\n\n  const sortPattern = /^([a-zA-Z0-9]+):(asc|desc)$/;\n  if (!sort.match(sortPattern)) throw new BadRequestException('Invalid sort parameter');\n\n  const sortOptions = sort.split(':');\n  const property = sortOptions[0];\n  const direction: OrderByDirection = sortOptions[1];\n\n  if (!validParams.includes(property)) throw new BadRequestException(`Invalid sort property: ${property}`);\n\n  return { property, direction };\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnlinkFarmOwnerDto.html":{"url":"classes/UnlinkFarmOwnerDto.html","title":"class - UnlinkFarmOwnerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnlinkFarmOwnerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/dto/ublink-farm-owner.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                farmId\n                            \n                            \n                                    \n                                    \n                                    Public\n                                ownerId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        farmId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlphanumeric()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/ublink-farm-owner.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlphanumeric()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/ublink-farm-owner.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlphanumeric, IsNotEmpty } from 'class-validator';\n\nexport class UnlinkFarmOwnerDto {\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  public ownerId!: string;\n\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  public farmId!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnlinkFarmWorkerDto.html":{"url":"classes/UnlinkFarmWorkerDto.html","title":"class - UnlinkFarmWorkerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnlinkFarmWorkerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/dto/unlink-farm-worker.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                farmId\n                            \n                            \n                                    \n                                    \n                                    Public\n                                workerId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        farmId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlphanumeric()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/unlink-farm-worker.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        workerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlphanumeric()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/unlink-farm-worker.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlphanumeric, IsNotEmpty } from 'class-validator';\n\nexport class UnlinkFarmWorkerDto {\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  public workerId!: string;\n\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  public farmId!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/models/user.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                blackListed\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                country\n                            \n                            \n                                    \n                                    Public\n                                email\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                farms\n                            \n                            \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    Public\n                                phone\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                picture\n                            \n                            \n                                    \n                                    Public\n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        blackListed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/user.model.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/user.model.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/user.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        farms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/user.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/user.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/user.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/user.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        picture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/user.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/user.model.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AutoMap } from '@automapper/classes';\nimport { BaseModel } from '@models/base.model';\nimport { ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\nexport class User extends BaseModel {\n  @AutoMap()\n  public id!: string;\n\n  @AutoMap()\n  public name!: string;\n\n  @AutoMap()\n  public email!: string;\n\n  @AutoMap(() => Array)\n  public farms?: string[];\n\n  @AutoMap()\n  public picture?: string;\n\n  @AutoMap()\n  public phone!: string;\n\n  @AutoMap()\n  public country?: string;\n\n  @AutoMap()\n  public blackListed?: boolean;\n\n  @AutoMap()\n  public roles: string[] = [];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/dto/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                blackListed\n                            \n                            \n                                    \n                                    \n                                    Public\n                                country\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                countryCode\n                            \n                            \n                                    \n                                    \n                                    Public\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                farms\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    \n                                    Public\n                                phone\n                            \n                            \n                                    \n                                    \n                                    Public\n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        blackListed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/user.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({always: true})@AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        countryCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/user.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({always: true})@AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        farms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@AutoMap(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsUUID()@AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({always: true})@AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({always: true})@AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ArrayNotEmpty()@IsString({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/user.dto.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AutoMap } from '@automapper/classes';\nimport { ArrayNotEmpty, IsBoolean, IsOptional, IsString, IsUUID } from 'class-validator';\n\nexport class UserDto {\n  @IsString()\n  @IsUUID()\n  @AutoMap()\n  public id!: string;\n\n  @IsString({ always: true })\n  @AutoMap()\n  public name!: string;\n\n  @IsString({ always: true })\n  @AutoMap()\n  public email!: string;\n\n  @IsString({ always: true })\n  @AutoMap()\n  public phone!: string;\n\n  @IsString({ always: true })\n  @AutoMap()\n  public country!: string;\n\n  @IsString()\n  @IsOptional()\n  @AutoMap()\n  public countryCode?: string;\n\n  @IsString()\n  @IsOptional()\n  @AutoMap(() => Array)\n  public farms?: string[];\n\n  @IsBoolean()\n  @IsOptional()\n  public blackListed?: boolean;\n\n  @ArrayNotEmpty()\n  @IsString({ each: true })\n  public roles!: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: OwnerRepository)\n                    \n                \n                        \n                            \n                                Defined in src/core/services/user.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        OwnerRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: CreateOwnerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/services/user.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreateOwnerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CreateOwnerDto } from '@dtos/create-owner.dto';\nimport { User } from '@models/index';\nimport { Injectable } from '@nestjs/common';\nimport { OwnerRepository } from '@repositories/owner.repository';\n\n@Injectable()\nexport class UserService {\n  constructor(private readonly repository: OwnerRepository) {}\n\n  public async create(data: CreateOwnerDto): Promise {\n    return this.repository.createOwner(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilService.html":{"url":"injectables/UtilService.html","title":"injectable - UtilService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UtilService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/providers/util.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                line\n                            \n                            \n                                    Public\n                                pre\n                            \n                            \n                                    Public\n                                removeUndefined\n                            \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        line\n                        \n                    \n                \n            \n            \n                \n                        \n                    line(templateData: TemplateStringsArray, param: TemplateParameter)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/providers/util.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                templateData\n                                            \n                                                        TemplateStringsArray\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                param\n                                            \n                                                            TemplateParameter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pre\n                        \n                    \n                \n            \n            \n                \n                        \n                    pre(templateData: TemplateStringsArray, param: TemplateParameter)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/providers/util.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                templateData\n                                            \n                                                        TemplateStringsArray\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                param\n                                            \n                                                            TemplateParameter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeUndefined\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeUndefined(argv: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/providers/util.service.ts:32\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                argv\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Record\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        template\n                        \n                    \n                \n            \n            \n                \n                        \n                    template(templateData: TemplateStringsArray, param: T[], delimiter: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/providers/util.service.ts:8\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                templateData\n                                            \n                                                        TemplateStringsArray\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                param\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                delimiter\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '\\n'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype TemplateParameter = any[];\n\n@Injectable()\nexport class UtilService {\n  public template(templateData: TemplateStringsArray, param: T[], delimiter = '\\n'): string {\n    let output = '';\n    for (let i = 0; i  text.replace(/^\\s+/gm, ''))\n      .join(delimiter)\n      .trim();\n  }\n\n  public pre(templateData: TemplateStringsArray, ...param: TemplateParameter): string {\n    return this.template(templateData, param, '\\n');\n  }\n\n  public line(templateData: TemplateStringsArray, ...param: TemplateParameter): string {\n    return this.template(templateData, param, ' ');\n  }\n\n  public removeUndefined(argv: T): Record {\n    // https://stackoverflow.com/questions/25421233\n    // JSON.parse(JSON.stringify(args));\n    return Object.fromEntries(Object.entries(argv).filter(([, value]: [string, unknown]) => value !== undefined));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Worker.html":{"url":"classes/Worker.html","title":"class - Worker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Worker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/models/worker.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                bankInfo\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                blackListed\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                farmId\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                isActive\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                isRegistered\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                lastLoggedIn\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                manager\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                    Public\n                                roles\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                salary\n                            \n                            \n                                    \n                                    \n                                    Public\n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        bankInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BankInfo[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        blackListed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        farmId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        isRegistered\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        lastLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        manager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WorkerSalary\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : new Date().toISOString()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@AutoMap()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseModel\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseModel:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@IsString()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseModel\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseModel:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AutoMap } from '@automapper/classes';\nimport { BaseModel } from '@models/base.model';\n\nexport enum EmployeeStatus {\n  PART = 'Tiempo parcial',\n  FULL = 'Tiempo completo',\n  CONTRACTOR = 'Contratista',\n  TEMPORARY = 'Temporal',\n  INTERN = 'Practicas',\n  ASSOCIATE = 'Asociado',\n}\n\nexport class WorkerBenefits {\n  @AutoMap()\n  public bonus?: number;\n}\n\nexport class SalaryHistory {\n  @AutoMap()\n  public amount?: number;\n\n  @AutoMap()\n  public date?: string;\n}\n\nexport class WorkerSalaryDeduction {\n  @AutoMap()\n  public taxes?: number;\n\n  @AutoMap()\n  public insurance?: number;\n}\n\nexport class WorkerSalary {\n  @AutoMap()\n  public amount?: number;\n\n  @AutoMap()\n  public paid?: boolean;\n\n  @AutoMap()\n  public paymentDate?: string;\n\n  @AutoMap()\n  public currency?: string;\n\n  @AutoMap()\n  public bankInfo?: string;\n\n  @AutoMap()\n  public employeeStatus?: EmployeeStatus;\n\n  @AutoMap(() => WorkerSalaryDeduction)\n  public deductions?: WorkerSalaryDeduction;\n\n  @AutoMap(() => WorkerBenefits)\n  public benefits?: WorkerBenefits;\n\n  @AutoMap(() => [SalaryHistory])\n  public history?: SalaryHistory[];\n}\n\nexport class BankInfo {\n  @AutoMap()\n  public bankName?: string;\n\n  @AutoMap()\n  public isPrincipal?: boolean = false;\n\n  @AutoMap()\n  public isActive?: boolean;\n\n  @AutoMap()\n  public hasDebitCardAvailable?: boolean;\n\n  @AutoMap()\n  public accountNumber?: string;\n}\n\nexport class Worker extends BaseModel {\n  @AutoMap()\n  public id?: string;\n\n  @AutoMap()\n  public name?: string;\n\n  @AutoMap()\n  public phone?: string;\n\n  @AutoMap()\n  public email?: string;\n\n  @AutoMap()\n  public manager?: string;\n\n  @AutoMap()\n  public farmId?: string;\n\n  @AutoMap()\n  public roles!: string[];\n\n  @AutoMap()\n  public blackListed?: boolean = false;\n\n  @AutoMap()\n  public isActive?: boolean;\n\n  @AutoMap()\n  public isRegistered?: boolean = false;\n\n  @AutoMap()\n  public lastLoggedIn?: string;\n\n  @AutoMap(() => WorkerSalary)\n  public salary?: WorkerSalary;\n\n  @AutoMap(() => [BankInfo])\n  public bankInfo?: BankInfo[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WorkerBenefits.html":{"url":"classes/WorkerBenefits.html","title":"class - WorkerBenefits","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WorkerBenefits\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/models/worker.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                bonus\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        bonus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AutoMap } from '@automapper/classes';\nimport { BaseModel } from '@models/base.model';\n\nexport enum EmployeeStatus {\n  PART = 'Tiempo parcial',\n  FULL = 'Tiempo completo',\n  CONTRACTOR = 'Contratista',\n  TEMPORARY = 'Temporal',\n  INTERN = 'Practicas',\n  ASSOCIATE = 'Asociado',\n}\n\nexport class WorkerBenefits {\n  @AutoMap()\n  public bonus?: number;\n}\n\nexport class SalaryHistory {\n  @AutoMap()\n  public amount?: number;\n\n  @AutoMap()\n  public date?: string;\n}\n\nexport class WorkerSalaryDeduction {\n  @AutoMap()\n  public taxes?: number;\n\n  @AutoMap()\n  public insurance?: number;\n}\n\nexport class WorkerSalary {\n  @AutoMap()\n  public amount?: number;\n\n  @AutoMap()\n  public paid?: boolean;\n\n  @AutoMap()\n  public paymentDate?: string;\n\n  @AutoMap()\n  public currency?: string;\n\n  @AutoMap()\n  public bankInfo?: string;\n\n  @AutoMap()\n  public employeeStatus?: EmployeeStatus;\n\n  @AutoMap(() => WorkerSalaryDeduction)\n  public deductions?: WorkerSalaryDeduction;\n\n  @AutoMap(() => WorkerBenefits)\n  public benefits?: WorkerBenefits;\n\n  @AutoMap(() => [SalaryHistory])\n  public history?: SalaryHistory[];\n}\n\nexport class BankInfo {\n  @AutoMap()\n  public bankName?: string;\n\n  @AutoMap()\n  public isPrincipal?: boolean = false;\n\n  @AutoMap()\n  public isActive?: boolean;\n\n  @AutoMap()\n  public hasDebitCardAvailable?: boolean;\n\n  @AutoMap()\n  public accountNumber?: string;\n}\n\nexport class Worker extends BaseModel {\n  @AutoMap()\n  public id?: string;\n\n  @AutoMap()\n  public name?: string;\n\n  @AutoMap()\n  public phone?: string;\n\n  @AutoMap()\n  public email?: string;\n\n  @AutoMap()\n  public manager?: string;\n\n  @AutoMap()\n  public farmId?: string;\n\n  @AutoMap()\n  public roles!: string[];\n\n  @AutoMap()\n  public blackListed?: boolean = false;\n\n  @AutoMap()\n  public isActive?: boolean;\n\n  @AutoMap()\n  public isRegistered?: boolean = false;\n\n  @AutoMap()\n  public lastLoggedIn?: string;\n\n  @AutoMap(() => WorkerSalary)\n  public salary?: WorkerSalary;\n\n  @AutoMap(() => [BankInfo])\n  public bankInfo?: BankInfo[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WorkerBenefitsDto.html":{"url":"classes/WorkerBenefitsDto.html","title":"class - WorkerBenefitsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WorkerBenefitsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/dto/worker-benefits.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                bonus\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        bonus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/worker-benefits.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AutoMap } from '@automapper/classes';\n\nexport class WorkerBenefitsDto {\n  @AutoMap()\n  public bonus?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/WorkerController.html":{"url":"controllers/WorkerController.html","title":"controller - WorkerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  WorkerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rest/controllers/worker.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                worker\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                createWorker\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                getAllWorkers\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                getAllWorkersByFarmId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                getWorker\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                updateWorkerInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        createWorker\n                        \n                    \n                \n            \n            \n                \n                        \n                    createWorker(data: WorkerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Role(Roles.ADMIN, Roles.OWNER)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/rest/controllers/worker.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            WorkerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        getAllWorkers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllWorkers(pagination: Pagination, sort: Sorting, filter: Filtering)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Role(Roles.ADMIN, Roles.OWNER)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/rest/controllers/worker.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pagination\n                                            \n                                                            Pagination\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sort\n                                            \n                                                            Sorting\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filter\n                                            \n                                                            Filtering\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        getAllWorkersByFarmId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllWorkersByFarmId(pagination: Pagination, sort: Sorting, filter: Filtering)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('farm')@Role(Roles.ADMIN, Roles.OWNER)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/rest/controllers/worker.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pagination\n                                            \n                                                            Pagination\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sort\n                                            \n                                                            Sorting\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filter\n                                            \n                                                            Filtering\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        getWorker\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWorker(filter: Filtering)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Role(Roles.ADMIN, Roles.OWNER)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/rest/controllers/worker.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            Filtering\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        updateWorkerInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateWorkerInfo(data: WorkerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()@Role(Roles.ADMIN, Roles.OWNER)@UseGuards(RolesGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/rest/controllers/worker.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            WorkerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Roles } from '@base/roles';\nimport { Role } from '@common/decorators';\nimport { RolesGuard } from '@common/guards';\nimport { Filtering, FilteringParams } from '@decorators/filtering.decorator';\nimport { Pagination, PaginationParams } from '@decorators/pagination.decorator';\nimport { Sorting, SortingParams } from '@decorators/sorting.decorator';\nimport { WorkerDto } from '@dtos/worker.dto';\nimport { Body, Controller, Get, Post, Put, UseGuards } from '@nestjs/common';\nimport { WorkerService } from '@services/worker.service';\nimport { FirebaseAuthGuard } from '@whitecloak/nestjs-passport-firebase';\nimport { InjectPinoLogger, PinoLogger } from 'nestjs-pino';\n\nimport { ApiResponseBuilder } from '../../core/response/api-response.builder';\nimport { Response } from '../../core/response.model';\n\n@Controller('worker')\n@UseGuards(FirebaseAuthGuard)\nexport class WorkerController {\n  constructor(\n    @InjectPinoLogger() private readonly logger: PinoLogger,\n    private readonly service: WorkerService,\n  ) {}\n\n  @Get()\n  @Role(Roles.ADMIN, Roles.OWNER)\n  @UseGuards(RolesGuard)\n  public async getAllWorkers(\n    @PaginationParams() pagination: Pagination,\n    @SortingParams(['name']) sort: Sorting,\n    @FilteringParams(['name']) filter: Filtering,\n  ): Promise> {\n    this.logger.info('Get All Worker');\n    return this.service.getAll(pagination, sort, filter);\n  }\n\n  @Get('farm')\n  @Role(Roles.ADMIN, Roles.OWNER)\n  @UseGuards(RolesGuard)\n  public async getAllWorkersByFarmId(\n    @PaginationParams() pagination: Pagination,\n    @SortingParams(['name']) sort: Sorting,\n    @FilteringParams(['farms']) filter: Filtering,\n  ): Promise> {\n    this.logger.info(`Get All Worker by Farm (${filter.value}`);\n    return this.service.getAllWorkerByFarm(pagination, sort, filter);\n  }\n\n  @Get()\n  @Role(Roles.ADMIN, Roles.OWNER)\n  @UseGuards(RolesGuard)\n  public async getWorker(@FilteringParams(['name']) filter: Filtering): Promise> {\n    this.logger.info(`Get Worker by ID => (${filter.value}`);\n    return this.service.getWorker(filter);\n  }\n\n  @Post()\n  @Role(Roles.ADMIN, Roles.OWNER)\n  @UseGuards(RolesGuard)\n  public async createWorker(@Body() data: WorkerDto): Promise> {\n    return this.service.createWorker(data);\n  }\n\n  @Put()\n  @Role(Roles.ADMIN, Roles.OWNER)\n  @UseGuards(RolesGuard)\n  public async updateWorkerInfo(@Body() data: WorkerDto): Promise> {\n    this.logger.info(`====> ${JSON.stringify(data, null, 2)}`);\n    await this.service.updateWorkInfo(data);\n    return ApiResponseBuilder.notFound();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WorkerDto.html":{"url":"classes/WorkerDto.html","title":"class - WorkerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WorkerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/dto/worker.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                bankInfo\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                blackListed\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                farms\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                isActive\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                isRegistered\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                lastLoggedIn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                manager\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                    \n                                    Public\n                                roles\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                salary\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        bankInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BankInfoDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/worker.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        blackListed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/worker.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/worker.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        farms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap(undefined)@IsOptional()@IsAlphanumeric()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/worker.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/worker.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/worker.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        isRegistered\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/worker.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        lastLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/worker.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        manager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@IsOptional()@IsAlphanumeric()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/worker.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/worker.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/worker.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@IsString({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/worker.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WorkerSalaryDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/worker.dto.ts:61\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AutoMap } from '@automapper/classes';\nimport { BankInfoDto } from '@dtos/bank-info.dto';\nimport { WorkerSalaryDto } from '@dtos/worker-salary.dto';\nimport { IsAlphanumeric, IsBoolean, IsDateString, IsEmail, IsOptional, IsString } from 'class-validator';\n\nexport class WorkerDto {\n  @AutoMap()\n  @IsOptional()\n  public id?: string;\n\n  @AutoMap()\n  @IsOptional()\n  @IsString()\n  public name?: string;\n\n  @AutoMap()\n  @IsOptional()\n  @IsString()\n  public phone?: string;\n\n  @AutoMap()\n  @IsOptional()\n  @IsEmail()\n  public email?: string;\n\n  @AutoMap()\n  @IsOptional()\n  @IsAlphanumeric()\n  public manager?: string;\n\n  @AutoMap(() => Array)\n  @IsOptional()\n  @IsAlphanumeric()\n  public farms?: string[];\n\n  @AutoMap()\n  @IsString({ each: true })\n  public roles!: string[];\n\n  @AutoMap()\n  @IsOptional()\n  @IsBoolean()\n  public blackListed?: boolean = false;\n\n  @AutoMap()\n  @IsOptional()\n  @IsBoolean()\n  public isActive?: boolean;\n\n  @AutoMap()\n  @IsOptional()\n  @IsBoolean()\n  public isRegistered?: boolean = false;\n\n  @AutoMap()\n  @IsOptional()\n  @IsDateString()\n  public lastLoggedIn?: string;\n\n  @AutoMap(() => WorkerSalaryDto)\n  public salary?: WorkerSalaryDto;\n\n  @AutoMap(() => [BankInfoDto])\n  public bankInfo?: BankInfoDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WorkerMapperProfile.html":{"url":"classes/WorkerMapperProfile.html","title":"class - WorkerMapperProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WorkerMapperProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/mappers/worker.mapper-profile.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AutomapperProfile\n            \n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    profile\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mapper: Mapper)\n                    \n                \n                        \n                            \n                                Defined in src/core/mappers/worker.mapper-profile.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapper\n                                                  \n                                                        \n                                                                    Mapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        profile\n                    \n                \n\n                \n                    \n                        getprofile()\n                    \n                \n                            \n                                \n                                    Defined in src/core/mappers/worker.mapper-profile.ts:11\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { createMap, forMember, ignore, Mapper } from '@automapper/core';\nimport { WorkerDto } from '@dtos/worker.dto';\nimport { Worker } from '@models/worker.model';\nimport { AutomapperProfile, InjectMapper } from '@timonmasberg/automapper-nestjs';\n\nexport class WorkerMapperProfile extends AutomapperProfile {\n  constructor(@InjectMapper() mapper: Mapper) {\n    super(mapper);\n  }\n\n  override get profile() {\n    return (mapper: Mapper) => {\n      createMap(mapper, WorkerDto, Worker);\n      createMap(\n        mapper,\n        WorkerDto,\n        Worker,\n        forMember((dest: Worker) => dest.id, ignore()),\n      );\n      createMap(mapper, Worker, WorkerDto);\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkerRepository.html":{"url":"injectables/WorkerRepository.html","title":"injectable - WorkerRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WorkerRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/repositories/worker.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createWorker\n                            \n                            \n                                    Public\n                                    Async\n                                getAllWorkerByFarmId\n                            \n                            \n                                    Public\n                                    Async\n                                getAllWorkers\n                            \n                            \n                                    Public\n                                    Async\n                                getWorker\n                            \n                            \n                                    Public\n                                    Async\n                                updateWorkInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: PinoLogger, workerCollection: CollectionReference, mapper: Mapper)\n                    \n                \n                        \n                            \n                                Defined in src/core/repositories/worker.repository.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    PinoLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        workerCollection\n                                                  \n                                                        \n                                                                        CollectionReference\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapper\n                                                  \n                                                        \n                                                                    Mapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createWorker\n                        \n                    \n                \n            \n            \n                \n                        \n                    createWorker(data: WorkerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/repositories/worker.repository.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            WorkerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getAllWorkerByFarmId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllWorkerByFarmId(pagination: Pagination, sort?: Sorting, filter?: Filtering)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/repositories/worker.repository.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pagination\n                                            \n                                                            Pagination\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sort\n                                            \n                                                            Sorting\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                filter\n                                            \n                                                            Filtering\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getAllWorkers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllWorkers(pagination: Pagination, sort?: Sorting, filter?: Filtering)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/repositories/worker.repository.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pagination\n                                            \n                                                            Pagination\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sort\n                                            \n                                                            Sorting\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                filter\n                                            \n                                                            Filtering\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getWorker\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWorker(filter: Filtering)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/repositories/worker.repository.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            Filtering\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateWorkInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateWorkInfo(data: WorkerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/repositories/worker.repository.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            WorkerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Mapper } from '@automapper/core';\nimport { Filtering } from '@decorators/filtering.decorator';\nimport { Pagination } from '@decorators/pagination.decorator';\nimport { Sorting } from '@decorators/sorting.decorator';\nimport { WorkerDto } from '@dtos/worker.dto';\nimport { Collections } from '@enums/collections';\nimport { CollectionReference, QueryDocumentSnapshot, QuerySnapshot } from '@google-cloud/firestore';\nimport { autoId } from '@google-cloud/firestore/build/src/util';\nimport { Worker } from '@models/worker.model';\nimport { Inject, Injectable } from '@nestjs/common';\nimport { InjectMapper } from '@timonmasberg/automapper-nestjs';\nimport { InjectPinoLogger, PinoLogger } from 'nestjs-pino';\n\nimport { PaginationBuilder } from '../pagination.model';\nimport { ApiResponseBuilder } from '../response/api-response.builder';\nimport { Response } from '../response.model';\n\n@Injectable()\nexport class WorkerRepository {\n  constructor(\n    @InjectPinoLogger() private readonly logger: PinoLogger,\n    @Inject(Collections.WORKERS) private workerCollection: CollectionReference,\n    @InjectMapper() private readonly mapper: Mapper,\n  ) {}\n\n  public async getAllWorkers(\n    pagination: Pagination,\n    sort?: Sorting,\n    filter?: Filtering,\n  ): Promise> {\n    this.logger.info('');\n    this.logger.info(\n      `Parameters : (Pagination ${JSON.stringify(pagination)}) - (Sort ${JSON.stringify(\n        sort,\n      )}) - (Filter ${JSON.stringify(filter)})`,\n    );\n    this.logger.info('');\n\n    const { lastDoc, limit } = pagination;\n    let query = this.workerCollection.limit(limit);\n    if (sort) query = query.orderBy(sort.property, sort.direction);\n    if (filter) query = query.where(filter.property, filter.rule, filter.value);\n\n    if (lastDoc) {\n      const lastSnapshot = await this.workerCollection.doc(lastDoc).get();\n      query = query.startAfter(lastSnapshot);\n    }\n\n    const response = await query.get();\n    const snapshot: QuerySnapshot = await this.workerCollection.get();\n    if (!response.empty) {\n      const workers = response.docs.map((doc: QueryDocumentSnapshot) => doc.data());\n      const workersDto = this.mapper.mapArray(workers, Worker, WorkerDto);\n      const lastId = response.docs.length === limit ? response.docs[limit - 1].id : undefined;\n      const resultPagination = new PaginationBuilder().build(snapshot, limit, lastId);\n\n      return ApiResponseBuilder.success(200, 'All done!', workersDto, resultPagination);\n    }\n    return ApiResponseBuilder.notFound();\n  }\n\n  public async getAllWorkerByFarmId(\n    pagination: Pagination,\n    sort?: Sorting,\n    filter?: Filtering,\n  ): Promise> {\n    this.logger.info('');\n    this.logger.info(`Pagination : ${JSON.stringify(pagination)}`);\n    this.logger.info(`Filtering : ${JSON.stringify(filter)}`);\n    this.logger.info(`Sorting : ${JSON.stringify(sort)}`);\n    this.logger.info('');\n\n    const { limit, lastDoc } = pagination;\n\n    let query = this.workerCollection.limit(limit);\n    if (sort) query = query.orderBy(sort.property, sort.direction);\n    if (filter) query = query.where(filter.property, filter.rule, filter.value);\n\n    if (lastDoc) {\n      const lastSnapshot = await this.workerCollection.doc(lastDoc).get();\n      query = query.startAfter(lastSnapshot);\n    }\n\n    const response = await query.get();\n    const snapshot = await this.workerCollection.get();\n    if (!response.empty) {\n      const workers = response.docs.map((doc: QueryDocumentSnapshot) => doc.data());\n      const workersDto = this.mapper.mapArray(workers, Worker, WorkerDto);\n      const lastId = response.docs.length === limit ? response.docs[limit - 1].id : undefined;\n      const resultPagination = new PaginationBuilder().build(snapshot, limit, lastId);\n\n      return ApiResponseBuilder.success(200, 'All done!', workersDto, resultPagination);\n    }\n    return ApiResponseBuilder.notFound();\n  }\n\n  public async getWorker(filter: Filtering): Promise> {\n    this.logger.info('');\n    this.logger.info(`Filtering : ${JSON.stringify(filter)}`);\n    this.logger.info('');\n\n    const query = await this.workerCollection\n      .limit(1)\n      .orderBy('name', 'asc')\n      .where(filter.property, filter.rule, filter.value)\n      .get();\n\n    if (!query.empty) {\n      const worker = query.docs[0].data();\n      const workerDto = this.mapper.map(worker, Worker, WorkerDto);\n      return ApiResponseBuilder.success(200, 'Done', workerDto);\n    }\n    return ApiResponseBuilder.notFound();\n  }\n\n  public async createWorker(data: WorkerDto): Promise> {\n    try {\n      this.logger.info('');\n      this.logger.info(`Worker => ${JSON.stringify(data, null, 2)}`);\n      this.logger.info('');\n      const workerData = this.mapper.map(data, WorkerDto, Worker);\n      this.logger.info(`Worker Data => ${JSON.stringify(workerData, null, 2)}`);\n      this.logger.info('');\n\n      const workerId = autoId();\n      const workerInfo: Worker = {\n        ...workerData,\n        id: workerId,\n        createdAt: new Date().toISOString(),\n      };\n      await this.workerCollection.doc(workerId).set(workerInfo);\n\n      const info = await this.workerCollection.doc(workerId).get();\n      if (info.exists) return ApiResponseBuilder.success(201, 'Created', info.data());\n      return ApiResponseBuilder.notFound();\n    } catch (e: any) {\n      return ApiResponseBuilder.withError(500, e.message);\n    }\n  }\n\n  public async updateWorkInfo(data: WorkerDto): Promise> {\n    this.logger.info(JSON.stringify(data, null, 2));\n    await Promise.resolve();\n    return ApiResponseBuilder.notFound();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WorkerSalary.html":{"url":"classes/WorkerSalary.html","title":"class - WorkerSalary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WorkerSalary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/models/worker.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                amount\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                bankInfo\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                benefits\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                currency\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                deductions\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                employeeStatus\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                history\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                paid\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                paymentDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        bankInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        benefits\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WorkerBenefits\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        deductions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WorkerSalaryDeduction\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        employeeStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EmployeeStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SalaryHistory[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        paid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        paymentDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AutoMap } from '@automapper/classes';\nimport { BaseModel } from '@models/base.model';\n\nexport enum EmployeeStatus {\n  PART = 'Tiempo parcial',\n  FULL = 'Tiempo completo',\n  CONTRACTOR = 'Contratista',\n  TEMPORARY = 'Temporal',\n  INTERN = 'Practicas',\n  ASSOCIATE = 'Asociado',\n}\n\nexport class WorkerBenefits {\n  @AutoMap()\n  public bonus?: number;\n}\n\nexport class SalaryHistory {\n  @AutoMap()\n  public amount?: number;\n\n  @AutoMap()\n  public date?: string;\n}\n\nexport class WorkerSalaryDeduction {\n  @AutoMap()\n  public taxes?: number;\n\n  @AutoMap()\n  public insurance?: number;\n}\n\nexport class WorkerSalary {\n  @AutoMap()\n  public amount?: number;\n\n  @AutoMap()\n  public paid?: boolean;\n\n  @AutoMap()\n  public paymentDate?: string;\n\n  @AutoMap()\n  public currency?: string;\n\n  @AutoMap()\n  public bankInfo?: string;\n\n  @AutoMap()\n  public employeeStatus?: EmployeeStatus;\n\n  @AutoMap(() => WorkerSalaryDeduction)\n  public deductions?: WorkerSalaryDeduction;\n\n  @AutoMap(() => WorkerBenefits)\n  public benefits?: WorkerBenefits;\n\n  @AutoMap(() => [SalaryHistory])\n  public history?: SalaryHistory[];\n}\n\nexport class BankInfo {\n  @AutoMap()\n  public bankName?: string;\n\n  @AutoMap()\n  public isPrincipal?: boolean = false;\n\n  @AutoMap()\n  public isActive?: boolean;\n\n  @AutoMap()\n  public hasDebitCardAvailable?: boolean;\n\n  @AutoMap()\n  public accountNumber?: string;\n}\n\nexport class Worker extends BaseModel {\n  @AutoMap()\n  public id?: string;\n\n  @AutoMap()\n  public name?: string;\n\n  @AutoMap()\n  public phone?: string;\n\n  @AutoMap()\n  public email?: string;\n\n  @AutoMap()\n  public manager?: string;\n\n  @AutoMap()\n  public farmId?: string;\n\n  @AutoMap()\n  public roles!: string[];\n\n  @AutoMap()\n  public blackListed?: boolean = false;\n\n  @AutoMap()\n  public isActive?: boolean;\n\n  @AutoMap()\n  public isRegistered?: boolean = false;\n\n  @AutoMap()\n  public lastLoggedIn?: string;\n\n  @AutoMap(() => WorkerSalary)\n  public salary?: WorkerSalary;\n\n  @AutoMap(() => [BankInfo])\n  public bankInfo?: BankInfo[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WorkerSalaryDeduction.html":{"url":"classes/WorkerSalaryDeduction.html","title":"class - WorkerSalaryDeduction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WorkerSalaryDeduction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/models/worker.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                insurance\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                taxes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        insurance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        taxes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/models/worker.model.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AutoMap } from '@automapper/classes';\nimport { BaseModel } from '@models/base.model';\n\nexport enum EmployeeStatus {\n  PART = 'Tiempo parcial',\n  FULL = 'Tiempo completo',\n  CONTRACTOR = 'Contratista',\n  TEMPORARY = 'Temporal',\n  INTERN = 'Practicas',\n  ASSOCIATE = 'Asociado',\n}\n\nexport class WorkerBenefits {\n  @AutoMap()\n  public bonus?: number;\n}\n\nexport class SalaryHistory {\n  @AutoMap()\n  public amount?: number;\n\n  @AutoMap()\n  public date?: string;\n}\n\nexport class WorkerSalaryDeduction {\n  @AutoMap()\n  public taxes?: number;\n\n  @AutoMap()\n  public insurance?: number;\n}\n\nexport class WorkerSalary {\n  @AutoMap()\n  public amount?: number;\n\n  @AutoMap()\n  public paid?: boolean;\n\n  @AutoMap()\n  public paymentDate?: string;\n\n  @AutoMap()\n  public currency?: string;\n\n  @AutoMap()\n  public bankInfo?: string;\n\n  @AutoMap()\n  public employeeStatus?: EmployeeStatus;\n\n  @AutoMap(() => WorkerSalaryDeduction)\n  public deductions?: WorkerSalaryDeduction;\n\n  @AutoMap(() => WorkerBenefits)\n  public benefits?: WorkerBenefits;\n\n  @AutoMap(() => [SalaryHistory])\n  public history?: SalaryHistory[];\n}\n\nexport class BankInfo {\n  @AutoMap()\n  public bankName?: string;\n\n  @AutoMap()\n  public isPrincipal?: boolean = false;\n\n  @AutoMap()\n  public isActive?: boolean;\n\n  @AutoMap()\n  public hasDebitCardAvailable?: boolean;\n\n  @AutoMap()\n  public accountNumber?: string;\n}\n\nexport class Worker extends BaseModel {\n  @AutoMap()\n  public id?: string;\n\n  @AutoMap()\n  public name?: string;\n\n  @AutoMap()\n  public phone?: string;\n\n  @AutoMap()\n  public email?: string;\n\n  @AutoMap()\n  public manager?: string;\n\n  @AutoMap()\n  public farmId?: string;\n\n  @AutoMap()\n  public roles!: string[];\n\n  @AutoMap()\n  public blackListed?: boolean = false;\n\n  @AutoMap()\n  public isActive?: boolean;\n\n  @AutoMap()\n  public isRegistered?: boolean = false;\n\n  @AutoMap()\n  public lastLoggedIn?: string;\n\n  @AutoMap(() => WorkerSalary)\n  public salary?: WorkerSalary;\n\n  @AutoMap(() => [BankInfo])\n  public bankInfo?: BankInfo[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WorkerSalaryDeductionsDto.html":{"url":"classes/WorkerSalaryDeductionsDto.html","title":"class - WorkerSalaryDeductionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WorkerSalaryDeductionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/dto/worker-salary-deductions.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                insurance\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                taxes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        insurance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/worker-salary-deductions.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        taxes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/worker-salary-deductions.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AutoMap } from '@automapper/classes';\n\nexport class WorkerSalaryDeductionsDto {\n  @AutoMap()\n  public taxes?: number;\n\n  @AutoMap()\n  public insurance?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WorkerSalaryDto.html":{"url":"classes/WorkerSalaryDto.html","title":"class - WorkerSalaryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WorkerSalaryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/dto/worker-salary.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                amount\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                bankInfo\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                benefits\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                currency\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                deductions\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                employeeStatus\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                history\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                paid\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                paymentDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/worker-salary.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        bankInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/worker-salary.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        benefits\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WorkerBenefitsDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/worker-salary.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/worker-salary.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        deductions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WorkerSalaryDeductionsDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/worker-salary.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        employeeStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EmployeeStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/worker-salary.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SalaryHistoryDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/worker-salary.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        paid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/worker-salary.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        paymentDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/worker-salary.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AutoMap } from '@automapper/classes';\nimport { SalaryHistoryDto } from '@dtos/salary-history.dto';\nimport { WorkerBenefitsDto } from '@dtos/worker-benefits.dto';\nimport { WorkerSalaryDeductionsDto } from '@dtos/worker-salary-deductions.dto';\nimport { EmployeeStatus } from '@models/worker.model';\n\nexport class WorkerSalaryDto {\n  @AutoMap()\n  public amount?: number;\n\n  @AutoMap()\n  public paid?: boolean;\n\n  @AutoMap()\n  public paymentDate?: string;\n\n  @AutoMap()\n  public currency?: string;\n\n  @AutoMap()\n  public bankInfo?: string;\n\n  @AutoMap()\n  public employeeStatus?: EmployeeStatus;\n\n  @AutoMap(() => WorkerSalaryDeductionsDto)\n  public deductions?: WorkerSalaryDeductionsDto;\n\n  @AutoMap(() => WorkerBenefitsDto)\n  public benefits?: WorkerBenefitsDto;\n\n  @AutoMap(() => [SalaryHistoryDto])\n  public history?: SalaryHistoryDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkerService.html":{"url":"injectables/WorkerService.html","title":"injectable - WorkerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WorkerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/services/worker.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createWorker\n                            \n                            \n                                    Public\n                                    Async\n                                getAll\n                            \n                            \n                                    Public\n                                    Async\n                                getAllWorkerByFarm\n                            \n                            \n                                    Public\n                                    Async\n                                getWorker\n                            \n                            \n                                    Public\n                                    Async\n                                updateWorkInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: PinoLogger, repository: WorkerRepository)\n                    \n                \n                        \n                            \n                                Defined in src/core/services/worker.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    PinoLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        WorkerRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createWorker\n                        \n                    \n                \n            \n            \n                \n                        \n                    createWorker(data: WorkerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/services/worker.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            WorkerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(pagination: Pagination, sort: Sorting, filter: Filtering)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/services/worker.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pagination\n                                            \n                                                            Pagination\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sort\n                                            \n                                                            Sorting\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filter\n                                            \n                                                            Filtering\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getAllWorkerByFarm\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllWorkerByFarm(pagination: Pagination, sort: Sorting, filter: Filtering)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/services/worker.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pagination\n                                            \n                                                            Pagination\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sort\n                                            \n                                                            Sorting\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filter\n                                            \n                                                            Filtering\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getWorker\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWorker(filter: Filtering)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/services/worker.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            Filtering\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateWorkInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateWorkInfo(data: WorkerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/services/worker.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            WorkerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Filtering } from '@decorators/filtering.decorator';\nimport { Pagination } from '@decorators/pagination.decorator';\nimport { Sorting } from '@decorators/sorting.decorator';\nimport { WorkerDto } from '@dtos/worker.dto';\nimport { Injectable } from '@nestjs/common';\nimport { WorkerRepository } from '@repositories/worker.repository';\nimport { InjectPinoLogger, PinoLogger } from 'nestjs-pino';\n\nimport { Response } from '../response.model';\n\n@Injectable()\nexport class WorkerService {\n  constructor(\n    @InjectPinoLogger() private readonly logger: PinoLogger,\n    private readonly repository: WorkerRepository,\n  ) {}\n\n  public async getAll(pagination: Pagination, sort: Sorting, filter: Filtering): Promise> {\n    const response = await this.repository.getAllWorkers(pagination, sort, filter);\n    this.logger.info(``);\n    this.logger.info(`[Workers] => ${JSON.stringify(response, null, 2)}`);\n    this.logger.info(``);\n\n    return response;\n  }\n\n  public async getAllWorkerByFarm(\n    pagination: Pagination,\n    sort: Sorting,\n    filter: Filtering,\n  ): Promise> {\n    return this.repository.getAllWorkerByFarmId(pagination, sort, filter);\n  }\n\n  public async getWorker(filter: Filtering): Promise> {\n    return this.repository.getWorker(filter);\n  }\n\n  public async createWorker(data: WorkerDto): Promise> {\n    return this.repository.createWorker(data);\n  }\n\n  public async updateWorkInfo(data: WorkerDto): Promise> {\n    return this.repository.updateWorkInfo(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.middleware.ts\n            \n            function\n            middleware\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.ts\n            \n            variable\n            api\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.ts\n            \n            variable\n            createFunctions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.ts\n            \n            variable\n            expressServer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.ts\n            \n            variable\n            firestore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.ts\n            \n            variable\n            IS_EMULATOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.ts\n            \n            variable\n            serviceAccount\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.interface.ts\n            \n            interface\n            Account\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/auth.interface.ts\n            \n            interface\n            Payload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.serializer.ts\n            \n            injectable\n            AuthSerializer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/guards/authenticated.guard.ts\n            \n            guard\n            AuthenticatedGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/strategies/firebase-auth.strategy.ts\n            \n            class\n            FirebaseAuthStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/base/controllers/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/base/controllers/health.controller.ts\n            \n            controller\n            HealthController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/common/common.module.ts\n            \n            variable\n            services\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/db/firestore.module.ts\n            \n            interface\n            FirestoreModuleOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/db/firestore.provider.ts\n            \n            variable\n            FirestoreCollectionProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/db/firestore.provider.ts\n            \n            variable\n            FirestoreDatabaseProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/db/firestore.provider.ts\n            \n            variable\n            FirestoreOptionsProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/filtering.decorator.ts\n            \n            interface\n            Filtering\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/decorators/filtering.decorator.ts\n            \n            variable\n            FilteringParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/gql-auth.guard.ts\n            \n            injectable\n            GqlAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/decorators/pagination.decorator.ts\n            \n            interface\n            Pagination\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/decorators/pagination.decorator.ts\n            \n            variable\n            PaginationParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/req-user.decorator.ts\n            \n            variable\n            ReqUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/role.decorator.ts\n            \n            variable\n            Role\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/role.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/sorting.decorator.ts\n            \n            interface\n            Sorting\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/decorators/sorting.decorator.ts\n            \n            variable\n            SortingParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/filters/exceptions.filter.ts\n            \n            class\n            ExceptionsFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/middleware/logger-context.middleware.ts\n            \n            injectable\n            LoggerContextMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/providers/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/providers/util.service.ts\n            \n            injectable\n            UtilService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/utils/string.utils.ts\n            \n            function\n            capitalize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            variable\n            configuration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            variable\n            util\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/envs/default.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/envs/development.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/envs/production.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/envs/test.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/logger.config.ts\n            \n            variable\n            loggerOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/logger.config.ts\n            \n            variable\n            passUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/dto/bank-info.dto.ts\n            \n            class\n            BankInfoDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/dto/create-owner.dto.ts\n            \n            class\n            CreateOwnerDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/core/dto/farm.dto.ts\n            \n            class\n            FarmDto\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/core/dto/link-farm-owner.dto.ts\n            \n            class\n            LinkFarmOwnerDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/dto/link-farm-worker.dto.ts\n            \n            class\n            LinkFarmWorkerDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/dto/salary-history.dto.ts\n            \n            class\n            SalaryHistoryDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/dto/ublink-farm-owner.dto.ts\n            \n            class\n            UnlinkFarmOwnerDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/dto/unlink-farm-worker.dto.ts\n            \n            class\n            UnlinkFarmWorkerDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/core/dto/worker-benefits.dto.ts\n            \n            class\n            WorkerBenefitsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/dto/worker-salary-deductions.dto.ts\n            \n            class\n            WorkerSalaryDeductionsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/dto/worker-salary.dto.ts\n            \n            class\n            WorkerSalaryDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/core/dto/worker.dto.ts\n            \n            class\n            WorkerDto\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/core/email.service.ts\n            \n            injectable\n            EmailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/mappers/farm.mapper-profile.ts\n            \n            class\n            FarmMapperProfile\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/mappers/worker.mapper-profile.ts\n            \n            class\n            WorkerMapperProfile\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/models/base.model.ts\n            \n            class\n            BaseModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/models/farm.model.ts\n            \n            class\n            Farm\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/core/models/owner.model.ts\n            \n            class\n            Owner\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/core/models/payload.model.ts\n            \n            class\n            Payload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/core/models/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/core/models/worker.model.ts\n            \n            class\n            BankInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/models/worker.model.ts\n            \n            class\n            SalaryHistory\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/models/worker.model.ts\n            \n            class\n            Worker\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/core/models/worker.model.ts\n            \n            class\n            WorkerBenefits\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/models/worker.model.ts\n            \n            class\n            WorkerSalary\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/core/models/worker.model.ts\n            \n            class\n            WorkerSalaryDeduction\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/pagination.model.ts\n            \n            class\n            Pagination\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/pagination.model.ts\n            \n            class\n            PaginationBuilder\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/repositories/farm.repository.ts\n            \n            injectable\n            FarmRepository\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/core/repositories/owner.repository.ts\n            \n            injectable\n            OwnerRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/repositories/worker.repository.ts\n            \n            injectable\n            WorkerRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/response.model.ts\n            \n            class\n            PaginatedResponseData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/response.model.ts\n            \n            class\n            Response\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/core/response/api-response.builder.ts\n            \n            class\n            ApiResponseBuilder\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/services/farm.service.ts\n            \n            injectable\n            FarmService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/core/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/services/worker.service.ts\n            \n            injectable\n            WorkerService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/rest/controllers/farm.controller.ts\n            \n            controller\n            FarmController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/rest/controllers/worker.controller.ts\n            \n            controller\n            WorkerController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/user/account.interface.ts\n            \n            interface\n            Account\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shared/user/account.service.ts\n            \n            injectable\n            AccountService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/swagger.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                tests/repositories/farm.test.ts\n            \n            variable\n            farmRepository\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @apollo/server : 4.9.5\n        \n            @automapper/classes : 8.7.7\n        \n            @automapper/core : 8.7.7\n        \n            @google-cloud/firestore : 7.1.0\n        \n            @nestjs/apollo : 12.0.11\n        \n            @nestjs/axios : 3.0.1\n        \n            @nestjs/common : 10.3.0\n        \n            @nestjs/config : 3.1.1\n        \n            @nestjs/core : 10.3.0\n        \n            @nestjs/graphql : 12.0.11\n        \n            @nestjs/jwt : 10.2.0\n        \n            @nestjs/mapped-types : 2.0.4\n        \n            @nestjs/passport : 10.0.3\n        \n            @nestjs/platform-express : 10.3.0\n        \n            @nestjs/serve-static : 4.0.0\n        \n            @nestjs/swagger : 7.1.17\n        \n            @nestjs/terminus : 10.2.0\n        \n            @ntegral/nestjs-sendgrid : 1.0.0\n        \n            @sendgrid/mail : 8.1.0\n        \n            @timonmasberg/automapper-nestjs : 0.0.0\n        \n            @whitecloak/nestjs-passport-firebase : 1.0.6\n        \n            class-transformer : 0.5.1\n        \n            class-validator : 0.14.0\n        \n            compression : 1.7.4\n        \n            express : 4.18.2\n        \n            express-session : 1.17.3\n        \n            firebase-admin : 12.0.0\n        \n            firebase-functions : 4.5.0\n        \n            graphql : 16.8.1\n        \n            graphql-subscriptions : 2.0.0\n        \n            helmet : 7.1.0\n        \n            nanoid : 3.3.6\n        \n            nestjs-pino : 3.5.0\n        \n            passport : 0.7.0\n        \n            passport-firebase-jwt : 1.2.1\n        \n            passport-jwt : 4.0.1\n        \n            pino : 8.17.2\n        \n            pino-http : 8.6.1\n        \n            reflect-metadata : 0.2.1\n        \n            rxjs : 7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AreaMeasurementUnit   (src/.../area-measurement.unit.ts)\n                        \n                        \n                            Collections   (src/.../collections.ts)\n                        \n                        \n                            EmployeeStatus   (src/.../worker.model.ts)\n                        \n                        \n                            FarmPurpose   (src/.../farm-purpose.enum.ts)\n                        \n                        \n                            FilterRule   (src/.../filtering.decorator.ts)\n                        \n                        \n                            MilkMeasurementUnit   (src/.../milk-measurement.unit.ts)\n                        \n                        \n                            Roles   (src/.../roles.ts)\n                        \n                        \n                            WeightMeasurementUnit   (src/.../weight-measurement.unit.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/enums/area-measurement.unit.ts\n    \n        \n            \n                \n                    \n                        \n                        AreaMeasurementUnit\n                    \n                \n                        \n                            \n                                 HECTARE\n                            \n                        \n                        \n                            \n                                Value : Hectarea\n                            \n                        \n                        \n                            \n                                 BLOCK\n                            \n                        \n                        \n                            \n                                Value : Manzana\n                            \n                        \n                        \n                            \n                                 SQUAREMETERS\n                            \n                        \n                        \n                            \n                                Value : Metros Cuadrados\n                            \n                        \n            \n        \n\n    src/core/enums/collections.ts\n    \n        \n            \n                \n                    \n                        \n                        Collections\n                    \n                \n                        \n                            \n                                 USERS\n                            \n                        \n                        \n                            \n                                Value : users\n                            \n                        \n                        \n                            \n                                 FARMS\n                            \n                        \n                        \n                            \n                                Value : farms\n                            \n                        \n                        \n                            \n                                 WORKERS\n                            \n                        \n                        \n                            \n                                Value : workers\n                            \n                        \n                        \n                            \n                                 TODOS\n                            \n                        \n                        \n                            \n                                Value : todos\n                            \n                        \n            \n        \n\n    src/core/models/worker.model.ts\n    \n        \n            \n                \n                    \n                        \n                        EmployeeStatus\n                    \n                \n                        \n                            \n                                 PART\n                            \n                        \n                        \n                            \n                                Value : Tiempo parcial\n                            \n                        \n                        \n                            \n                                 FULL\n                            \n                        \n                        \n                            \n                                Value : Tiempo completo\n                            \n                        \n                        \n                            \n                                 CONTRACTOR\n                            \n                        \n                        \n                            \n                                Value : Contratista\n                            \n                        \n                        \n                            \n                                 TEMPORARY\n                            \n                        \n                        \n                            \n                                Value : Temporal\n                            \n                        \n                        \n                            \n                                 INTERN\n                            \n                        \n                        \n                            \n                                Value : Practicas\n                            \n                        \n                        \n                            \n                                 ASSOCIATE\n                            \n                        \n                        \n                            \n                                Value : Asociado\n                            \n                        \n            \n        \n\n    src/core/enums/farm-purpose.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        FarmPurpose\n                    \n                \n                        \n                            \n                                 DOUBLEPURPOSE\n                            \n                        \n                        \n                            \n                                Value : Doble Proposito\n                            \n                        \n                        \n                            \n                                 DAIRYPRODUCTION\n                            \n                        \n                        \n                            \n                                Value : Produccion Lechera\n                            \n                        \n                        \n                            \n                                 MEATPRODUCTION\n                            \n                        \n                        \n                            \n                                Value : Produccion Carnica\n                            \n                        \n            \n        \n\n    src/common/decorators/filtering.decorator.ts\n    \n        \n            \n                \n                    \n                        \n                        FilterRule\n                    \n                \n                        \n                            \n                                 LESS_THAN\n                            \n                        \n                        \n                            \n                                Value : \n                            \n                        \n                        \n                            \n                                 LESS_THAN_OR_EQUALS\n                            \n                        \n                        \n                            \n                                Value : \n                            \n                        \n                        \n                            \n                                 EQUALS\n                            \n                        \n                        \n                            \n                                Value : ==\n                            \n                        \n                        \n                            \n                                 NOT_EQUALS\n                            \n                        \n                        \n                            \n                                Value : !=\n                            \n                        \n                        \n                            \n                                 GREATER_THAN_OR_EQUALS\n                            \n                        \n                        \n                            \n                                Value : >=\n                            \n                        \n                        \n                            \n                                 GREATER_THAN\n                            \n                        \n                        \n                            \n                                Value : >\n                            \n                        \n                        \n                            \n                                 ARRAY_CONTAINS\n                            \n                        \n                        \n                            \n                                Value : array-contains\n                            \n                        \n                        \n                            \n                                 IN\n                            \n                        \n                        \n                            \n                                Value : in\n                            \n                        \n                        \n                            \n                                 NOT_IN\n                            \n                        \n                        \n                            \n                                Value : not-in\n                            \n                        \n                        \n                            \n                                 ARRAY_CONTAINS_ANY\n                            \n                        \n                        \n                            \n                                Value : array-contains-any\n                            \n                        \n            \n        \n\n    src/core/enums/milk-measurement.unit.ts\n    \n        \n            \n                \n                    \n                        \n                        MilkMeasurementUnit\n                    \n                \n                        \n                            \n                                 LITERS\n                            \n                        \n                        \n                            \n                                Value : Litros\n                            \n                        \n                        \n                            \n                                 GALLONS\n                            \n                        \n                        \n                            \n                                Value : Galones\n                            \n                        \n                        \n                            \n                                 BOTTLES\n                            \n                        \n                        \n                            \n                                Value : Botellas\n                            \n                        \n                        \n                            \n                                 PINTS\n                            \n                        \n                        \n                            \n                                Value : Pintas\n                            \n                        \n            \n        \n\n    src/base/roles.ts\n    \n        \n            \n                \n                    \n                        \n                        Roles\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 OWNER\n                            \n                        \n                        \n                            \n                                Value : owner\n                            \n                        \n                        \n                            \n                                 WORKER\n                            \n                        \n                        \n                            \n                                Value : worker\n                            \n                        \n                        \n                            \n                                 VET\n                            \n                        \n                        \n                            \n                                Value : veterinarian\n                            \n                        \n            \n        \n\n    src/core/enums/weight-measurement.unit.ts\n    \n        \n            \n                \n                    \n                        \n                        WeightMeasurementUnit\n                    \n                \n                        \n                            \n                                 KILO\n                            \n                        \n                        \n                            \n                                Value : Kilos\n                            \n                        \n                        \n                            \n                                 POUNDS\n                            \n                        \n                        \n                            \n                                Value : Libras\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../swagger.ts)\n                        \n                        \n                            capitalize   (src/.../string.utils.ts)\n                        \n                        \n                            middleware   (src/.../app.middleware.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    src/common/utils/string.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        capitalize\n                        \n                    \n                \n            \n            \n                \ncapitalize(input: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        middleware\n                        \n                    \n                \n            \n            \n                \nmiddleware(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     INestApplication\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run tests\n\n# e2e tests\n$ npm run tests:e2e\n\n# tests coverage\n$ npm run tests:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccountModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FirestoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RestModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_exports\n\n\n\ncluster_AccountModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_RestModule\n\n\n\ncluster_RestModule_exports\n\n\n\ncluster_RestModule_providers\n\n\n\n\nAccountService \n\nAccountService \n\n\n\nEmailService \n\nEmailService \n\n\n\nAccountModule\n\nAccountModule\n\nAccountService  -->\n\nAccountModule->AccountService \n\n\n\nEmailService  -->\n\nAccountModule->EmailService \n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAccountModule->AuthModule\n\n\n\n\n\nAccountService\n\nAccountService\n\nAccountModule -->\n\nAccountService->AccountModule\n\n\n\n\n\nEmailService\n\nEmailService\n\nAccountModule -->\n\nEmailService->AccountModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nBaseModule\n\nBaseModule\n\nAppModule -->\n\nBaseModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nFirestoreModule\n\nFirestoreModule\n\nAppModule -->\n\nFirestoreModule->AppModule\n\n\n\n\n\nRestModule\n\nRestModule\n\nAppModule -->\n\nRestModule->AppModule\n\n\n\n\n\nFarmService \n\nFarmService \n\nFarmService  -->\n\nRestModule->FarmService \n\n\n\n\n\nWorkerService \n\nWorkerService \n\nWorkerService  -->\n\nRestModule->WorkerService \n\n\n\n\n\nAuthSerializer\n\nAuthSerializer\n\nAuthModule -->\n\nAuthSerializer->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nFarmRepository\n\nFarmRepository\n\nRestModule -->\n\nFarmRepository->RestModule\n\n\n\n\n\nFarmService\n\nFarmService\n\nRestModule -->\n\nFarmService->RestModule\n\n\n\n\n\nWorkerRepository\n\nWorkerRepository\n\nRestModule -->\n\nWorkerRepository->RestModule\n\n\n\n\n\nWorkerService\n\nWorkerService\n\nRestModule -->\n\nWorkerService->RestModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    33 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : Cattle Farm Management API App\n        \n            License : private\n        \n            Author : Herrold H. Real\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Config   (src/.../config.interface.ts)\n                        \n                        \n                            Default   (src/.../config.interface.ts)\n                        \n                        \n                            Objectype   (src/.../config.interface.ts)\n                        \n                        \n                            Production   (src/.../config.interface.ts)\n                        \n                        \n                            TemplateParameter   (src/.../util.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/config.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Config\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Default\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Objectype\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Production\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/common/providers/util.service.ts\n    \n    \n        \n            \n                \n                    \n                    TemplateParameter\n                \n            \n            \n                \n                        any[]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            api   (src/.../app.ts)\n                        \n                        \n                            config   (src/.../default.ts)\n                        \n                        \n                            config   (src/.../development.ts)\n                        \n                        \n                            config   (src/.../production.ts)\n                        \n                        \n                            config   (src/.../test.ts)\n                        \n                        \n                            configuration   (src/.../configuration.ts)\n                        \n                        \n                            createFunctions   (src/.../app.ts)\n                        \n                        \n                            expressServer   (src/.../app.ts)\n                        \n                        \n                            farmRepository   (tests/.../farm.test.ts)\n                        \n                        \n                            FilteringParams   (src/.../filtering.decorator.ts)\n                        \n                        \n                            firestore   (src/.../app.ts)\n                        \n                        \n                            FirestoreCollectionProviders   (src/.../firestore.provider.ts)\n                        \n                        \n                            FirestoreDatabaseProvider   (src/.../firestore.provider.ts)\n                        \n                        \n                            FirestoreOptionsProvider   (src/.../firestore.provider.ts)\n                        \n                        \n                            IS_EMULATOR   (src/.../app.ts)\n                        \n                        \n                            loggerOptions   (src/.../logger.config.ts)\n                        \n                        \n                            PaginationParams   (src/.../pagination.decorator.ts)\n                        \n                        \n                            passUrl   (src/.../logger.config.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                        \n                            ReqUser   (src/.../req-user.decorator.ts)\n                        \n                        \n                            Role   (src/.../role.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../role.decorator.ts)\n                        \n                        \n                            serviceAccount   (src/.../app.ts)\n                        \n                        \n                            services   (src/.../common.module.ts)\n                        \n                        \n                            SortingParams   (src/.../sorting.decorator.ts)\n                        \n                        \n                            util   (src/.../configuration.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        api\n                        \n                    \n                \n            \n                \n                    \n                        Default value : functions.https.onRequest(async (request, response) => {\n  await createFunctions(expressServer);\n  expressServer(request, response);\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (expressInstance): Promise => {\n  const isProduction = process.env.NODE_ENV === 'production';\n  const app = await NestFactory.create(AppModule, new ExpressAdapter(expressInstance));\n\n  if (isProduction) {\n    app.enable('trust proxy');\n  }\n\n  app.enableCors();\n  app.enableVersioning({ type: VersioningType.URI, defaultVersion: '1' });\n  app.useGlobalPipes(new ValidationPipe({ transform: true }));\n  app.useGlobalInterceptors(new LoggerErrorInterceptor());\n  app.enableShutdownHooks();\n\n  // Express Middleware\n  middleware(app);\n\n  await app.init();\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expressServer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firestore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getFirestore()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IS_EMULATOR\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (typeof process.env.FUNCTIONS_EMULATOR === 'boolean' && process.env.FUNCTIONS_EMULATOR) ||\n  process.env.FUNCTIONS_EMULATOR === Boolean('true')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceAccount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : functions.config()['farmflow_firebase_config']\n                    \n                \n\n\n        \n    \n\n    src/config/envs/default.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  db: {\n    // entities: [`${__dirname}/../../entity/**/*.{js,ts}`],\n    // subscribers: [`${__dirname}/../../subscriber/**/*.{js,ts}`],\n    // migrations: [`${__dirname}/../../migration/**/*.{js,ts}`],\n  },\n  graphql: {\n    debug: true,\n    playground: {\n      settings: {\n        'request.credentials': 'include',\n      },\n    },\n    /* resolvers: {\n      AreaMeasurementUnit: areaMeasureUnitTypeResolver,\n      MilkMeasurementUnit: milkMeasureUnitTypeResolver,\n      WeightMeasurementUnit: weightMeasurementUnitResolver,\n      FarmPurpose: farmPurposeResolver,\n    },*/\n    autoSchemaFile: true,\n    autoTransformHttpErrors: true,\n    cors: { credentials: true },\n    sortSchema: true,\n    installSubscriptionHandlers: true,\n  },\n  jwtSecret: process.env.JWT_SECRET,\n  jwtRefreshSecret: process.env.JWT_REFRESH_SECRET,\n}\n                    \n                \n\n\n        \n    \n\n    src/config/envs/development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  db: {\n    type: process.env.DB_TYPE || 'mysql',\n    synchronize: false,\n    logging: true,\n    host: process.env.DB_HOST || '127.0.0.1',\n    port: process.env.DB_PORT || 3306,\n    username: process.env.DB_USER || 'username',\n    password: process.env.DB_PASSWORD || 'password',\n    database: process.env.DB_NAME || 'dbname',\n    sa_key: process.env.SA_KEY || '',\n    project_id: process.env.PROJECT_ID || '',\n    client_email: process.env.CLIENT_EMAIL || '',\n    private_key: process.env.PRIVATE_KEY || '',\n    extra: {\n      connectionLimit: 10,\n    },\n    autoLoadEntities: true,\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/config/envs/production.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  db: {\n    type: process.env.DB_TYPE || 'mysql',\n    synchronize: false,\n    logging: false,\n    replication: {\n      master: {\n        host: process.env.DB_HOST || 'masterHost',\n        port: process.env.DB_PORT || 3306,\n        username: process.env.DB_USER || 'username',\n        password: process.env.DB_PASSWORD || 'password',\n        database: process.env.DB_NAME || 'dbname',\n      },\n      slaves: [\n        {\n          // fix if necessary\n          host: 'slaveHost',\n          port: 3306,\n          username: 'username',\n          password: 'password',\n          database: 'dbname',\n        },\n      ],\n    },\n    extra: {\n      connectionLimit: 30,\n    },\n    autoLoadEntities: true,\n  },\n  graphql: {\n    debug: false,\n    playground: false,\n    /* resolvers: {\n      AreaMeasurementUnit: areaMeasureUnitTypeResolver,\n      MilkMeasurementUnit: milkMeasureUnitTypeResolver,\n      WeightMeasurementUnit: weightMeasurementUnitResolver,\n      FarmPurpose: farmPurposeResolver,\n    },*/\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/config/envs/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  db: {\n    type: 'mysql',\n    synchronize: false,\n    logging: false,\n    host: process.env.DB_HOST || '127.0.0.1',\n    port: process.env.DB_PORT || 3306,\n    username: process.env.DB_USER || 'username',\n    password: process.env.DB_PASSWORD || 'password',\n    database: process.env.DB_NAME || 'dbname',\n    extra: {\n      connectionLimit: 5,\n    },\n    autoLoadEntities: true,\n  },\n  graphql: {\n    playground: false,\n    /* resolvers: {\n      AreaMeasurementUnit: areaMeasureUnitTypeResolver,\n      MilkMeasurementUnit: milkMeasureUnitTypeResolver,\n      WeightMeasurementUnit: weightMeasurementUnitResolver,\n      FarmPurpose: farmPurposeResolver,\n    },*/\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/config/configuration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (): Promise => {\n  const { config } = await import(`${__dirname}/envs/default`);\n  const { config: environment } = (\n    await import(`${__dirname}/envs/${process.env.NODE_ENV || 'development'}`)\n  );\n\n  // object deep merge\n  return util.merge(config, environment);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        util\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  isObject(value: T): value is T & Objectype {\n    return value !== null && typeof value === 'object' && !Array.isArray(value);\n  },\n  merge(target: T, source: U): T & U {\n    for (const key of Object.keys(source)) {\n      const targetValue = target[key];\n      const sourceValue = source[key];\n      if (this.isObject(targetValue) && this.isObject(sourceValue)) {\n        Object.assign(sourceValue, this.merge(targetValue, sourceValue));\n      }\n    }\n\n    return { ...target, ...source };\n  },\n}\n                    \n                \n\n\n        \n    \n\n    tests/repositories/farm.test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        farmRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         jest.Mocked\n\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/filtering.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FilteringParams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: string[], ctx: ExecutionContext) => {\n  const req: Request = ctx.switchToHttp().getRequest();\n  const filter = req.query['filter'];\n  if (!filter) return null;\n\n  // check if the valid params sent is an array\n  if (!Array.isArray(data)) throw new BadRequestException('Filter parameter must be a Array');\n\n  // validate the format of the filter, if the rule is 'isnull' or 'isnotnull' it don't need to have a value\n  if (\n    !filter.match(/^[a-zA-Z0-9_]+:(=|>|array-contains|in|not-in|array-contains-any):[a-zA-Z0-9_,]+$/) &&\n    !filter.match(/^[a-zA-Z0-9_]+:(isnull|isnotnull)$/)\n  ) {\n    throw new BadRequestException('Pattern of filter are invalid');\n  }\n\n  const filters = filter.split(':');\n  const property = filters[0];\n  const rule = filters[1];\n  const value = filters[2];\n\n  if (!data.includes(property)) throw new BadRequestException(`Invalid filter property: ${property}`);\n  if (!Object.values(FilterRule).includes(rule))\n    throw new BadRequestException(`Invalid filter rule: ${rule}`);\n\n  const filtering: Filtering = {\n    property,\n    rule,\n    value,\n  };\n  return filtering;\n})\n                    \n                \n\n\n        \n    \n\n    src/common/db/firestore.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FirestoreCollectionProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['users', 'todos', 'farms', 'workers']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FirestoreDatabaseProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'firestoredb'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FirestoreOptionsProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'firestoreOptions'\n                    \n                \n\n\n        \n    \n\n    src/config/logger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loggerOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Params\n\n                    \n                \n                \n                    \n                        Default value : {\n  pinoHttp: [\n    {\n      // https://getpino.io/#/docs/api?id=timestamp-boolean-function\n      // Change time value in production log.\n      // timestamp: stdTimeFunctions.isoTime,\n      quietReqLogger: true,\n      genReqId: (req): ReqId => (req).header('X-Request-Id') ?? nanoid(),\n      ...(process.env.NODE_ENV === 'production'\n        ? {}\n        : {\n            level: 'debug',\n            // https://github.com/pinojs/pino-pretty\n            transport: {\n              target: 'pino-pretty',\n              options: { sync: true, singleLine: true },\n            },\n          }),\n      autoLogging: {\n        ignore: (req) => passUrl.has((req).originalUrl),\n      },\n      customProps: (req) => (req).customProps,\n    },\n    multistream(\n      [\n        // https://getpino.io/#/docs/help?id=log-to-different-streams\n        { level: 'debug', stream: process.stdout },\n        { level: 'error', stream: process.stderr },\n        { level: 'fatal', stream: process.stderr },\n      ],\n      { dedupe: true },\n    ),\n  ],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Set(['/health', '/graphql'])\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/pagination.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PaginationParams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: unknown, ctx: ExecutionContext): Pagination => {\n  const req: Request = ctx.switchToHttp().getRequest();\n  const limit = Number(req.query['limit']);\n  const lastDoc: string = req.query['lastDoc'];\n\n  // check if page and size are valid\n  if (Number.isNaN(limit) || limit  100) {\n    throw new BadRequestException('Invalid pagination params: Max size is 100');\n  }\n\n  return { limit, lastDoc };\n})\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): CustomDecorator => SetMetadata('isPublic', true)\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/req-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ReqUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((context: ExecutionContext) => {\n  let request: Request;\n\n  if (context.getType() === 'graphql') {\n    const ctx = GqlExecutionContext.create(context).getContext();\n    request = ctx.req;\n  } else {\n    request = context.switchToHttp().getRequest();\n  }\n\n  return request.user;\n})\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/role.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Role\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Roles[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n\n        \n    \n\n    src/common/common.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        services\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(providers)\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/sorting.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SortingParams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((validParams, ctx: ExecutionContext): Sorting | null => {\n  const req: Request = ctx.switchToHttp().getRequest();\n  const sort = req.query['sort'];\n\n  if (!sort) return null;\n  if (!Array.isArray(validParams)) throw new BadRequestException('Invalid sort parameter');\n\n  const sortPattern = /^([a-zA-Z0-9]+):(asc|desc)$/;\n  if (!sort.match(sortPattern)) throw new BadRequestException('Invalid sort parameter');\n\n  const sortOptions = sort.split(':');\n  const property = sortOptions[0];\n  const direction: OrderByDirection = sortOptions[1];\n\n  if (!validParams.includes(property)) throw new BadRequestException(`Invalid sort property: ${property}`);\n\n  return { property, direction };\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
